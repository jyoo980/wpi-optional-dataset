Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DeclaredMembers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ScopeAnnotation.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ConstructorBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealOptionalBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvidesMethodBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Element.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/BindingTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/AnnotatedBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/RequireExactBindingAnnotationsOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeListenerBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvidedByInternalFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ConvertedConstantBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MissingConstructorError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealElement.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/UntargettedBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalContext.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProxyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/Enhancer.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorShell.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/UntargettedBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MultibindingsScanner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalProvisionException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/LinkedBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/AbstractModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MembersInjectorStore.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ExposedBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InstanceBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructorInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorOptionsProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MessageProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderKeyBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvisionListenerBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Messages.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/MethodPartition.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ModuleAnnotatedMethodScannerProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/OptionalBinderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Stage.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/ScopedBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DefaultElementVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Annotations.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/LinkedProviderBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/TypeLiteral.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ClassMapKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/LinkedKeyBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/AbstractBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorJitBindingData.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/Classes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ErrorDetail.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MapKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InstanceBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ListenerBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingletonScope.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstantFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DefaultConstructionProxyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/PrivateModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvisionListenerStackCallback.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/GuiceInternal.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Elements.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/Multibinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ElementVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/GeneratedClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructionProxyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/ContinuousStopwatch.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionPoint.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvisionListenerCallbackStore.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PrivateElementProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleMemberInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/KotlinSupportInterface.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MultibindingsTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/HasDependencies.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/PrivateBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructionContext.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/NewThrowableFinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/ConstantBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Initializer.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFactoryToProviderAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DefaultBindingTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ImplementedBy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ScopeBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/CreationException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ScopeNotFoundError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ClassBuilding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InterceptorStackCallback.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorId.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFactoryToInitializableAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/CallerFinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/LinkedBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BytecodeGen.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/OptionalBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Enhanced.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MissingImplementationError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFlags.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ConfigurationException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PackageNameCompressor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/PrivateElements.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/RequireExplicitBindingsOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Injector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/OutOfScopeException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PrivateElementsImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/GlueException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorFormatter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DefaultBindingScopingVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Provides.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MembersInjectorImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Providers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Exposed.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Element.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/Matcher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/AnnotatedElementBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/AbstractBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/WeakKeySet.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/UntargettedBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/FastClass.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/RestrictedBindingSource.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ExposureBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Scope.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BoundProviderFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/FailableCache.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalProviderInstanceBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Toolable.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Module.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ChildBindingAlreadySetError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeGetter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ImmutableStringTrie.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DeferredLookups.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealMultibinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/BindingAnnotation.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/AnnotatedConstantBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/AbstractMatcher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Initializables.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalClassesToSkipSources.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MultibinderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderWithDependencies.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ClassDefining.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/EncounterImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/KotlinSupport.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/SourceProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Binder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeEncounter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/NamedImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DelayedInitialize.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Modules.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/MembersInjectorLookup.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleMethodInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/LineNumbers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderLookup.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Scopes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DisableCircularProxiesOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Singleton.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ProvidesIntoMap.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ExposedKeyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/StackTraceElements.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/BindingSourceRestriction.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeConverterBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Errors.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Key.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ProvidesIntoOptional.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleParameterInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ProvidesIntoSet.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstantBindingBuilderImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingAlreadySetError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorBindingData.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvidesMethodTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/StaticInjectionRequest.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DuplicateElementError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvidesMethodScanner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Initializable.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ChildClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Types.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/AnonymousClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MapBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderInstanceBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/BytecodeTasks.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderWithExtensionVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SourceFormatter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProcessedBindingData.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/TypeConverterBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ProvidedBy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructionProxy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Message.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DelegatingInvocationHandler.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/CreationListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalInjectorCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleFieldInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ModuleAnnotatedMethodScannerBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/MembersInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/GenericErrorDetail.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderInternalFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Guice.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvisionListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorsException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MapBinderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/AbstractProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/LookupProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ExposedBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructorBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionRequest.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Scoping.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MethodAspect.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/UniqueAnnotations.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/CycleDetectingLock.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MissingImplementationErrorHints.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Indexer.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/StringMapKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderMethodsModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealMapBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Inject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructorInjectorStore.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalErrorDetail.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ElementSource.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Provider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InterceptorBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/FactoryProxy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ModuleSource.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/Matchers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/BindingScopingVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderToInternalFactoryAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/RequireAtInjectOnConstructorsOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InterceptorBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/Named.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/HiddenClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorHandler.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/Names.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderInstanceBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DuplicateMapKeyError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectionRequestProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/EnhancerBuilderImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Nullability.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Lookups.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeConverter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Binding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/AbstractGlueGenerator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ProvisionException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ModuleAnnotatedMethodScanner.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:436: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
          && MoreTypes.equals(this, (ParameterizedType) other);
                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:441: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting hashCodeOrZero not allowed in deterministic side-effect-free method
      return Arrays.hashCode(typeArguments) ^ rawType.hashCode() ^ hashCodeOrZero(ownerType);
                                                                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:447: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
      stringBuilder.append(typeToString(rawType));
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:447: warning: [purity.not.sideeffectfree.call] call to side-effecting typeToString not allowed in side-effect-free method
      stringBuilder.append(typeToString(rawType));
                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:453: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append('<').append not allowed in side-effect-free method
      stringBuilder.append('<').append(typeToString(typeArguments[0]));
                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:453: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
      stringBuilder.append('<').append(typeToString(typeArguments[0]));
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:453: warning: [purity.not.sideeffectfree.call] call to side-effecting typeToString not allowed in side-effect-free method
      stringBuilder.append('<').append(typeToString(typeArguments[0]));
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:455: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append(", ").append not allowed in side-effect-free method
        stringBuilder.append(", ").append(typeToString(typeArguments[i]));
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:455: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
        stringBuilder.append(", ").append(typeToString(typeArguments[i]));
                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:455: warning: [purity.not.sideeffectfree.call] call to side-effecting typeToString not allowed in side-effect-free method
        stringBuilder.append(", ").append(typeToString(typeArguments[i]));
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:457: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
      return stringBuilder.append('>').toString();
                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:446: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
      StringBuilder stringBuilder = new StringBuilder(30 * (typeArguments.length + 1));
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:497: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
      return o instanceof GenericArrayType && MoreTypes.equals(this, (GenericArrayType) o);
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:507: warning: [purity.not.sideeffectfree.call] call to side-effecting typeToString not allowed in side-effect-free method
      return typeToString(componentType) + "[]";
                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:559: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
      return other instanceof WildcardType && MoreTypes.equals(this, (WildcardType) other);
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:571: warning: [purity.not.sideeffectfree.call] call to side-effecting typeToString not allowed in side-effect-free method
        return "? super " + typeToString(lowerBound);
                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:575: warning: [purity.not.sideeffectfree.call] call to side-effecting typeToString not allowed in side-effect-free method
        return "? extends " + typeToString(upperBound);
                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionPoint.java:229: warning: [purity.not.sideeffectfree.call] call to side-effecting Classes.toString not allowed in side-effect-free method
    return Classes.toString(member);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/TypeLiteral.java:135: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
    return o instanceof TypeLiteral<?> && MoreTypes.equals(type, ((TypeLiteral) o).type);
                                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/TypeLiteral.java:140: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreTypes.typeToString not allowed in side-effect-free method
    return MoreTypes.typeToString(type);
                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:98: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(injectionPoint, parameterIndex, key);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:105: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
      return Objects.equal(injectionPoint, dependency.injectionPoint)
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:116: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append not allowed in side-effect-free method
    builder.append(key);
                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:118: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append('@').append not allowed in side-effect-free method
      builder.append('@').append(injectionPoint);
                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:118: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append not allowed in side-effect-free method
      builder.append('@').append(injectionPoint);
                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:120: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append('[').append(parameterIndex).append not allowed in side-effect-free method
        builder.append('[').append(parameterIndex).append(']');
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:120: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append('[').append not allowed in side-effect-free method
        builder.append('[').append(parameterIndex).append(']');
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:120: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append not allowed in side-effect-free method
        builder.append('[').append(parameterIndex).append(']');
                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:115: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
    StringBuilder builder = new StringBuilder();
                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Key.java:212: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
      toString = local;
      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Key.java:516: warning: [purity.not.sideeffectfree.call] call to side-effecting Annotations.annotationInstanceClassString not allowed in side-effect-free method
      return Annotations.annotationInstanceClassString(annotationType, /* includePackage= */ true);
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Message.java:132: warning: [purity.not.sideeffectfree.call] call to side-effecting errorDetail.getMessage not allowed in side-effect-free method
    return errorDetail.getMessage();
                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeConverterBinding.java:80: warning: [purity.not.sideeffectfree.call] call to side-effecting Errors.convert not allowed in side-effect-free method
        + Errors.convert(source)
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:78: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(ScopeBinding.class).add("annotationType", annotationType).add("scope", scope).add not allowed in side-effect-free method
        .add("source", Errors.convert(source))
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:77: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(ScopeBinding.class).add("annotationType", annotationType).add not allowed in side-effect-free method
        .add("scope", scope)
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(ScopeBinding.class).add not allowed in side-effect-free method
        .add("annotationType", annotationType)
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:75: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(ScopeBinding.class)
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:78: warning: [purity.not.sideeffectfree.call] call to side-effecting Errors.convert not allowed in side-effect-free method
        .add("source", Errors.convert(source))
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ElementSource.java:128: warning: [purity.not.sideeffectfree.call] call to side-effecting getDeclaringSource not allowed in side-effect-free method
    return getDeclaringSource().toString();
                             ^
39 warnings
An exception has occurred in the compiler (11.0.19). Please file a bug against the Java compiler via the Java bug reporting page (https://bugreport.java.com) after checking the Bug Database (https://bugs.java.com) for duplicates. Include your program and the following diagnostic in your report. Thank you.
com.sun.tools.javac.util.ClientCodeException: com.github.javaparser.ParseProblemException: (line 141,col 47) 'permits' cannot be used as an identifier as it is a keyword.
(line 143,col 41) 'permits' cannot be used as an identifier as it is a keyword.
(line 144,col 32) 'permits' cannot be used as an identifier as it is a keyword.

	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:832)
	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
Caused by: com.github.javaparser.ParseProblemException: (line 141,col 47) 'permits' cannot be used as an identifier as it is a keyword.
(line 143,col 41) 'permits' cannot be used as an identifier as it is a keyword.
(line 144,col 32) 'permits' cannot be used as an identifier as it is a keyword.

	at org.checkerframework.framework.util.JavaParserUtil.parseCompilationUnit(JavaParserUtil.java:94)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.addSourceFile(WholeProgramInferenceJavaParserStorage.java:631)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.addClassTree(WholeProgramInferenceJavaParserStorage.java:610)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.preprocessClassTree(WholeProgramInferenceJavaParserStorage.java:586)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.preprocessClassTree(WholeProgramInferenceImplementation.java:1150)
	at org.checkerframework.framework.type.AnnotatedTypeFactory.setRoot(AnnotatedTypeFactory.java:902)
	at org.checkerframework.framework.type.GenericAnnotatedTypeFactory.setRoot(GenericAnnotatedTypeFactory.java:444)
	at org.checkerframework.common.basetype.BaseTypeVisitor.setRoot(BaseTypeVisitor.java:382)
	at org.checkerframework.framework.source.SourceChecker.setRoot(SourceChecker.java:662)
	at org.checkerframework.common.basetype.BaseTypeChecker.setRoot(BaseTypeChecker.java:167)
	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1025)
	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
	... 8 more
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024515-u8p6vwi9/iteration0' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DeclaredMembers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ScopeAnnotation.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ConstructorBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealOptionalBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvidesMethodBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Element.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/BindingTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/AnnotatedBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/RequireExactBindingAnnotationsOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeListenerBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvidedByInternalFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ConvertedConstantBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MissingConstructorError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealElement.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/UntargettedBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalContext.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProxyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/Enhancer.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorShell.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/UntargettedBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MultibindingsScanner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalProvisionException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/LinkedBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/AbstractModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MembersInjectorStore.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ExposedBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InstanceBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructorInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorOptionsProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MessageProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderKeyBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvisionListenerBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Messages.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/MethodPartition.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ModuleAnnotatedMethodScannerProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/OptionalBinderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Stage.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/ScopedBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DefaultElementVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Annotations.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/LinkedProviderBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/TypeLiteral.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ClassMapKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/LinkedKeyBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/AbstractBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorJitBindingData.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/Classes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ErrorDetail.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MapKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InstanceBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ListenerBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingletonScope.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstantFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DefaultConstructionProxyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/PrivateModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvisionListenerStackCallback.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/GuiceInternal.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Elements.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/Multibinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ElementVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/GeneratedClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructionProxyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/ContinuousStopwatch.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionPoint.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvisionListenerCallbackStore.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PrivateElementProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleMemberInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/KotlinSupportInterface.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MultibindingsTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/HasDependencies.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/PrivateBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructionContext.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/NewThrowableFinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/ConstantBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Initializer.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFactoryToProviderAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DefaultBindingTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ImplementedBy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ScopeBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/CreationException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ScopeNotFoundError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ClassBuilding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InterceptorStackCallback.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorId.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFactoryToInitializableAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/CallerFinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/LinkedBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BytecodeGen.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/OptionalBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Enhanced.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MissingImplementationError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFlags.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ConfigurationException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PackageNameCompressor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/PrivateElements.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/RequireExplicitBindingsOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Injector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/OutOfScopeException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PrivateElementsImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/GlueException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorFormatter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DefaultBindingScopingVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Provides.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MembersInjectorImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Providers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Exposed.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Element.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/Matcher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/AnnotatedElementBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/AbstractBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/WeakKeySet.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/UntargettedBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/FastClass.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/RestrictedBindingSource.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ExposureBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Scope.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BoundProviderFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/FailableCache.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalProviderInstanceBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Toolable.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Module.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ChildBindingAlreadySetError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeGetter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ImmutableStringTrie.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DeferredLookups.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealMultibinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/BindingAnnotation.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/AnnotatedConstantBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/AbstractMatcher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Initializables.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalClassesToSkipSources.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MultibinderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderWithDependencies.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ClassDefining.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/EncounterImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/KotlinSupport.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/SourceProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Binder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeEncounter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/NamedImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DelayedInitialize.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Modules.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/MembersInjectorLookup.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleMethodInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/LineNumbers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderLookup.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Scopes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DisableCircularProxiesOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Singleton.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ProvidesIntoMap.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ExposedKeyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/StackTraceElements.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/BindingSourceRestriction.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeConverterBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Errors.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Key.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ProvidesIntoOptional.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleParameterInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ProvidesIntoSet.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstantBindingBuilderImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingAlreadySetError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorBindingData.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvidesMethodTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/StaticInjectionRequest.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DuplicateElementError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvidesMethodScanner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Initializable.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ChildClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Types.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/AnonymousClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MapBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderInstanceBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/BytecodeTasks.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderWithExtensionVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SourceFormatter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProcessedBindingData.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/TypeConverterBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ProvidedBy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructionProxy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Message.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DelegatingInvocationHandler.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/CreationListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalInjectorCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleFieldInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ModuleAnnotatedMethodScannerBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/MembersInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/GenericErrorDetail.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderInternalFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Guice.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvisionListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorsException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MapBinderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/AbstractProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/LookupProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ExposedBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructorBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionRequest.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Scoping.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MethodAspect.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/UniqueAnnotations.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/CycleDetectingLock.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MissingImplementationErrorHints.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Indexer.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/StringMapKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderMethodsModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealMapBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Inject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructorInjectorStore.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalErrorDetail.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ElementSource.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Provider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InterceptorBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/FactoryProxy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ModuleSource.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/Matchers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/BindingScopingVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderToInternalFactoryAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/RequireAtInjectOnConstructorsOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InterceptorBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/Named.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/HiddenClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorHandler.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/Names.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderInstanceBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DuplicateMapKeyError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectionRequestProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/EnhancerBuilderImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Nullability.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Lookups.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeConverter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Binding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/AbstractGlueGenerator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ProvisionException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ModuleAnnotatedMethodScanner.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:436: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
          && MoreTypes.equals(this, (ParameterizedType) other);
                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:447: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
      stringBuilder.append(typeToString(rawType));
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:453: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append('<').append not allowed in side-effect-free method
      stringBuilder.append('<').append(typeToString(typeArguments[0]));
                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:453: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
      stringBuilder.append('<').append(typeToString(typeArguments[0]));
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:455: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append(", ").append not allowed in side-effect-free method
        stringBuilder.append(", ").append(typeToString(typeArguments[i]));
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:455: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
        stringBuilder.append(", ").append(typeToString(typeArguments[i]));
                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:457: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
      return stringBuilder.append('>').toString();
                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:446: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
      StringBuilder stringBuilder = new StringBuilder(30 * (typeArguments.length + 1));
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:497: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
      return o instanceof GenericArrayType && MoreTypes.equals(this, (GenericArrayType) o);
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:559: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
      return other instanceof WildcardType && MoreTypes.equals(this, (WildcardType) other);
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionPoint.java:229: warning: [purity.not.sideeffectfree.call] call to side-effecting Classes.toString not allowed in side-effect-free method
    return Classes.toString(member);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/TypeLiteral.java:135: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
    return o instanceof TypeLiteral<?> && MoreTypes.equals(type, ((TypeLiteral) o).type);
                                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:98: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(injectionPoint, parameterIndex, key);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:105: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
      return Objects.equal(injectionPoint, dependency.injectionPoint)
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:116: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append not allowed in side-effect-free method
    builder.append(key);
                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:118: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append('@').append not allowed in side-effect-free method
      builder.append('@').append(injectionPoint);
                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:118: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append not allowed in side-effect-free method
      builder.append('@').append(injectionPoint);
                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:120: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append('[').append(parameterIndex).append not allowed in side-effect-free method
        builder.append('[').append(parameterIndex).append(']');
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:120: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append('[').append not allowed in side-effect-free method
        builder.append('[').append(parameterIndex).append(']');
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:120: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append not allowed in side-effect-free method
        builder.append('[').append(parameterIndex).append(']');
                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:115: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
    StringBuilder builder = new StringBuilder();
                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Key.java:212: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
      toString = local;
      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Key.java:516: warning: [purity.not.sideeffectfree.call] call to side-effecting Annotations.annotationInstanceClassString not allowed in side-effect-free method
      return Annotations.annotationInstanceClassString(annotationType, /* includePackage= */ true);
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Message.java:132: warning: [purity.not.sideeffectfree.call] call to side-effecting errorDetail.getMessage not allowed in side-effect-free method
    return errorDetail.getMessage();
                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeConverterBinding.java:80: warning: [purity.not.sideeffectfree.call] call to side-effecting Errors.convert not allowed in side-effect-free method
        + Errors.convert(source)
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:78: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(ScopeBinding.class).add("annotationType", annotationType).add("scope", scope).add not allowed in side-effect-free method
        .add("source", Errors.convert(source))
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:77: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(ScopeBinding.class).add("annotationType", annotationType).add not allowed in side-effect-free method
        .add("scope", scope)
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(ScopeBinding.class).add not allowed in side-effect-free method
        .add("annotationType", annotationType)
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:75: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(ScopeBinding.class)
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:78: warning: [purity.not.sideeffectfree.call] call to side-effecting Errors.convert not allowed in side-effect-free method
        .add("source", Errors.convert(source))
                                     ^
30 warnings
An exception has occurred in the compiler (11.0.19). Please file a bug against the Java compiler via the Java bug reporting page (https://bugreport.java.com) after checking the Bug Database (https://bugs.java.com) for duplicates. Include your program and the following diagnostic in your report. Thank you.
com.sun.tools.javac.util.ClientCodeException: com.github.javaparser.ParseProblemException: (line 141,col 47) 'permits' cannot be used as an identifier as it is a keyword.
(line 143,col 41) 'permits' cannot be used as an identifier as it is a keyword.
(line 144,col 32) 'permits' cannot be used as an identifier as it is a keyword.

	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:832)
	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
Caused by: com.github.javaparser.ParseProblemException: (line 141,col 47) 'permits' cannot be used as an identifier as it is a keyword.
(line 143,col 41) 'permits' cannot be used as an identifier as it is a keyword.
(line 144,col 32) 'permits' cannot be used as an identifier as it is a keyword.

	at org.checkerframework.framework.util.JavaParserUtil.parseCompilationUnit(JavaParserUtil.java:94)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.addSourceFile(WholeProgramInferenceJavaParserStorage.java:631)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.addClassTree(WholeProgramInferenceJavaParserStorage.java:610)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.preprocessClassTree(WholeProgramInferenceJavaParserStorage.java:586)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.preprocessClassTree(WholeProgramInferenceImplementation.java:1150)
	at org.checkerframework.framework.type.AnnotatedTypeFactory.setRoot(AnnotatedTypeFactory.java:902)
	at org.checkerframework.framework.type.GenericAnnotatedTypeFactory.setRoot(GenericAnnotatedTypeFactory.java:444)
	at org.checkerframework.common.basetype.BaseTypeVisitor.setRoot(BaseTypeVisitor.java:382)
	at org.checkerframework.framework.source.SourceChecker.setRoot(SourceChecker.java:662)
	at org.checkerframework.common.basetype.BaseTypeChecker.setRoot(BaseTypeChecker.java:167)
	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1025)
	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
	... 8 more
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024515-u8p6vwi9/iteration1' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DeclaredMembers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ScopeAnnotation.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ConstructorBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealOptionalBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvidesMethodBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Element.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/BindingTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/AnnotatedBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/RequireExactBindingAnnotationsOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeListenerBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvidedByInternalFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ConvertedConstantBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MissingConstructorError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealElement.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/UntargettedBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalContext.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProxyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/Enhancer.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorShell.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/UntargettedBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MultibindingsScanner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalProvisionException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/LinkedBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/AbstractModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MembersInjectorStore.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ExposedBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InstanceBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructorInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorOptionsProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MessageProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderKeyBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvisionListenerBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Messages.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/MethodPartition.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ModuleAnnotatedMethodScannerProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/OptionalBinderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Stage.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/ScopedBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DefaultElementVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Annotations.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/LinkedProviderBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/TypeLiteral.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ClassMapKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/LinkedKeyBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/AbstractBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorJitBindingData.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/Classes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ErrorDetail.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MapKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InstanceBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ListenerBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingletonScope.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstantFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DefaultConstructionProxyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/PrivateModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvisionListenerStackCallback.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/GuiceInternal.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Elements.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/Multibinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ElementVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/GeneratedClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructionProxyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/ContinuousStopwatch.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionPoint.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvisionListenerCallbackStore.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PrivateElementProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleMemberInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/KotlinSupportInterface.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MultibindingsTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/HasDependencies.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/PrivateBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructionContext.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/NewThrowableFinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/ConstantBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Initializer.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFactoryToProviderAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DefaultBindingTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ImplementedBy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ScopeBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/CreationException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ScopeNotFoundError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ClassBuilding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InterceptorStackCallback.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorId.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFactoryToInitializableAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/CallerFinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/LinkedBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BytecodeGen.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/OptionalBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Enhanced.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MissingImplementationError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFlags.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ConfigurationException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PackageNameCompressor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/PrivateElements.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/RequireExplicitBindingsOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Injector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/OutOfScopeException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PrivateElementsImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/GlueException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorFormatter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DefaultBindingScopingVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Provides.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MembersInjectorImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Providers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Exposed.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Element.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/Matcher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/AnnotatedElementBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/AbstractBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/WeakKeySet.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/UntargettedBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/FastClass.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/RestrictedBindingSource.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ExposureBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Scope.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BoundProviderFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/FailableCache.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalProviderInstanceBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Toolable.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Module.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ChildBindingAlreadySetError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeGetter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ImmutableStringTrie.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DeferredLookups.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealMultibinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/BindingAnnotation.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/AnnotatedConstantBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/AbstractMatcher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Initializables.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalClassesToSkipSources.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MultibinderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderWithDependencies.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ClassDefining.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/EncounterImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/KotlinSupport.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/SourceProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Binder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeEncounter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/NamedImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DelayedInitialize.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Modules.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/MembersInjectorLookup.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleMethodInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/LineNumbers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderLookup.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Scopes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DisableCircularProxiesOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Singleton.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ProvidesIntoMap.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ExposedKeyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/StackTraceElements.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/BindingSourceRestriction.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeConverterBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Errors.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Key.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ProvidesIntoOptional.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleParameterInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ProvidesIntoSet.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstantBindingBuilderImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingAlreadySetError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorBindingData.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvidesMethodTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/StaticInjectionRequest.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DuplicateElementError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvidesMethodScanner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Initializable.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ChildClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Types.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/AnonymousClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MapBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderInstanceBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/BytecodeTasks.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderWithExtensionVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SourceFormatter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProcessedBindingData.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/TypeConverterBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ProvidedBy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructionProxy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Message.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DelegatingInvocationHandler.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/CreationListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalInjectorCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleFieldInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ModuleAnnotatedMethodScannerBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/MembersInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/GenericErrorDetail.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderInternalFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Guice.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvisionListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorsException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MapBinderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/AbstractProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/LookupProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ExposedBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructorBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionRequest.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Scoping.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MethodAspect.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/UniqueAnnotations.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/CycleDetectingLock.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MissingImplementationErrorHints.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Indexer.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/StringMapKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderMethodsModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealMapBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Inject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructorInjectorStore.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalErrorDetail.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ElementSource.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Provider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InterceptorBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/FactoryProxy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ModuleSource.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/Matchers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/BindingScopingVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderToInternalFactoryAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/RequireAtInjectOnConstructorsOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InterceptorBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/Named.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/HiddenClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorHandler.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/Names.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderInstanceBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DuplicateMapKeyError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectionRequestProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/EnhancerBuilderImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Nullability.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Lookups.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeConverter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Binding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/AbstractGlueGenerator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ProvisionException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ModuleAnnotatedMethodScanner.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:436: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
          && MoreTypes.equals(this, (ParameterizedType) other);
                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:447: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
      stringBuilder.append(typeToString(rawType));
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:453: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append('<').append not allowed in side-effect-free method
      stringBuilder.append('<').append(typeToString(typeArguments[0]));
                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:453: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
      stringBuilder.append('<').append(typeToString(typeArguments[0]));
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:455: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append(", ").append not allowed in side-effect-free method
        stringBuilder.append(", ").append(typeToString(typeArguments[i]));
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:455: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
        stringBuilder.append(", ").append(typeToString(typeArguments[i]));
                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:457: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
      return stringBuilder.append('>').toString();
                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:446: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
      StringBuilder stringBuilder = new StringBuilder(30 * (typeArguments.length + 1));
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:497: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
      return o instanceof GenericArrayType && MoreTypes.equals(this, (GenericArrayType) o);
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:559: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
      return other instanceof WildcardType && MoreTypes.equals(this, (WildcardType) other);
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionPoint.java:229: warning: [purity.not.sideeffectfree.call] call to side-effecting Classes.toString not allowed in side-effect-free method
    return Classes.toString(member);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/TypeLiteral.java:135: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
    return o instanceof TypeLiteral<?> && MoreTypes.equals(type, ((TypeLiteral) o).type);
                                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:98: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(injectionPoint, parameterIndex, key);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:105: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
      return Objects.equal(injectionPoint, dependency.injectionPoint)
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:116: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append not allowed in side-effect-free method
    builder.append(key);
                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:118: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append('@').append not allowed in side-effect-free method
      builder.append('@').append(injectionPoint);
                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:118: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append not allowed in side-effect-free method
      builder.append('@').append(injectionPoint);
                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:120: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append('[').append(parameterIndex).append not allowed in side-effect-free method
        builder.append('[').append(parameterIndex).append(']');
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:120: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append('[').append not allowed in side-effect-free method
        builder.append('[').append(parameterIndex).append(']');
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:120: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append not allowed in side-effect-free method
        builder.append('[').append(parameterIndex).append(']');
                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:115: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
    StringBuilder builder = new StringBuilder();
                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Key.java:212: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
      toString = local;
      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Key.java:516: warning: [purity.not.sideeffectfree.call] call to side-effecting Annotations.annotationInstanceClassString not allowed in side-effect-free method
      return Annotations.annotationInstanceClassString(annotationType, /* includePackage= */ true);
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Message.java:132: warning: [purity.not.sideeffectfree.call] call to side-effecting errorDetail.getMessage not allowed in side-effect-free method
    return errorDetail.getMessage();
                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeConverterBinding.java:80: warning: [purity.not.sideeffectfree.call] call to side-effecting Errors.convert not allowed in side-effect-free method
        + Errors.convert(source)
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:78: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(ScopeBinding.class).add("annotationType", annotationType).add("scope", scope).add not allowed in side-effect-free method
        .add("source", Errors.convert(source))
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:77: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(ScopeBinding.class).add("annotationType", annotationType).add not allowed in side-effect-free method
        .add("scope", scope)
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(ScopeBinding.class).add not allowed in side-effect-free method
        .add("annotationType", annotationType)
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:75: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(ScopeBinding.class)
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:78: warning: [purity.not.sideeffectfree.call] call to side-effecting Errors.convert not allowed in side-effect-free method
        .add("source", Errors.convert(source))
                                     ^
30 warnings
An exception has occurred in the compiler (11.0.19). Please file a bug against the Java compiler via the Java bug reporting page (https://bugreport.java.com) after checking the Bug Database (https://bugs.java.com) for duplicates. Include your program and the following diagnostic in your report. Thank you.
com.sun.tools.javac.util.ClientCodeException: com.github.javaparser.ParseProblemException: (line 141,col 47) 'permits' cannot be used as an identifier as it is a keyword.
(line 143,col 41) 'permits' cannot be used as an identifier as it is a keyword.
(line 144,col 32) 'permits' cannot be used as an identifier as it is a keyword.

	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:832)
	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
Caused by: com.github.javaparser.ParseProblemException: (line 141,col 47) 'permits' cannot be used as an identifier as it is a keyword.
(line 143,col 41) 'permits' cannot be used as an identifier as it is a keyword.
(line 144,col 32) 'permits' cannot be used as an identifier as it is a keyword.

	at org.checkerframework.framework.util.JavaParserUtil.parseCompilationUnit(JavaParserUtil.java:94)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.addSourceFile(WholeProgramInferenceJavaParserStorage.java:631)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.addClassTree(WholeProgramInferenceJavaParserStorage.java:610)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.preprocessClassTree(WholeProgramInferenceJavaParserStorage.java:586)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.preprocessClassTree(WholeProgramInferenceImplementation.java:1150)
	at org.checkerframework.framework.type.AnnotatedTypeFactory.setRoot(AnnotatedTypeFactory.java:902)
	at org.checkerframework.framework.type.GenericAnnotatedTypeFactory.setRoot(GenericAnnotatedTypeFactory.java:444)
	at org.checkerframework.common.basetype.BaseTypeVisitor.setRoot(BaseTypeVisitor.java:382)
	at org.checkerframework.framework.source.SourceChecker.setRoot(SourceChecker.java:662)
	at org.checkerframework.common.basetype.BaseTypeChecker.setRoot(BaseTypeChecker.java:167)
	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1025)
	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
	... 8 more
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024515-u8p6vwi9/iteration2' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DeclaredMembers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ScopeAnnotation.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ConstructorBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealOptionalBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvidesMethodBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Element.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/BindingTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/AnnotatedBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/RequireExactBindingAnnotationsOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeListenerBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvidedByInternalFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ConvertedConstantBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MissingConstructorError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealElement.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/UntargettedBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalContext.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProxyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/Enhancer.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorShell.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/UntargettedBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MultibindingsScanner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalProvisionException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/LinkedBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/AbstractModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MembersInjectorStore.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ExposedBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InstanceBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructorInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorOptionsProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MessageProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderKeyBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvisionListenerBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Messages.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/MethodPartition.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ModuleAnnotatedMethodScannerProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/OptionalBinderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Stage.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/ScopedBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DefaultElementVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Annotations.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/LinkedProviderBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/TypeLiteral.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ClassMapKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/LinkedKeyBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/AbstractBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorJitBindingData.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/Classes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ErrorDetail.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MapKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InstanceBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ListenerBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingletonScope.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstantFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DefaultConstructionProxyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/PrivateModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvisionListenerStackCallback.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/GuiceInternal.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Elements.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/Multibinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ElementVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/GeneratedClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructionProxyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/ContinuousStopwatch.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionPoint.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvisionListenerCallbackStore.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PrivateElementProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleMemberInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/KotlinSupportInterface.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MultibindingsTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/HasDependencies.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/PrivateBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructionContext.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/NewThrowableFinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/ConstantBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Initializer.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFactoryToProviderAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DefaultBindingTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ImplementedBy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ScopeBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/CreationException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ScopeNotFoundError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ClassBuilding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InterceptorStackCallback.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorId.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFactoryToInitializableAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/CallerFinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/LinkedBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BytecodeGen.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/OptionalBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Enhanced.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MissingImplementationError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFlags.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ConfigurationException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PackageNameCompressor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/PrivateElements.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/RequireExplicitBindingsOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Injector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/OutOfScopeException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PrivateElementsImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/GlueException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorFormatter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DefaultBindingScopingVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Provides.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MembersInjectorImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Providers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Exposed.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Element.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/Matcher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/AnnotatedElementBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/AbstractBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/WeakKeySet.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/UntargettedBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/FastClass.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/RestrictedBindingSource.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ExposureBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Scope.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BoundProviderFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/FailableCache.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalProviderInstanceBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Toolable.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Module.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ChildBindingAlreadySetError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeGetter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ImmutableStringTrie.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DeferredLookups.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealMultibinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/BindingAnnotation.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/AnnotatedConstantBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/AbstractMatcher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Initializables.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalClassesToSkipSources.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MultibinderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderWithDependencies.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ClassDefining.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/EncounterImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/KotlinSupport.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/SourceProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Binder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeEncounter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/NamedImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DelayedInitialize.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Modules.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/MembersInjectorLookup.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleMethodInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/LineNumbers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderLookup.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Scopes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DisableCircularProxiesOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Singleton.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ProvidesIntoMap.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ExposedKeyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/StackTraceElements.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/BindingSourceRestriction.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeConverterBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Errors.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Key.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ProvidesIntoOptional.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleParameterInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ProvidesIntoSet.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstantBindingBuilderImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingAlreadySetError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorBindingData.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvidesMethodTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/StaticInjectionRequest.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DuplicateElementError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvidesMethodScanner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Initializable.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ChildClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Types.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/AnonymousClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MapBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderInstanceBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/BytecodeTasks.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderWithExtensionVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SourceFormatter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProcessedBindingData.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/TypeConverterBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ProvidedBy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructionProxy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Message.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DelegatingInvocationHandler.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/CreationListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalInjectorCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleFieldInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ModuleAnnotatedMethodScannerBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/MembersInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/GenericErrorDetail.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderInternalFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Guice.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvisionListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorsException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MapBinderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/AbstractProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/LookupProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ExposedBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructorBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionRequest.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Scoping.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MethodAspect.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/UniqueAnnotations.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/CycleDetectingLock.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MissingImplementationErrorHints.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Indexer.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/StringMapKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderMethodsModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealMapBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Inject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructorInjectorStore.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalErrorDetail.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ElementSource.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Provider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InterceptorBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/FactoryProxy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ModuleSource.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/Matchers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/BindingScopingVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderToInternalFactoryAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/RequireAtInjectOnConstructorsOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InterceptorBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/Named.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/HiddenClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorHandler.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/Names.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderInstanceBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DuplicateMapKeyError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectionRequestProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/EnhancerBuilderImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Nullability.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Lookups.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeConverter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Binding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/AbstractGlueGenerator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ProvisionException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ModuleAnnotatedMethodScanner.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:436: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
          && MoreTypes.equals(this, (ParameterizedType) other);
                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:447: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
      stringBuilder.append(typeToString(rawType));
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:453: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append('<').append not allowed in side-effect-free method
      stringBuilder.append('<').append(typeToString(typeArguments[0]));
                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:453: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
      stringBuilder.append('<').append(typeToString(typeArguments[0]));
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:455: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append(", ").append not allowed in side-effect-free method
        stringBuilder.append(", ").append(typeToString(typeArguments[i]));
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:455: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
        stringBuilder.append(", ").append(typeToString(typeArguments[i]));
                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:457: warning: [purity.not.sideeffectfree.call] call to side-effecting stringBuilder.append not allowed in side-effect-free method
      return stringBuilder.append('>').toString();
                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:446: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
      StringBuilder stringBuilder = new StringBuilder(30 * (typeArguments.length + 1));
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:497: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
      return o instanceof GenericArrayType && MoreTypes.equals(this, (GenericArrayType) o);
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java:559: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
      return other instanceof WildcardType && MoreTypes.equals(this, (WildcardType) other);
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionPoint.java:229: warning: [purity.not.sideeffectfree.call] call to side-effecting Classes.toString not allowed in side-effect-free method
    return Classes.toString(member);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/TypeLiteral.java:135: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting MoreTypes.equals not allowed in deterministic side-effect-free method
    return o instanceof TypeLiteral<?> && MoreTypes.equals(type, ((TypeLiteral) o).type);
                                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:98: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(injectionPoint, parameterIndex, key);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:105: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
      return Objects.equal(injectionPoint, dependency.injectionPoint)
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:116: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append not allowed in side-effect-free method
    builder.append(key);
                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:118: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append('@').append not allowed in side-effect-free method
      builder.append('@').append(injectionPoint);
                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:118: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append not allowed in side-effect-free method
      builder.append('@').append(injectionPoint);
                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:120: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append('[').append(parameterIndex).append not allowed in side-effect-free method
        builder.append('[').append(parameterIndex).append(']');
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:120: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append('[').append not allowed in side-effect-free method
        builder.append('[').append(parameterIndex).append(']');
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:120: warning: [purity.not.sideeffectfree.call] call to side-effecting builder.append not allowed in side-effect-free method
        builder.append('[').append(parameterIndex).append(']');
                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java:115: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
    StringBuilder builder = new StringBuilder();
                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Key.java:212: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
      toString = local;
      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Key.java:516: warning: [purity.not.sideeffectfree.call] call to side-effecting Annotations.annotationInstanceClassString not allowed in side-effect-free method
      return Annotations.annotationInstanceClassString(annotationType, /* includePackage= */ true);
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Message.java:132: warning: [purity.not.sideeffectfree.call] call to side-effecting errorDetail.getMessage not allowed in side-effect-free method
    return errorDetail.getMessage();
                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeConverterBinding.java:80: warning: [purity.not.sideeffectfree.call] call to side-effecting Errors.convert not allowed in side-effect-free method
        + Errors.convert(source)
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:78: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(ScopeBinding.class).add("annotationType", annotationType).add("scope", scope).add not allowed in side-effect-free method
        .add("source", Errors.convert(source))
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:77: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(ScopeBinding.class).add("annotationType", annotationType).add not allowed in side-effect-free method
        .add("scope", scope)
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(ScopeBinding.class).add not allowed in side-effect-free method
        .add("annotationType", annotationType)
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:75: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(ScopeBinding.class)
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java:78: warning: [purity.not.sideeffectfree.call] call to side-effecting Errors.convert not allowed in side-effect-free method
        .add("source", Errors.convert(source))
                                     ^
30 warnings
An exception has occurred in the compiler (11.0.19). Please file a bug against the Java compiler via the Java bug reporting page (https://bugreport.java.com) after checking the Bug Database (https://bugs.java.com) for duplicates. Include your program and the following diagnostic in your report. Thank you.
com.sun.tools.javac.util.ClientCodeException: com.github.javaparser.ParseProblemException: (line 141,col 47) 'permits' cannot be used as an identifier as it is a keyword.
(line 143,col 41) 'permits' cannot be used as an identifier as it is a keyword.
(line 144,col 32) 'permits' cannot be used as an identifier as it is a keyword.

	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:832)
	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
Caused by: com.github.javaparser.ParseProblemException: (line 141,col 47) 'permits' cannot be used as an identifier as it is a keyword.
(line 143,col 41) 'permits' cannot be used as an identifier as it is a keyword.
(line 144,col 32) 'permits' cannot be used as an identifier as it is a keyword.

	at org.checkerframework.framework.util.JavaParserUtil.parseCompilationUnit(JavaParserUtil.java:94)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.addSourceFile(WholeProgramInferenceJavaParserStorage.java:631)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.addClassTree(WholeProgramInferenceJavaParserStorage.java:610)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.preprocessClassTree(WholeProgramInferenceJavaParserStorage.java:586)
	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.preprocessClassTree(WholeProgramInferenceImplementation.java:1150)
	at org.checkerframework.framework.type.AnnotatedTypeFactory.setRoot(AnnotatedTypeFactory.java:902)
	at org.checkerframework.framework.type.GenericAnnotatedTypeFactory.setRoot(GenericAnnotatedTypeFactory.java:444)
	at org.checkerframework.common.basetype.BaseTypeVisitor.setRoot(BaseTypeVisitor.java:382)
	at org.checkerframework.framework.source.SourceChecker.setRoot(SourceChecker.java:662)
	at org.checkerframework.common.basetype.BaseTypeChecker.setRoot(BaseTypeChecker.java:167)
	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1025)
	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
	... 8 more
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024515-u8p6vwi9/iteration2' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DeclaredMembers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ScopeAnnotation.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ConstructorBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealOptionalBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvidesMethodBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Element.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/BindingTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/AnnotatedBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/RequireExactBindingAnnotationsOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeListenerBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvidedByInternalFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ConvertedConstantBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MissingConstructorError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealElement.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/UntargettedBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalContext.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProxyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/Enhancer.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorShell.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/UntargettedBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MultibindingsScanner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalProvisionException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/LinkedBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/AbstractModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MembersInjectorStore.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ExposedBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InstanceBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructorInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorOptionsProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MessageProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderKeyBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvisionListenerBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Messages.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/MethodPartition.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ModuleAnnotatedMethodScannerProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/OptionalBinderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Stage.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/ScopedBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DefaultElementVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Annotations.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/LinkedProviderBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/TypeLiteral.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ClassMapKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/LinkedKeyBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/AbstractBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorJitBindingData.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/Classes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ErrorDetail.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MapKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InstanceBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ListenerBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingletonScope.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstantFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DefaultConstructionProxyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/PrivateModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvisionListenerStackCallback.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/GuiceInternal.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Elements.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/Multibinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ElementVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/GeneratedClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructionProxyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/ContinuousStopwatch.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionPoint.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvisionListenerCallbackStore.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PrivateElementProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleMemberInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/KotlinSupportInterface.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MultibindingsTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/HasDependencies.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/PrivateBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructionContext.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/NewThrowableFinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/ConstantBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Initializer.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFactoryToProviderAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DefaultBindingTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ImplementedBy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ScopeBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/CreationException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ScopeNotFoundError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ClassBuilding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InterceptorStackCallback.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorId.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFactoryToInitializableAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/CallerFinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/LinkedBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BytecodeGen.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/OptionalBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Enhanced.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MissingImplementationError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFlags.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ConfigurationException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PackageNameCompressor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/PrivateElements.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/RequireExplicitBindingsOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Injector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/OutOfScopeException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PrivateElementsImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/GlueException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Dependency.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorFormatter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DefaultBindingScopingVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Provides.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MembersInjectorImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Providers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Exposed.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Element.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/Matcher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/AnnotatedElementBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/AbstractBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/WeakKeySet.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/UntargettedBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/FastClass.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/RestrictedBindingSource.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ExposureBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Scope.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BoundProviderFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/FailableCache.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalProviderInstanceBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Toolable.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Module.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ChildBindingAlreadySetError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeGetter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ImmutableStringTrie.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DeferredLookups.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealMultibinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/BindingAnnotation.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/binder/AnnotatedConstantBindingBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/AbstractMatcher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Initializables.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalClassesToSkipSources.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MultibinderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderWithDependencies.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ClassDefining.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/EncounterImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/KotlinSupport.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/SourceProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Binder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeEncounter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/NamedImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DelayedInitialize.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Modules.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/MembersInjectorLookup.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleMethodInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/LineNumbers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderLookup.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Scopes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/DisableCircularProxiesOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Singleton.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ProvidesIntoMap.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ExposedKeyFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MoreTypes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/util/StackTraceElements.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/BindingSourceRestriction.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeConverterBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Errors.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Key.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ProvidesIntoOptional.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleParameterInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/ProvidesIntoSet.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstantBindingBuilderImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/BindingAlreadySetError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorBindingData.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvidesMethodTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/StaticInjectionRequest.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DuplicateElementError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProvidesMethodScanner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Initializable.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/ChildClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/Types.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/AnonymousClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MapBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderInstanceBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/BytecodeTasks.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProviderWithExtensionVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SourceFormatter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProcessedBindingData.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/TypeConverterBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ProvidedBy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructionProxy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/Message.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DelegatingInvocationHandler.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/CreationListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalInjectorCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/SingleFieldInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ModuleAnnotatedMethodScannerBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/MembersInjector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/GenericErrorDetail.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderInternalFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Guice.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ProvisionListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorsException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ScopeBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/MapBinderBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/AbstractProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/LookupProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ExposedBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructorBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InjectionRequest.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Scoping.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MethodAspect.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/UniqueAnnotations.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/CycleDetectingLock.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/MissingImplementationErrorHints.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Indexer.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/multibindings/StringMapKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderMethodsModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealMapBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Inject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ConstructorInjectorStore.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalErrorDetail.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ElementSource.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Provider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InterceptorBindingProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/FactoryProxy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ModuleSource.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/matcher/Matchers.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/BindingScopingVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderToInternalFactoryAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/RequireAtInjectOnConstructorsOption.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/InterceptorBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/Named.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/HiddenClassDefiner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ErrorHandler.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/name/Names.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/ProviderInstanceBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/DuplicateMapKeyError.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectionRequestProcessor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/util/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/EnhancerBuilderImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Nullability.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InternalFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/Lookups.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/TypeConverter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/Binding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/AbstractGlueGenerator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/ProvisionException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/spi/ModuleAnnotatedMethodScanner.java'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/RealOptionalBinder.java:325: warning: [optional.field] Don't use Optional as the type of a field.
    private java.util.Optional<Provider<T>> value;
                                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorBindingData.java:57: warning: [optional.field] Don't use Optional as the type of a field.
  private final Optional<InjectorBindingData> parent;
                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorBindingData.java:77: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
  InjectorBindingData(Optional<InjectorBindingData> parent) {
                                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorJitBindingData.java:30: warning: [optional.field] Don't use Optional as the type of a field.
  private final Optional<InjectorJitBindingData> parent;
                                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorJitBindingData.java:38: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
  InjectorJitBindingData(Optional<InjectorJitBindingData> parent) {
                                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/InjectorJitBindingData.java:40: warning: [prefer.map.and.orelse] It is better style to use map and orElse.
    this.lock = parent.isPresent() ? parent.get().lock() : this;
                                   ^
  Consider changing to:
  parent.map(CONTAININGCLASS::lock).orElse(this)
error: DefaultTypeHierarchy: unexpected combination:
    type: INT @MaybePresent int
    superType: ARRAY @MaybePresent Object @MaybePresent []
    visitHistory = VisitHistory( {IPair(@MaybePresent Key<? extends @MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Key<? extends @MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructorInjector<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructorInjector<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#01 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorLookup<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorLookup<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorLookup<T extends @MaybePresent Object>, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorLookup<T extends @MaybePresent Object>, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent ScopeBinding>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent WeakKeySet, @MaybePresent WeakKeySet)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent WeakKeySet, @MaybePresent WeakKeySet)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Retention>, @MaybePresent Class<@MaybePresent Retention>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TestAnnotation, @MaybePresent TestAnnotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#02 extends @MaybePresent Object super @OptionalBottom Method>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent IncludeStackTraceOption, @MaybePresent IncludeStackTraceOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Inject, @MaybePresent Inject)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<@MaybePresent String>, @MaybePresent BindingImpl<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderMethod<? extends @MaybePresent Object>, @MaybePresent ProviderMethod<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalContext, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Consumer<@MaybePresent CreationListener>, @MaybePresent Consumer<@MaybePresent CreationListener>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImplementedBy, @MaybePresent ImplementedBy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImplementedBy, @MaybePresent ImplementedBy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ExposureBuilder<T extends @MaybePresent Object>, @MaybePresent ExposureBuilder<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent DefaultConstructionProxyFactory<T extends @MaybePresent Object>, @MaybePresent ConstructionProxyFactory<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#03 extends @MaybePresent Object super @OptionalBottom TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#04 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#05 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent EnhancerBuilder, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#06 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructorInjectorStore, @MaybePresent ConstructorInjectorStore)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructorInjectorStore, @MaybePresent ConstructorInjectorStore)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#07 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<SelfT extends @MaybePresent ErrorDetail<SelfT>>, @MaybePresent ErrorDetail<SelfT extends @MaybePresent ErrorDetail<SelfT>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#08 extends @MaybePresent Object super @OptionalBottom TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#09 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#010 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Class<capture#011 extends @MaybePresent Annotation>, @OptionalBottom Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MethodPartition, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#012 extends @MaybePresent ErrorDetail<capture#012>>, @MaybePresent ErrorDetail<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#013 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#014 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Set<@MaybePresent InjectionPoint>, @OptionalBottom Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<capture#015 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#016 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#017 extends @MaybePresent Object super @OptionalBottom Method>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterable<@MaybePresent TypeConverterBinding>, @MaybePresent Iterable<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectableMethod, @MaybePresent InjectableMethod)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectableMethod, @MaybePresent InjectableMethod)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent MethodAspect>, @OptionalBottom ImmutableList<@MaybePresent MethodAspect>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#018 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent HashSet<@MaybePresent Method>, @MaybePresent Set<@MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayDeque<@MaybePresent Class<? extends @MaybePresent Object> @MaybePresent []>, @MaybePresent Deque<@MaybePresent Class<? extends @MaybePresent Object> @MaybePresent []>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConcurrentHashMap<@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Boolean>, @MaybePresent Map<@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Boolean>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent KeySetView<K extends @MaybePresent Object, @MaybePresent Boolean>, @MaybePresent Set<K extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RequireExactBindingAnnotationsOption, @MaybePresent RequireExactBindingAnnotationsOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RequireExactBindingAnnotationsOption, @MaybePresent RequireExactBindingAnnotationsOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#019 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#020 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedBindingBuilder<T extends @MaybePresent Object>, @MaybePresent LinkedBindingBuilder<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedBindingBuilder<T extends @MaybePresent Object>, @MaybePresent LinkedBindingBuilder<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent HashMap<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent ScopeBinding>, @MaybePresent Map<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent ScopeBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Float>, @MaybePresent Class<@MaybePresent Float>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Float>, @MaybePresent Class<@MaybePresent Float>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#021 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#022 extends @MaybePresent Object super @OptionalBottom Method>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent UntargettedBinding<capture#023 extends T extends @MaybePresent Object>, @MaybePresent UntargettedBinding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#024 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#025 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorLookup<T extends @MaybePresent Object>.@MaybePresent <anonymous com.google.inject.spi.MembersInjectorLookup$1>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent Iterable<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#026 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent MethodInterceptor>, @MaybePresent ImmutableList<@MaybePresent MethodInterceptor>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Constructor<capture#027 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent Iterable<? extends @MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RecordingBinder, @MaybePresent PrivateBinder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#028 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#029 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Singleton, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#030 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#031 extends @MaybePresent Object super @OptionalBottom Class<? extends @MaybePresent Object>>, @MaybePresent Matcher<capture#031 extends @MaybePresent Object super @OptionalBottom Class<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent JavaOptionalProvider<T extends @MaybePresent Object>, @MaybePresent OptionalBinderBinding<? extends @MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#032 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ListMultimap<@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>, @MaybePresent ListMultimap<@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#033 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Void, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Void, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#034 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerBinding, @MaybePresent ProvisionListenerBinding)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerBinding, @MaybePresent ProvisionListenerBinding)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderInstanceBindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderInstanceBindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SyntheticProviderBindingImpl<T extends @MaybePresent Object>, @MaybePresent ProviderBinding<? extends capture#035 extends @MaybePresent Object super @OptionalBottom Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#036 extends @MaybePresent ErrorDetail<capture#036>>, @MaybePresent ErrorDetail<capture#036 extends @MaybePresent ErrorDetail<capture#036>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Position, @MaybePresent Position)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#037 extends @MaybePresent Object super @OptionalBottom Method>, @MaybePresent Matcher<capture#037 extends @MaybePresent Object super @OptionalBottom Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SingleFieldInjector, @MaybePresent SingleMemberInjector)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent WildcardTypeImpl, @MaybePresent WildcardType)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructorBinding<capture#038 extends T extends @MaybePresent Object>, @MaybePresent Binding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#039 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#040 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RuntimeException, @MaybePresent Throwable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#041 extends @MaybePresent Annotation>, @MaybePresent Class<capture#041 extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent String>, @MaybePresent Class<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Throwable, @MaybePresent Throwable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Throwable, @MaybePresent Throwable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Throwable, @MaybePresent Throwable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Throwable, @MaybePresent Throwable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Type, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#042 extends @MaybePresent Object super @OptionalBottom Method>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#043 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingTargetVisitor<capture#044 extends @MaybePresent Object super T extends @MaybePresent Object, V extends @MaybePresent Object>, @MaybePresent BindingTargetVisitor<? extends @MaybePresent Object super T extends @MaybePresent Object, V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.internal.InjectorImpl$SyntheticProviderBindingImpl$1>, @MaybePresent InternalFactory<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<T extends @MaybePresent Object>, @MaybePresent Matcher<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<T extends @MaybePresent Object>, @MaybePresent Matcher<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent InterceptorBinding>, @MaybePresent Iterable<? extends @MaybePresent InterceptorBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent NullPointerException, @MaybePresent NullPointerException)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Field, @MaybePresent Field)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Field, @MaybePresent Field)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Field, @MaybePresent Field)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#045 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructorBindingImpl<? extends @MaybePresent Object>, @MaybePresent ConstructorBindingImpl<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent FactoryProxy<T extends @MaybePresent Object>, @MaybePresent FactoryProxy<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderMethodsModule, @MaybePresent ProviderMethodsModule)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderMethodsModule, @MaybePresent ProviderMethodsModule)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#046 extends T extends @MaybePresent Object>, @MaybePresent Key<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent MembersInjectorLookup<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent MembersInjectorLookup<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#047 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent ProvisionListener>, @MaybePresent List<@MaybePresent ProvisionListener>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Boolean>, @MaybePresent Class<@MaybePresent Boolean>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Boolean>, @MaybePresent Class<@MaybePresent Boolean>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent PrivateElements, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SingleMethodInjector, @MaybePresent SingleMemberInjector)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent WildcardType, @MaybePresent WildcardType)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent WildcardType, @MaybePresent WildcardType)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent MethodInterceptor>, @MaybePresent Collection<? extends @MaybePresent MethodInterceptor>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#048 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#049 extends @MaybePresent Provider<? extends @MaybePresent Object>>, @MaybePresent Class<capture#049 extends @MaybePresent Provider<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#050 extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Class<? extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent Class<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeListenerBinding, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object & @OptionalBottom Provider<? extends @MaybePresent Object>, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#051 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingAlreadySetError, @MaybePresent ErrorDetail<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#052 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Injector>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Module, @MaybePresent Module)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Module, @MaybePresent Module)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#053 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @MaybePresent Collection<? extends @MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @MaybePresent Collection<? extends @MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @MaybePresent Collection<? extends @MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#054 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<capture#055 extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingSelection<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingSelection<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#056 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#057 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#058 extends @MaybePresent Object>, @MaybePresent Member)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderKeyBinding<capture#059 extends T extends @MaybePresent Object>, @MaybePresent Binding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#060 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#061 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent String>, @MaybePresent Collection<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#062 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<capture#063 extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Builder<@MaybePresent String>, @MaybePresent Builder<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#064 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#065 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RecordingBinder, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RecordingBinder, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @MaybePresent Collection<? extends @MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Predicate<@MaybePresent Integer>, @MaybePresent Predicate<@MaybePresent Integer>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Predicate<@MaybePresent Integer>, @MaybePresent Predicate<@MaybePresent Integer>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#066 extends T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent InterceptorBinding>, @MaybePresent Iterable<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Method>, @MaybePresent Collection<@MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#067 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#068 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent HashMap<@MaybePresent Method, @MaybePresent Method>, @MaybePresent Map<@MaybePresent Method, @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#069 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#070 extends @MaybePresent Object super capture#071 extends @MaybePresent Object super capture#072 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#073 extends @MaybePresent Object>, @MaybePresent TypeLiteral<capture#073 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Object>, @MaybePresent Iterable<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionContext<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#074 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent ProvisionListener>, @MaybePresent Collection<? extends @MaybePresent ProvisionListener>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#075 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#076 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Level, @MaybePresent Level)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<T extends @MaybePresent ErrorDetail<T>>, @MaybePresent ErrorDetail<T extends @MaybePresent ErrorDetail<T>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<T extends @MaybePresent ErrorDetail<T>>, @MaybePresent ErrorDetail<T extends @MaybePresent ErrorDetail<T>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<T extends @MaybePresent ErrorDetail<T>>, @MaybePresent ErrorDetail<T extends @MaybePresent ErrorDetail<T>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#077 extends @MaybePresent Object super capture#078 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#079 extends @MaybePresent Object super @OptionalBottom Method>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingSelection<T extends @MaybePresent Object>, @MaybePresent BindingSelection<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingSelection<T extends @MaybePresent Object>, @MaybePresent BindingSelection<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingSelection<T extends @MaybePresent Object>, @MaybePresent BindingSelection<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingSelection<T extends @MaybePresent Object>, @MaybePresent BindingSelection<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingSelection<T extends @MaybePresent Object>, @MaybePresent BindingSelection<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingSelection<T extends @MaybePresent Object>, @MaybePresent BindingSelection<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingSelection<T extends @MaybePresent Object>, @MaybePresent BindingSelection<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingSelection<T extends @MaybePresent Object>, @MaybePresent BindingSelection<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingSelection<T extends @MaybePresent Object>, @MaybePresent BindingSelection<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingSelection<T extends @MaybePresent Object>, @MaybePresent BindingSelection<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingSelection<T extends @MaybePresent Object>, @MaybePresent BindingSelection<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingSelection<T extends @MaybePresent Object>, @MaybePresent BindingSelection<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent StaticInjectionRequest>, @MaybePresent Iterable<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#08 extends @MaybePresent Object super @OptionalBottom TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent Matcher<capture#08 extends @MaybePresent Object super @OptionalBottom TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent GenericErrorDetail, @MaybePresent ErrorDetail<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent GenericErrorDetail, @MaybePresent ErrorDetail<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#080 extends @MaybePresent Object super @OptionalBottom Class<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Class<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#081 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#082 extends @MaybePresent Object>, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent InterceptorBinding>, @MaybePresent Iterable<? extends @MaybePresent InterceptorBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#083 extends T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Class<capture#084 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<U extends @MaybePresent Object>, @MaybePresent Key<U extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<U extends @MaybePresent Object>, @MaybePresent Key<U extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Retention, @MaybePresent Retention)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Retention, @MaybePresent Retention)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent MethodAspect>, @MaybePresent List<@MaybePresent MethodAspect>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent MethodAspect>, @MaybePresent List<@MaybePresent MethodAspect>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.internal.Scoping$1>, @MaybePresent Scoping)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.internal.Scoping$2>, @MaybePresent Scoping)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.internal.Scoping$3>, @MaybePresent Scoping)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.internal.Scoping$4>, @MaybePresent Scoping)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.internal.Scoping$5>, @MaybePresent Scoping)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.internal.Scoping$6>, @MaybePresent Scoping)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.internal.Scoping$7>, @MaybePresent Scoping)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Named, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Named, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent List<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent KeyBinding, @MaybePresent KeyBinding)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Byte, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Byte, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#085 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeListener, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#086 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeListener, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotationChecker, @MaybePresent AnnotationChecker)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotationChecker, @MaybePresent AnnotationChecker)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#087 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InvocationTargetException, @MaybePresent InvocationTargetException)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderLookup<capture#088 extends @MaybePresent Object>, @MaybePresent ProviderLookup<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#089 extends @MaybePresent Object super @OptionalBottom Method>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#090 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Stage, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#037 extends @MaybePresent Object super @OptionalBottom Method>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#091 extends @MaybePresent Object super @OptionalBottom Binding<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionRequest<T extends @MaybePresent Object>, @MaybePresent InjectionRequest<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Spliterator<@MaybePresent String>, @MaybePresent Spliterator<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterable<@MaybePresent String>, @MaybePresent Iterable<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Module>, @MaybePresent Iterable<? extends @MaybePresent Module>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#092 extends @MaybePresent Object>, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#093 extends @MaybePresent ErrorDetail<capture#093>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#094 extends @MaybePresent ErrorDetail<capture#094>>, @MaybePresent ErrorDetail<capture#094 extends @MaybePresent ErrorDetail<capture#094>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MissingImplementationError<T extends @MaybePresent Object>, @MaybePresent MissingImplementationError<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerStackCallback<capture#095 extends @MaybePresent Object>, @MaybePresent ProvisionListenerStackCallback<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#096 extends @MaybePresent Object super @OptionalBottom Class<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Class<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent String>, @MaybePresent Iterable<? extends @MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Element>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotatedBindingBuilder<T extends @MaybePresent Object>, @MaybePresent AnnotatedBindingBuilder<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotatedBindingBuilder<T extends @MaybePresent Object>, @MaybePresent AnnotatedBindingBuilder<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectableMethod, @MaybePresent InjectableMember)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderLookup<? extends @MaybePresent Object>, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#097 extends @MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Key<? extends @MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorImpl<capture#073 extends @MaybePresent Object>, @MaybePresent MembersInjectorImpl<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Object>, @MaybePresent Set<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Object>, @MaybePresent Set<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Object>, @MaybePresent Set<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Object>, @MaybePresent Set<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Object>, @MaybePresent Set<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#098 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayListMultimap<@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>, @MaybePresent ListMultimap<@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#099 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingTargetVisitor<capture#0100 extends @MaybePresent Object super T extends @MaybePresent Object, V extends @MaybePresent Object>, @MaybePresent BindingTargetVisitor<? extends @MaybePresent Object super T extends @MaybePresent Object, V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<@MaybePresent Object>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Class<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ScopeBinding, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0101 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Executable>, @MaybePresent Collection<@MaybePresent Executable>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Executable>, @MaybePresent Collection<@MaybePresent Executable>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Executable>, @MaybePresent Collection<@MaybePresent Executable>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Member, @MaybePresent Member)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Member, @MaybePresent Member)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InvocationHandler, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#0102 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0103 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0104 extends @MaybePresent Object super capture#0105 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent ProvisionListener>, @MaybePresent Iterable<? extends @MaybePresent ProvisionListener>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#0106 extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Collection<? extends @MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Collection<? extends @MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Collection<? extends @MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent HashMap<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Multiset<@MaybePresent Object>>, @MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Multiset<@MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>>, @MaybePresent Key<@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0107 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MissingImplementationError<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MethodInterceptor, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Deque<@MaybePresent Class<? extends @MaybePresent Object> @MaybePresent []>, @MaybePresent Deque<@MaybePresent Class<? extends @MaybePresent Object> @MaybePresent []>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0108 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0109 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Method, @MaybePresent Executable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Method, @MaybePresent Executable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0110 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>.@MaybePresent Provision, @MaybePresent ProvisionInvocation<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0111 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<capture#0112 extends @MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent BindingImpl<? extends @MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0113 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Method, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Method, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Method, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0114 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Enum<T extends @MaybePresent Enum<T extends @MaybePresent Enum<T>>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.internal.BytecodeGen$1>, @MaybePresent ClassValue<@MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0115 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent String>, @MaybePresent Optional<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent String>, @MaybePresent Optional<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent String>, @MaybePresent Optional<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent String>, @MaybePresent Optional<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent String>, @MaybePresent Optional<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent String>, @MaybePresent Optional<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent String>, @MaybePresent Optional<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent String>, @MaybePresent Optional<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingTargetVisitor<capture#0116 extends @MaybePresent Object super T extends @MaybePresent Object, V extends @MaybePresent Object>, @MaybePresent BindingTargetVisitor<? extends @MaybePresent Object super T extends @MaybePresent Object, V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent TypeListenerBinding>, @MaybePresent Iterable<? extends @MaybePresent TypeListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingTargetVisitor<T extends @MaybePresent Object, T extends @MaybePresent Object>, @MaybePresent BindingTargetVisitor<T extends @MaybePresent Object, T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorStore.@MaybePresent <anonymous com.google.inject.internal.MembersInjectorStore$1>, @MaybePresent FailableCache<@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent MembersInjectorImpl<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderKeyBinding<capture#0117 extends T extends @MaybePresent Object>, @MaybePresent ProviderKeyBinding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#0118 extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0119 extends @MaybePresent ErrorDetail<capture#0119>>, @MaybePresent ErrorDetail<capture#0119 extends @MaybePresent ErrorDetail<capture#0119>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectableMembers, @MaybePresent InjectableMembers)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectableMembers, @MaybePresent InjectableMembers)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0120 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0121 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0122 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Toolable, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0123 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0124 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingTargetVisitor<capture#0125 extends @MaybePresent Object super T extends @MaybePresent Object, V extends @MaybePresent Object>, @MaybePresent BindingTargetVisitor<? extends @MaybePresent Object super T extends @MaybePresent Object, V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent KeyBinding, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent KeyBinding, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0126 extends @MaybePresent Object super @OptionalBottom Class<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Class<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent ModuleAnnotatedMethodScannerBinding>, @MaybePresent Collection<? extends @MaybePresent ModuleAnnotatedMethodScannerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent ModuleAnnotatedMethodScannerBinding>, @MaybePresent Collection<? extends @MaybePresent ModuleAnnotatedMethodScannerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0127 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ScopeAnnotation, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Injector, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0128 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Factory<T extends @MaybePresent Object>, @MaybePresent Factory<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Default, @MaybePresent Default)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Default, @MaybePresent Default)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent Method>, @MaybePresent List<@MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeConverterBinding, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeConverterBinding, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ParameterizedTypeImpl, @MaybePresent ParameterizedType)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0129 extends T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0130 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Constructor<capture#0131 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0132 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(capture#0133 extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent PrivateBinder, @MaybePresent PrivateBinder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0134 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Optional<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Optional<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Optional<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Optional<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Optional<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0135 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerCallbackStore.@MaybePresent <anonymous com.google.inject.internal.ProvisionListenerCallbackStore$1>, @MaybePresent CacheLoader<? extends @MaybePresent Object super @MaybePresent KeyBinding, @MaybePresent ProvisionListenerStackCallback<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0136 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ToIntFunction<@MaybePresent String>, @MaybePresent ToIntFunction<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ToIntFunction<@MaybePresent String>, @MaybePresent ToIntFunction<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Logger, @MaybePresent Logger)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Logger, @MaybePresent Logger)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Module>, @MaybePresent Iterable<? extends @MaybePresent Module>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Module>, @MaybePresent Iterable<? extends @MaybePresent Module>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0137 extends @MaybePresent Object>, @MaybePresent Dependency<capture#0137 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Void, @MaybePresent Void)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Void, @MaybePresent Void)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0138 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0139 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent PrivateElementsImpl, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0140 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0141 extends @MaybePresent Object super @OptionalBottom Method>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionPoint, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionPoint, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0142 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent ProvidedBy>, @MaybePresent Class<@MaybePresent ProvidedBy>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectorJitBindingData, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectorJitBindingData, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0143 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0144 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionPoint>, @MaybePresent ImmutableSet<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionPoint>, @MaybePresent ImmutableSet<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionPoint>, @MaybePresent ImmutableSet<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionPoint>, @MaybePresent ImmutableSet<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionPoint>, @MaybePresent ImmutableSet<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionPoint>, @MaybePresent ImmutableSet<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0145 extends @MaybePresent Object>, @MaybePresent Executable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotationInstanceStrategy, @MaybePresent AnnotationInstanceStrategy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotationInstanceStrategy, @MaybePresent AnnotationInstanceStrategy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0146 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProxyConstructor<T extends @MaybePresent Object>, @MaybePresent ConstructionProxy<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0147 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @OptionalBottom Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @OptionalBottom Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @OptionalBottom Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @OptionalBottom Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @OptionalBottom Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Named, @MaybePresent Named)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Consumer<@MaybePresent Constructor<? extends @MaybePresent Object>>, @MaybePresent Consumer<@MaybePresent Constructor<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent TypeListenerBinding>, @MaybePresent List<@MaybePresent TypeListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionListener<capture#0148 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Binding<? extends @MaybePresent Object>>, @MaybePresent Iterable<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent CaseFormat, @MaybePresent CaseFormat)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Qualifier, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent ImmutableList<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent ImmutableList<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent ImmutableList<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent ImmutableList<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent ImmutableList<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent ImmutableList<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent ImmutableList<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent ImmutableList<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent ImmutableList<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent ImmutableList<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent ImmutableList<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent ImmutableList<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent ImmutableList<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedHashMap<@MaybePresent Module, @MaybePresent ModuleInfo>, @MaybePresent Map<@MaybePresent Module, @MaybePresent ModuleInfo>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedHashMap<@MaybePresent Module, @MaybePresent ModuleInfo>, @MaybePresent Map<@MaybePresent Module, @MaybePresent ModuleInfo>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent ProvisionListenerBinding>, @MaybePresent Iterable<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionContext<T extends @MaybePresent Object>, @MaybePresent ConstructionContext<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0149 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent CreationListener, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderInstanceBinding<capture#0150 extends B extends @MaybePresent Object>, @MaybePresent ProviderInstanceBinding<? extends B extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InterceptorBinding, @MaybePresent InterceptorBinding)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InterceptorBinding, @MaybePresent InterceptorBinding)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Object>>, @MaybePresent Iterable<? extends @MaybePresent Class<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Initializable<T extends @MaybePresent Object>, @MaybePresent Initializable<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0151 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingTargetVisitor<capture#0152 extends @MaybePresent Object super @OptionalBottom Provider<T extends @MaybePresent Object>, V extends @MaybePresent Object>, @MaybePresent BindingTargetVisitor<? extends @MaybePresent Object super @MaybePresent Provider<T extends @MaybePresent Object>, V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent IllegalAccessException, @MaybePresent Throwable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingTargetVisitor<capture#0153 extends @MaybePresent Object super @OptionalBottom Provider<T extends @MaybePresent Object>, V extends @MaybePresent Object>, @MaybePresent BindingTargetVisitor<? extends @MaybePresent Object super @MaybePresent Provider<T extends @MaybePresent Object>, V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderLookup<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderLookup<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderLookup<T extends @MaybePresent Object>, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderLookup<T extends @MaybePresent Object>, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Map<K extends @MaybePresent Object, V extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Map<K extends @MaybePresent Object, V extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Scope, @MaybePresent Scope)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Scope, @MaybePresent Scope)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterable<@MaybePresent ModuleAnnotatedMethodScanner>, @MaybePresent Iterable<? extends @MaybePresent ModuleAnnotatedMethodScanner>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionListener<capture#0154 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<U extends @MaybePresent Object>, @MaybePresent TypeLiteral<U extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Object>, @MaybePresent ImmutableList<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0155 extends @MaybePresent Object super @OptionalBottom TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0156 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeVariable<@MaybePresent Class<capture#0157 extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0158 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0159 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Element, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Element, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0160 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0161 extends @MaybePresent Object super @OptionalBottom Class<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Class<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent TypeConverterBinding>, @MaybePresent List<@MaybePresent TypeConverterBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0162 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InitializationTiming, @MaybePresent InitializationTiming)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Annotation, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Annotation, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Annotation, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvidedBy, @MaybePresent ProvidedBy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvidedBy, @MaybePresent ProvidedBy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvidedBy, @MaybePresent ProvidedBy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MissingConstructorError, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ScopeBinding, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ScopeBinding, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Class<capture#0163 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0164 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<capture#0165 extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<capture#0166 extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Message, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Message, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent TypeConverterBinding>, @MaybePresent Set<@MaybePresent TypeConverterBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderLookup<T extends @MaybePresent Object>.@MaybePresent <anonymous com.google.inject.spi.ProviderLookup$1>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<? extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent String>, @MaybePresent Key<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent String>, @MaybePresent Key<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent String>, @MaybePresent Key<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent String>, @MaybePresent Key<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Object>, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorImpl<? extends @MaybePresent Object>, @MaybePresent MembersInjectorImpl<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent NullAnnotationStrategy, @MaybePresent NullAnnotationStrategy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent CyclicFactory<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0167 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0168 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent HashSet<@MaybePresent TypeListener>, @MaybePresent Set<@MaybePresent TypeListener>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LoadingCache<K extends @MaybePresent Object, @MaybePresent Object>, @MaybePresent LoadingCache<K extends @MaybePresent Object, @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent NullAnnotationStrategy, @MaybePresent AnnotationStrategy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0169 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Inject>, @MaybePresent Class<@MaybePresent Inject>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorLookup<capture#0170 extends @MaybePresent Object>, @MaybePresent MembersInjectorLookup<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionPoint, @MaybePresent InjectionPoint)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionPoint, @MaybePresent InjectionPoint)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Character>, @MaybePresent Class<@MaybePresent Character>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Character>, @MaybePresent Class<@MaybePresent Character>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvidedBy, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Builder<@MaybePresent String, @MaybePresent Object>, @MaybePresent Builder<@MaybePresent String, @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotationChecker.@MaybePresent <anonymous com.google.inject.internal.Annotations$AnnotationChecker$1>, @MaybePresent CacheLoader<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Boolean>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<@MaybePresent TypeLiteral<T extends @MaybePresent Object>>, @MaybePresent InternalFactory<? extends @MaybePresent TypeLiteral<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Factory<T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0171 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0172 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedProviderBindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent GenericDeclaration, @MaybePresent GenericDeclaration)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent GenericDeclaration, @MaybePresent GenericDeclaration)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0173 extends @MaybePresent Object super @OptionalBottom Class<? extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0174 extends @MaybePresent Object>, @MaybePresent Executable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent NullableProvidesOption, @MaybePresent NullableProvidesOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Package, @MaybePresent Package)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Cache<@MaybePresent InjectorBindingData, @MaybePresent Set<@MaybePresent KeyAndSource>>, @MaybePresent Cache<@MaybePresent InjectorBindingData, @MaybePresent Set<@MaybePresent KeyAndSource>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderInternalFactory<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0175 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RequireExplicitBindingsOption, @MaybePresent RequireExplicitBindingsOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RequireExplicitBindingsOption, @MaybePresent RequireExplicitBindingsOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent SingleMemberInjector>, @MaybePresent Collection<? extends @MaybePresent SingleMemberInjector>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingTargetVisitor<B extends @MaybePresent Object, V extends @MaybePresent Object>, @MaybePresent BindingTargetVisitor<B extends @MaybePresent Object, R extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingTargetVisitor<B extends @MaybePresent Object, V extends @MaybePresent Object>, @MaybePresent BindingTargetVisitor<B extends @MaybePresent Object, R extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom NullType)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent ModuleSource, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>>, @MaybePresent Map<@MaybePresent ModuleSource, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Provider<capture#0176 extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provides, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeListenerBinding, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0177 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<capture#0178 extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent HashSet<@MaybePresent KeyAndSource>, @MaybePresent Set<@MaybePresent KeyAndSource>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotatedType, @MaybePresent AnnotatedType)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0179 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Inject, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Inject, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0180 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent AbstractModule>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0181 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Optional<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Optional<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Optional<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Optional<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Optional<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Annotation, @OptionalBottom Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0182 extends T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0183 extends @MaybePresent Object>, @MaybePresent Class<capture#0183 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0184 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent ModuleAnnotatedMethodScannerBinding>, @MaybePresent Iterable<? extends @MaybePresent ModuleAnnotatedMethodScannerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0185 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0186 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent IllegalArgumentException, @MaybePresent Throwable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.internal.Annotations$2>, @MaybePresent InvocationHandler)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Class<capture#0187 extends @MaybePresent Annotation>, @OptionalBottom Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0188 extends @MaybePresent Object>, @MaybePresent Key<capture#0188 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0189 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<capture#0190 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0191 extends @MaybePresent Object super capture#0192 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Member, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Member, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0193 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent InterceptorBinding>, @MaybePresent ImmutableList<@MaybePresent InterceptorBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent InterceptorBinding>, @MaybePresent ImmutableList<@MaybePresent InterceptorBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent InterceptorBinding>, @MaybePresent ImmutableList<@MaybePresent InterceptorBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent InterceptorBinding>, @MaybePresent ImmutableList<@MaybePresent InterceptorBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0194 extends @MaybePresent ErrorDetail<capture#0194>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent NavigableMap<@MaybePresent String, @MaybePresent Executable>, @MaybePresent NavigableMap<@MaybePresent String, @MaybePresent Executable>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorImpl<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorImpl<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorImpl<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0195 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ColorizeOption, @MaybePresent ColorizeOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ColorizeOption, @MaybePresent ColorizeOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0196 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Type, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Type, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Type, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RequireAtInjectOnConstructorsOption, @MaybePresent RequireAtInjectOnConstructorsOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RequireAtInjectOnConstructorsOption, @MaybePresent RequireAtInjectOnConstructorsOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent StaticInjectionRequest, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Actual, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0197 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0198 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent ProvisionListenerBinding>, @MaybePresent Iterable<? extends @MaybePresent ProvisionListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InvocationTargetException, @MaybePresent Throwable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<T extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<T extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<T extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<T extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#0199 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MethodVisitor, @MaybePresent MethodVisitor)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MethodVisitor, @MaybePresent MethodVisitor)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MethodVisitor, @MaybePresent MethodVisitor)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0200 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvidedByInternalFactory<T extends @MaybePresent Object>, @MaybePresent ProvidedByInternalFactory<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Long, @MaybePresent Long)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Long, @MaybePresent Long)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0201 extends @MaybePresent Object super @OptionalBottom Binding<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0194 extends @MaybePresent ErrorDetail<capture#0194>>, @MaybePresent ErrorDetail<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0202 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0203 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0204 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0205 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @MaybePresent Collection<? extends @MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0206 extends @MaybePresent Object>, @MaybePresent Class<capture#0206 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0207 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ChildClassDefiner, @MaybePresent ClassDefiner)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>, @MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>, @MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>, @MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>, @MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>, @MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>, @MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>, @MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>, @MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>, @MaybePresent BindingScopingVisitor<V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent Collection<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent Collection<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<capture#0208 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0209 extends @MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Key<capture#0209 extends @MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, I extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeVariable<capture#0210 extends @MaybePresent GenericDeclaration>, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Annotation, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Byte>, @MaybePresent Class<@MaybePresent Byte>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Byte>, @MaybePresent Class<@MaybePresent Byte>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Stream<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent Stream<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#0211 extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RealOptionalProviderProvider<T extends @MaybePresent Object>, @MaybePresent Provider<? extends @MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ExposedBinding<capture#0212 extends T extends @MaybePresent Object>, @MaybePresent ExposedBinding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionRequest<T extends @MaybePresent Object>, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Byte>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Byte>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ParameterizedTypeImpl, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent Collection<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0213 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterator<@MaybePresent InjectableMethod>, @MaybePresent Iterator<@MaybePresent InjectableMethod>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterable<capture#0214 extends @MaybePresent Element>, @MaybePresent Iterable<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Class<capture#0215 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent DisableCircularProxiesOption, @MaybePresent DisableCircularProxiesOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent DisableCircularProxiesOption, @MaybePresent DisableCircularProxiesOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent DisableCircularProxiesOption, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent ModuleAnnotatedMethodScanner>, @MaybePresent Iterable<? extends @MaybePresent ModuleAnnotatedMethodScanner>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Type, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Type, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom TypeConverterBinding, @MaybePresent TypeConverterBinding)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent Collection<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom RuntimeException, @MaybePresent Throwable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeConverterBinding, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0216 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Inject, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Inject, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RetentionPolicy, @MaybePresent RetentionPolicy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0217 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent String, @MaybePresent String>, @MaybePresent Map<? extends @MaybePresent Object, ? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0218 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent NullableProvidesOption, @MaybePresent Enum<@MaybePresent NullableProvidesOption>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<capture#0219 extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Throwable, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Throwable, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#0220 extends capture#0133 extends @MaybePresent Object>, @MaybePresent Provider<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends @MaybePresent Object>>, @MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#012 extends @MaybePresent ErrorDetail<capture#012>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructorBindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Comparator<@MaybePresent Field>, @MaybePresent Comparator<? extends @MaybePresent Object super @MaybePresent Field>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0221 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent EncounterImpl<T extends @MaybePresent Object>, @MaybePresent EncounterImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent EncounterImpl<T extends @MaybePresent Object>, @MaybePresent EncounterImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0222 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0223 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent ModuleAnnotatedMethodScannerBinding>, @MaybePresent Iterable<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0224 extends @MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RuntimeException, @MaybePresent RuntimeException)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<@MaybePresent MembersInjector<T extends @MaybePresent Object>>, @MaybePresent InternalFactory<? extends @MaybePresent MembersInjector<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0225 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0226 extends @MaybePresent ErrorDetail<capture#0226>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0227 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom ImmutableList<@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @MaybePresent ImmutableList<@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0228 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0229 extends @MaybePresent ErrorDetail<capture#0229>>, @MaybePresent ErrorDetail<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent ScopeBinding>, @MaybePresent Iterable<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ChildBindingAlreadySetError, @MaybePresent ErrorDetail<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Short, @MaybePresent Short)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Short, @MaybePresent Short)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Scope, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Scope, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0230 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Enhancer, @MaybePresent Enhancer)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>>, @MaybePresent Key<@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0231 extends @MaybePresent Object super @OptionalBottom Class<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Class<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends @MaybePresent Object>>, @MaybePresent Map<? extends @MaybePresent Key<? extends @MaybePresent Object>, ? extends @MaybePresent BindingImpl<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0232 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent InterceptorBinding>, @MaybePresent List<@MaybePresent InterceptorBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0233 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent InjectableMethod>, @MaybePresent List<@MaybePresent InjectableMethod>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent InjectableMethod>, @MaybePresent List<@MaybePresent InjectableMethod>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotatedElement, @MaybePresent AnnotatedElement)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedKeyBinding<capture#0234 extends T extends @MaybePresent Object>, @MaybePresent Binding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0235 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Signature, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0236 extends @MaybePresent Object super capture#0237 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Object>, @OptionalBottom Set<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectorImpl, @MaybePresent InjectorImpl)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectorImpl, @MaybePresent InjectorImpl)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0238 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterable<capture#0239 extends @MaybePresent Module>, @MaybePresent Iterable<? extends @MaybePresent Module>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeListenerBinding, @MaybePresent TypeListenerBinding)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeListenerBinding, @MaybePresent TypeListenerBinding)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent InjectableMethod>, @MaybePresent List<@MaybePresent InjectableMethod>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent InjectableMethod>, @MaybePresent List<@MaybePresent InjectableMethod>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#0240 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>, @MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>, @MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>, @MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>, @MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>, @MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>, @MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>, @MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>, @MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent Iterable<? extends @MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TreeMap<@MaybePresent String, @MaybePresent Executable>, @MaybePresent NavigableMap<@MaybePresent String, @MaybePresent Executable>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerBinding, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AbstractModule, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent HasDependencies, @MaybePresent HasDependencies)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent InterceptorBinding>, @MaybePresent List<@MaybePresent InterceptorBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent ProvisionListenerBinding>, @MaybePresent ImmutableList<@MaybePresent ProvisionListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent ProvisionListenerBinding>, @MaybePresent ImmutableList<@MaybePresent ProvisionListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent ProvisionListenerBinding>, @MaybePresent ImmutableList<@MaybePresent ProvisionListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent ProvisionListenerBinding>, @MaybePresent ImmutableList<@MaybePresent ProvisionListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ModuleInfo, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0241 extends @MaybePresent ErrorDetail<capture#0241>>, @MaybePresent ErrorDetail<capture#0241 extends @MaybePresent ErrorDetail<capture#0241>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Set<@MaybePresent Object>, @MaybePresent Set<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingBuilder<T extends @MaybePresent Object>, @MaybePresent BindingBuilder<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructorInjector<@MaybePresent Object>, @MaybePresent ConstructorInjector<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ClassLoader, @MaybePresent ClassLoader)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Enum<T extends @MaybePresent Enum<T>>, @MaybePresent Enum<T extends @MaybePresent Enum<T>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Enum<T extends @MaybePresent Enum<T>>, @MaybePresent Enum<T extends @MaybePresent Enum<T>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0242 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Pattern, @MaybePresent Pattern)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Pattern, @MaybePresent Pattern)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher, @MaybePresent Matcher)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Errors, @MaybePresent Errors)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Errors, @MaybePresent Errors)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0243 extends @MaybePresent Object super @OptionalBottom Binding<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent HashMap<@MaybePresent ModuleSource, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>>, @MaybePresent Map<@MaybePresent ModuleSource, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0244 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent DuplicateMapKeyError<K extends @MaybePresent Object, V extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent String>, @MaybePresent List<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @OptionalBottom ImmutableList<@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0245 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent TestAnnotation>, @MaybePresent Class<@MaybePresent TestAnnotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0246 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RestrictedBindingSource, @MaybePresent RestrictedBindingSource)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RestrictedBindingSource, @MaybePresent RestrictedBindingSource)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RestrictedBindingSource, @MaybePresent RestrictedBindingSource)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0247 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>, @MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>, @MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>, @MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>, @MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>, @MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0248 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Stream<@MaybePresent InjectionPoint>, @MaybePresent Stream<? extends @MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent WildcardType, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionRequest<capture#0249 extends @MaybePresent Object>, @MaybePresent InjectionRequest<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent MembersInjector<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent MembersInjector<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructorInjector<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedHashSet<@MaybePresent ProviderLookup<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent ProviderLookup<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListener, @MaybePresent ProvisionListener)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListener, @MaybePresent ProvisionListener)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0250 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementSource, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RealOptionalKeyProvider<T extends @MaybePresent Object>, @MaybePresent OptionalBinderBinding<? extends @MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0251 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0252 extends @MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Elements, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InstanceBinding<capture#0253 extends @MaybePresent Object>, @MaybePresent InstanceBinding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0254 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RecordingBinder, @MaybePresent Binder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectorImpl.@MaybePresent <anonymous com.google.inject.internal.InjectorImpl$1>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent ProviderLookup<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent ProviderLookup<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RealDirectTypeProvider<T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@Present Optional<@MaybePresent Message>, @MaybePresent Optional<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedHashSet<@MaybePresent ProvisionListener>, @MaybePresent Set<@MaybePresent ProvisionListener>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0255 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent HashMap<@MaybePresent String, @MaybePresent Object>, @MaybePresent Map<@MaybePresent String, @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0256 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AndMatcher<T extends @MaybePresent Object>, @MaybePresent Matcher<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0257 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionCallback<T extends @MaybePresent Object>, @MaybePresent ProvisionCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionCallback<T extends @MaybePresent Object>, @MaybePresent ProvisionCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InterceptorBinding, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectableField, @MaybePresent InjectableMember)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0258 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@Present Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0259 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Class<capture#0260 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SyntheticProviderBindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ScopeNotFoundError, @MaybePresent ErrorDetail<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0261 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0262 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedHashSet<@MaybePresent InjectionRequest<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent InjectionRequest<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0263 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent InjectorBindingData>, @MaybePresent Optional<@MaybePresent InjectorBindingData>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent InjectorBindingData>, @MaybePresent Optional<@MaybePresent InjectorBindingData>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0264 extends @MaybePresent ErrorDetail<capture#0264>>, @MaybePresent ErrorDetail<capture#0264 extends @MaybePresent ErrorDetail<capture#0264>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Qualifier>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.spi.Elements$1>, @MaybePresent BindingTargetVisitor<@MaybePresent Object, @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0265 extends @MaybePresent Object super @OptionalBottom Method>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent PermitMapImpl, @MaybePresent PermitMapImpl)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent JavaOptionalProvider<T extends @MaybePresent Object>, @MaybePresent Provider<? extends @MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerStackCallback<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerStackCallback<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Inject>, @MaybePresent Class<@MaybePresent Inject>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Inject>, @MaybePresent Class<@MaybePresent Inject>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0266 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent KeyAndSource, @MaybePresent KeyAndSource)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Message>, @MaybePresent List<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0267 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConvertedConstantBindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Void>, @MaybePresent Class<@MaybePresent Void>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Void>, @MaybePresent Class<@MaybePresent Void>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0268 extends @MaybePresent Object super @OptionalBottom Binding<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Annotation, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Annotation, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Annotation, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Annotation, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(capture#0269 extends T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Builder<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Scope>, @MaybePresent Builder<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Scope>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0270 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#033 extends @MaybePresent Object>, @MaybePresent Key<capture#033 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0271 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0272 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0273 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Set<@MaybePresent InjectionPoint>, @OptionalBottom Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Set<@MaybePresent InjectionPoint>, @OptionalBottom Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent ScopeAnnotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Multiset<@MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#0274 extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent Collection<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectorJitBindingData, @MaybePresent InjectorJitBindingData)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectorJitBindingData, @MaybePresent InjectorJitBindingData)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>, @OptionalBottom ProvisionListenerStackCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent String>, @MaybePresent List<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent String>, @MaybePresent List<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent String>, @MaybePresent List<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>>, @MaybePresent TypeLiteral<@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerStackCallback<? extends @MaybePresent Object>, @MaybePresent ProvisionListenerStackCallback<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0275 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent InjectorJitBindingData>, @MaybePresent Optional<@MaybePresent InjectorJitBindingData>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0276 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent KeyAndSource>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent KeyAndSource>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Scope, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingBuilder<T extends @MaybePresent Object>, @MaybePresent AnnotatedBindingBuilder<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0277 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Message>, @MaybePresent Collection<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Message>, @MaybePresent Collection<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedKeyBinding<capture#0278 extends T extends @MaybePresent Object>, @MaybePresent LinkedKeyBinding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InvocationHandler, @MaybePresent InvocationHandler)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InvocationHandler, @MaybePresent InvocationHandler)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Builder<@MaybePresent Message>, @MaybePresent Builder<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Builder<@MaybePresent Message>, @MaybePresent Builder<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RequireExplicitBindingsOption, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Short>, @MaybePresent Class<@MaybePresent Short>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Short>, @MaybePresent Class<@MaybePresent Short>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent ProvisionListenerBinding>, @MaybePresent Collection<? extends @MaybePresent ProvisionListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent ProvisionListenerBinding>, @MaybePresent Collection<? extends @MaybePresent ProvisionListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent ProvisionListenerBinding>, @MaybePresent Collection<? extends @MaybePresent ProvisionListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionRequest<capture#0279 extends @MaybePresent Object>, @MaybePresent InjectionRequest<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Class<? extends @MaybePresent Object>, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0280 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<capture#0281 extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Float, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Float, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent RestrictedBindingSource>, @MaybePresent Class<@MaybePresent RestrictedBindingSource>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent RestrictedBindingSource>, @MaybePresent Class<@MaybePresent RestrictedBindingSource>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent UntargettedBinding<capture#0282 extends T extends @MaybePresent Object>, @MaybePresent Binding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0283 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent DeferredLookups, @MaybePresent Lookups)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Type, @OptionalBottom Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom Method)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>>, @MaybePresent TypeLiteral<@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InstanceBindingImpl<@MaybePresent MembersInjector<T extends @MaybePresent Object>>, @MaybePresent BindingImpl<@MaybePresent MembersInjector<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent ErrorDetail<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent ErrorDetail<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#0284 extends capture#0285 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SingleParameterInjector<? extends @MaybePresent Object>, @MaybePresent SingleParameterInjector<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SingleParameterInjector<? extends @MaybePresent Object>, @MaybePresent SingleParameterInjector<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SingleParameterInjector<? extends @MaybePresent Object>, @MaybePresent SingleParameterInjector<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SingleParameterInjector<? extends @MaybePresent Object>, @MaybePresent SingleParameterInjector<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SingleParameterInjector<? extends @MaybePresent Object>, @MaybePresent SingleParameterInjector<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SingleParameterInjector<? extends @MaybePresent Object>, @MaybePresent SingleParameterInjector<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0286 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ModuleSource, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0287 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<capture#0288 extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RequireAtInjectOnConstructorsOption, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Short, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Short, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0289 extends @MaybePresent Object super capture#0290 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0291 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent ModuleAnnotatedMethodScannerBinding>, @MaybePresent List<@MaybePresent ModuleAnnotatedMethodScannerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0292 extends @MaybePresent Object>, @MaybePresent Class<capture#0292 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeVariable<capture#0293 extends @MaybePresent GenericDeclaration>, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SingleMemberInjector, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<R extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<R extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0294 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<? extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<? extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<? extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<? extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<? extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<? extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<? extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<? extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0295 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0296 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Default>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ModuleInfo, @MaybePresent ModuleInfo)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0297 extends @MaybePresent ProvisionListener>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Annotation>, @MaybePresent Class<@MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectableMember, @MaybePresent InjectableMember)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectableMember, @MaybePresent InjectableMember)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SyntheticProviderBindingImpl<? extends @MaybePresent Object>, @MaybePresent SyntheticProviderBindingImpl<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Message>, @MaybePresent Iterable<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectableField, @MaybePresent InjectableField)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Message>, @MaybePresent Iterable<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Message>, @MaybePresent Iterable<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConvertedConstantBinding<capture#0298 extends T extends @MaybePresent Object>, @MaybePresent Binding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableMap<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Scope>, @MaybePresent Map<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Scope>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableMap<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Scope>, @MaybePresent Map<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Scope>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConvertedConstantBinding<capture#0299 extends T extends @MaybePresent Object>, @MaybePresent ConvertedConstantBinding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeListener, @MaybePresent TypeListener)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeListener, @MaybePresent TypeListener)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent UnsafeClassDefiner, @MaybePresent ClassDefiner)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotationToStringConfig, @MaybePresent AnnotationToStringConfig)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0160 extends @MaybePresent Annotation>, @MaybePresent Class<capture#0160 extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Default, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent RecordingBinder>, @MaybePresent List<@MaybePresent RecordingBinder>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0300 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0301 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableMap<@MaybePresent String, @MaybePresent Object>, @MaybePresent Map<@MaybePresent String, @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0302 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Matcher<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent List<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Binding<? extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0303 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent String, @MaybePresent Object>, @MaybePresent Map<@MaybePresent String, @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent String, @MaybePresent Object>, @MaybePresent Map<@MaybePresent String, @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent String, @MaybePresent Object>, @MaybePresent Map<@MaybePresent String, @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent String, @MaybePresent Object>, @MaybePresent Map<@MaybePresent String, @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactoryToProviderAdapter<T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent String, @MaybePresent Object>, @MaybePresent Map<@MaybePresent String, @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(S extends T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Type, @OptionalBottom Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Multiset<@MaybePresent Object>, @MaybePresent Multiset<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0304 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Double, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Double, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent InjectionPoint>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent InjectionPoint>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent InjectionPoint>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0305 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent TypeLiteral<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent TypeLiteral<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0306 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binder, @MaybePresent Binder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binder, @MaybePresent Binder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Class<capture#0307 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InterceptorStackCallback, @MaybePresent InvocationHandler)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0308 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent ModuleAnnotatedMethodScannerBinding>, @MaybePresent Iterable<? extends @MaybePresent ModuleAnnotatedMethodScannerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0309 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0310 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalInjectorCreator, @MaybePresent InternalInjectorCreator)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0311 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0312 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent CyclicFactory<T extends @MaybePresent Object>.@MaybePresent <anonymous com.google.inject.internal.InternalProviderInstanceBindingImpl$CyclicFactory$1>, @MaybePresent ProvisionCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Collection<? extends @MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0313 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<@MaybePresent String>, @MaybePresent Binding<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionRequest<capture#0314 extends @MaybePresent Object>, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent MethodAspect>, @MaybePresent Iterable<? extends @MaybePresent MethodAspect>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Optional<T extends @MaybePresent Object>>, @MaybePresent TypeLiteral<@MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0315 extends @MaybePresent Object>, @MaybePresent TypeLiteral<capture#0315 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent TypeListenerBinding>, @MaybePresent Collection<? extends @MaybePresent TypeListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent TypeListenerBinding>, @MaybePresent Collection<? extends @MaybePresent TypeListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent TypeListenerBinding>, @MaybePresent Collection<? extends @MaybePresent TypeListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0316 extends @MaybePresent ErrorDetail<capture#0316>>, @MaybePresent ErrorDetail<capture#0316 extends @MaybePresent ErrorDetail<capture#0316>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Multiset<@MaybePresent Object>, @OptionalBottom Multiset<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0317 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0173 extends @MaybePresent Object super @OptionalBottom Class<? extends @MaybePresent Object>>, @MaybePresent Matcher<capture#0173 extends @MaybePresent Object super @OptionalBottom Class<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0318 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0315 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorStore, @MaybePresent MembersInjectorStore)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MapMaker, @MaybePresent MapMaker)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent MethodAspect>, @MaybePresent ImmutableList<@MaybePresent MethodAspect>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent MethodAspect>, @MaybePresent ImmutableList<@MaybePresent MethodAspect>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent MethodAspect>, @MaybePresent ImmutableList<@MaybePresent MethodAspect>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent MethodAspect>, @MaybePresent ImmutableList<@MaybePresent MethodAspect>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent MethodAspect>, @MaybePresent ImmutableList<@MaybePresent MethodAspect>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent MethodAspect>, @MaybePresent ImmutableList<@MaybePresent MethodAspect>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent MethodAspect>, @MaybePresent ImmutableList<@MaybePresent MethodAspect>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Permit>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0144 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent NoSuchMethodException, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Field, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Field, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Field, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ExposureBuilder<T extends @MaybePresent Object>, @MaybePresent AnnotatedElementBuilder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#0319 extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0320 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent GuiceInternal, @MaybePresent GuiceInternal)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#0321 extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent FieldVisitor, @MaybePresent FieldVisitor)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0322 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#0323 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent CustomClassLoadingOption, @MaybePresent CustomClassLoadingOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0324 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalProvisionException, @MaybePresent InternalProvisionException)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalProvisionException, @MaybePresent InternalProvisionException)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent TypeLiteral<@MaybePresent Object>>, @MaybePresent Key<@MaybePresent TypeLiteral<@MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0325 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0326 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedHashSet<@MaybePresent StaticInjectionRequest>, @MaybePresent Set<@MaybePresent StaticInjectionRequest>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent DelayedInitialize, @MaybePresent DelayedInitialize)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent DelayedInitialize, @MaybePresent DelayedInitialize)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0327 extends @MaybePresent Object>, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MethodPartition, @MaybePresent MethodPartition)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorImpl<T extends @MaybePresent Object>.@MaybePresent <anonymous com.google.inject.internal.MembersInjectorImpl$1>, @MaybePresent ProvisionCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent PermitMapImpl, @MaybePresent PermitMap)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0328 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderLookup<T extends @MaybePresent Object>, @MaybePresent ProviderLookup<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderLookup<T extends @MaybePresent Object>, @MaybePresent ProviderLookup<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderLookup<T extends @MaybePresent Object>, @MaybePresent ProviderLookup<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent EnhancerBuilder, @MaybePresent EnhancerBuilder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent EnhancerBuilder, @MaybePresent EnhancerBuilder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0329 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent KeyAndSource, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementType, @MaybePresent ElementType)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Module, @MaybePresent ModuleInfo>, @MaybePresent Map<? extends @MaybePresent Module, ? extends @MaybePresent ModuleInfo>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ModuleAnnotatedMethodScannerBinding, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MethodInterceptor, @MaybePresent MethodInterceptor)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Formatter, @MaybePresent Formatter)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Formatter, @MaybePresent Formatter)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedBindingImpl<T extends @MaybePresent Object>, @MaybePresent LinkedBindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0322 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InstanceBinding<capture#0330 extends @MaybePresent Object>, @MaybePresent InstanceBinding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent InterceptorBinding>, @MaybePresent Collection<? extends @MaybePresent InterceptorBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent InterceptorBinding>, @MaybePresent Collection<? extends @MaybePresent InterceptorBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProxyFactory<T extends @MaybePresent Object>, @MaybePresent ConstructionProxyFactory<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AtomicInteger, @MaybePresent AtomicInteger)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AtomicInteger, @MaybePresent AtomicInteger)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent FactoryProxy<T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0331 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent ErrorId>, @MaybePresent ImmutableSet<@MaybePresent ErrorId>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0332 extends @MaybePresent Object super @OptionalBottom Binding<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0333 extends @MaybePresent Object>, @MaybePresent TypeLiteral<capture#0333 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0334 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Binding<T extends @MaybePresent Object>>, @MaybePresent List<? extends @MaybePresent Binding<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0335 extends @MaybePresent Provider<? extends @MaybePresent Object>>, @MaybePresent Class<? extends @MaybePresent Provider<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent HashMap<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends @MaybePresent Object>>, @MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0336 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent ImmutableList<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent ImmutableList<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent ImmutableList<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Module, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Module, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Module, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0337 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0229 extends @MaybePresent ErrorDetail<capture#0229>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent ProvisionListenerBinding>, @MaybePresent Iterable<? extends @MaybePresent ProvisionListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterable<@MaybePresent String>, @MaybePresent Iterable<? extends @MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0338 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeVariable<capture#0339 extends @MaybePresent GenericDeclaration>, @MaybePresent TypeVariable<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0340 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0341 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LoadingCache<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Boolean>, @MaybePresent LoadingCache<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Boolean>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent StringBuilder, @MaybePresent StringBuilder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent StringBuilder, @MaybePresent StringBuilder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent StringBuilder, @MaybePresent StringBuilder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent StringBuilder, @MaybePresent StringBuilder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0342 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @MaybePresent ImmutableList<@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterable<@MaybePresent Message>, @MaybePresent Iterable<? extends @MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterable<@MaybePresent Message>, @MaybePresent Iterable<? extends @MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterable<@MaybePresent Message>, @MaybePresent Iterable<? extends @MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Boolean, @MaybePresent Boolean)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Boolean, @MaybePresent Boolean)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Boolean, @MaybePresent Boolean)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent TypeConverterBinding>, @MaybePresent Set<@MaybePresent TypeConverterBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MethodType, @MaybePresent MethodType)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#0343 extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0344 extends @MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Key<? extends @MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0345 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RestrictedBindingSource, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0346 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0347 extends @MaybePresent ErrorDetail<capture#0347>>, @MaybePresent ErrorDetail<capture#0347 extends @MaybePresent ErrorDetail<capture#0347>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent DelegatingInvocationHandler<T extends @MaybePresent Object>, @MaybePresent InvocationHandler)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Executable, @MaybePresent Executable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Executable, @MaybePresent Executable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#031 extends @MaybePresent Object super @OptionalBottom Class<? extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0348 extends @MaybePresent Object super capture#0349 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0350 extends @MaybePresent Object>, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0351 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerCallbackStore, @MaybePresent ProvisionListenerCallbackStore)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Enum<T extends @MaybePresent Enum<T extends @MaybePresent Enum<T>>>>, @MaybePresent Class<T extends @MaybePresent Enum<T extends @MaybePresent Enum<T extends @MaybePresent Enum<T>>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0352 extends T extends @MaybePresent Object>, @MaybePresent Key<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0353 extends @MaybePresent Object super capture#0354 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0355 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#0356 extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Method, @MaybePresent AnnotatedElement)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MissingConstructorError, @MaybePresent ErrorDetail<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Builder<@MaybePresent InjectionPoint>, @MaybePresent Builder<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Builder<@MaybePresent InjectionPoint>, @MaybePresent Builder<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#0357 extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<capture#0358 extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BytecodeGenOption, @MaybePresent BytecodeGenOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Constructor<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Inject>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom ProvisionListenerStackCallback<T extends @MaybePresent Object>, @MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0359 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0360 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0361 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0362 extends T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0363 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent PermitMapConstruction, @MaybePresent PermitMapConstruction)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent PermitMapConstruction, @MaybePresent PermitMapConstruction)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Element>, @MaybePresent List<@MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Element>, @MaybePresent List<@MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Element>, @MaybePresent List<@MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Element>, @MaybePresent List<@MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Element>, @MaybePresent List<@MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Element>, @MaybePresent List<@MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Element>, @MaybePresent List<@MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Element>, @MaybePresent List<@MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Element>, @MaybePresent List<@MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Element>, @MaybePresent List<@MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Element>, @MaybePresent List<@MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0364 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Type, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Type, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Type, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0365 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0366 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0367 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SourceFormatter, @MaybePresent SourceFormatter)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvidedByInternalFactory<T extends @MaybePresent Object>, @MaybePresent DelayedInitialize)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0368 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0369 extends @MaybePresent ErrorDetail<capture#0369>>, @MaybePresent ErrorDetail<capture#0369 extends @MaybePresent ErrorDetail<capture#0369>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#031 extends @MaybePresent Object super @OptionalBottom Class<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Class<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SingleParameterInjector<T extends @MaybePresent Object>, @MaybePresent SingleParameterInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0370 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Constructor<capture#0371 extends @MaybePresent Object>, @MaybePresent Member)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0372 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0373 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>, @MaybePresent Map<? extends @MaybePresent Key<? extends @MaybePresent Object>, ? extends @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>, @MaybePresent Map<? extends @MaybePresent Key<? extends @MaybePresent Object>, ? extends @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent List<@MaybePresent InjectionPoint>>, @MaybePresent Map<@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent List<@MaybePresent InjectionPoint>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent List<@MaybePresent InjectionPoint>>, @MaybePresent Map<@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent List<@MaybePresent InjectionPoint>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent List<@MaybePresent InjectionPoint>>, @MaybePresent Map<@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent List<@MaybePresent InjectionPoint>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Builder<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent Builder<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Builder<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent Builder<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Builder<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent Builder<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @OptionalBottom String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Class<capture#0374 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeConverter, @MaybePresent TypeConverter)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeConverter, @MaybePresent TypeConverter)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorId, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingAlreadySetError, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterable<capture#0375 extends @MaybePresent Module>, @MaybePresent Iterable<? extends @MaybePresent Module>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#037 extends @MaybePresent Object super @OptionalBottom Method>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent List<@MaybePresent MethodInterceptor>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent List<@MaybePresent MethodInterceptor>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent List<@MaybePresent MethodInterceptor>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent List<@MaybePresent MethodInterceptor>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent List<@MaybePresent MethodInterceptor>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent List<@MaybePresent MethodInterceptor>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent List<@MaybePresent MethodInterceptor>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0206 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Class<capture#0376 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent GenericArrayTypeImpl, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Builder<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>, @MaybePresent Builder<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0377 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0183 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalProviderInstanceBindingImpl<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0378 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent InvocationHandler>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0379 extends @MaybePresent Object>, @MaybePresent Executable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0380 extends @MaybePresent Object>, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterable<@MaybePresent ModuleAnnotatedMethodScanner>, @MaybePresent Iterable<@MaybePresent ModuleAnnotatedMethodScanner>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterable<@MaybePresent ModuleAnnotatedMethodScanner>, @MaybePresent Iterable<@MaybePresent ModuleAnnotatedMethodScanner>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#0381 extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionRequest<? extends @MaybePresent Object>, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent ErrorDetail<? extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent ErrorDetail<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RemovalNotification<@MaybePresent InjectorBindingData, @MaybePresent Set<@MaybePresent KeyAndSource>>, @MaybePresent RemovalNotification<@MaybePresent InjectorBindingData, @MaybePresent Set<@MaybePresent KeyAndSource>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent ErrorDetail<? extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent ErrorDetail<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent MethodAspect>, @MaybePresent Iterable<@MaybePresent MethodAspect>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0382 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0383 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0384 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent CustomClassLoadingOption, @MaybePresent Enum<@MaybePresent CustomClassLoadingOption>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorImpl<T extends @MaybePresent Object>, @MaybePresent MembersInjectorImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorImpl<T extends @MaybePresent Object>, @MaybePresent MembersInjectorImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorImpl<T extends @MaybePresent Object>, @MaybePresent MembersInjectorImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorImpl<T extends @MaybePresent Object>, @MaybePresent MembersInjectorImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorImpl<T extends @MaybePresent Object>, @MaybePresent MembersInjectorImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorImpl<T extends @MaybePresent Object>, @MaybePresent MembersInjectorImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MissingConstructorError, @MaybePresent ErrorDetail<@MaybePresent MissingConstructorError>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0385 extends @MaybePresent Object>, @MaybePresent Executable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent JitLimitation, @MaybePresent JitLimitation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RuntimeException, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MethodAspect, @MaybePresent MethodAspect)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MethodAspect, @MaybePresent MethodAspect)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0386 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Character, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Character, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableMap<@MaybePresent String, @MaybePresent Object>, @MaybePresent ImmutableMap<@MaybePresent String, @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ActualImpl, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0387 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0388 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0389 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Dependency<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Dependency<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Dependency<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Dependency<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Dependency<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Dependency<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Dependency<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Dependency<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Dependency<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Dependency<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<T extends @MaybePresent Object>, @MaybePresent Dependency<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent List<@MaybePresent Object>>, @MaybePresent List<@MaybePresent List<@MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConfigurationException, @MaybePresent ConfigurationException)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConfigurationException, @MaybePresent ConfigurationException)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0390 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0391 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterable<@MaybePresent TypeConverterBinding>, @MaybePresent Iterable<? extends @MaybePresent TypeConverterBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#042 extends @MaybePresent Object super @OptionalBottom Method>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent Element>, @MaybePresent List<@MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @MaybePresent ImmutableList<@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent PermitMap, @MaybePresent PermitMap)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent PermitMap, @MaybePresent PermitMap)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0392 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0393 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Message>, @MaybePresent Optional<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Message>, @MaybePresent Optional<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Message>, @MaybePresent Optional<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Message>, @MaybePresent Optional<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Inject, @MaybePresent Inject)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom ScopeBinding, @MaybePresent ScopeBinding)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent CacheLoader<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Boolean>, @MaybePresent CacheLoader<? extends @MaybePresent Object super @MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Boolean>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent BindingAnnotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent GenericErrorDetail, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom OverrideIndex, @OptionalBottom OverrideIndex)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0394 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ModuleAnnotatedMethodScannerBinding, @MaybePresent ModuleAnnotatedMethodScannerBinding)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ModuleAnnotatedMethodScannerBinding, @MaybePresent ModuleAnnotatedMethodScannerBinding)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0395 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent CreationException, @MaybePresent CreationException)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent CreationException, @MaybePresent CreationException)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0396 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LoadingCache<@MaybePresent KeyBinding, @MaybePresent ProvisionListenerStackCallback<? extends @MaybePresent Object>>, @MaybePresent LoadingCache<@MaybePresent KeyBinding, @MaybePresent ProvisionListenerStackCallback<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0397 extends @MaybePresent Object>, @MaybePresent Member)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BitSet, @MaybePresent BitSet)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BitSet, @MaybePresent BitSet)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<@MaybePresent String>, @MaybePresent Binding<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0398 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0399 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent DefaultImpl, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent ImplementedBy>, @MaybePresent Class<@MaybePresent ImplementedBy>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionListener<capture#0400 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @OptionalBottom Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @OptionalBottom Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @OptionalBottom Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0401 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0402 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent CompositeType, @MaybePresent CompositeType)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0403 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ExposureBuilder<T extends @MaybePresent Object>, @MaybePresent ExposureBuilder<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SingleMemberInjector, @MaybePresent SingleMemberInjector)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SingleMemberInjector, @MaybePresent SingleMemberInjector)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorId, @MaybePresent ErrorId)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Initializable<@MaybePresent TypeLiteral<T extends @MaybePresent Object>>, @MaybePresent Initializable<@MaybePresent TypeLiteral<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(capture#0285 extends T extends @MaybePresent Object, T extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@Present Optional<@MaybePresent String>, @MaybePresent Optional<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@Present Optional<@MaybePresent String>, @MaybePresent Optional<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@Present Optional<@MaybePresent String>, @MaybePresent Optional<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementSource, @MaybePresent ElementSource)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementSource, @MaybePresent ElementSource)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent ModuleAnnotatedMethodScannerBinding>, @MaybePresent ImmutableList<@MaybePresent ModuleAnnotatedMethodScannerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent ModuleAnnotatedMethodScannerBinding>, @MaybePresent ImmutableList<@MaybePresent ModuleAnnotatedMethodScannerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent ModuleAnnotatedMethodScannerBinding>, @MaybePresent ImmutableList<@MaybePresent ModuleAnnotatedMethodScannerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0404 extends @MaybePresent ErrorDetail<capture#0404>>, @MaybePresent ErrorDetail<capture#0404 extends @MaybePresent ErrorDetail<capture#0404>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<capture#0405 extends T extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom RuntimeException, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructorInjectorStore.@MaybePresent <anonymous com.google.inject.internal.ConstructorInjectorStore$1>, @MaybePresent FailableCache<@MaybePresent InjectionPoint, @MaybePresent ConstructorInjector<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Binding<T extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent Binding<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Binding<T extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent Binding<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Binding<T extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent Binding<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0406 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingTargetVisitor<capture#0407 extends @MaybePresent Object super T extends @MaybePresent Object, V extends @MaybePresent Object>, @MaybePresent BindingTargetVisitor<capture#0407 extends @MaybePresent Object super T extends @MaybePresent Object, V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0408 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#0409 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent OverrideIndex, @MaybePresent OverrideIndex)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SourceProvider, @MaybePresent SourceProvider)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SourceProvider, @MaybePresent SourceProvider)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Character>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Character>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0410 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0411 extends @MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Key<? extends @MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent StackTraceElement, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotationTypeStrategy, @MaybePresent AnnotationTypeStrategy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Method, @OptionalBottom Method)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MissingImplementationError<T extends @MaybePresent Object>, @MaybePresent ErrorDetail<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0412 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RecordingBinder.@MaybePresent <anonymous com.google.inject.spi.Elements$RecordingBinder$1>, @MaybePresent AnnotatedElementBuilder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0413 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConvertedConstantBindingImpl<T extends @MaybePresent Object>, @MaybePresent ConvertedConstantBinding<? extends capture#0414 extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent IncludeStackTraceOption, @MaybePresent Enum<@MaybePresent IncludeStackTraceOption>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0415 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent String>, @MaybePresent Iterable<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0416 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent NullPointerException, @MaybePresent Throwable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent FailableCache<K extends @MaybePresent Object, V extends @MaybePresent Object>.@MaybePresent <anonymous com.google.inject.internal.FailableCache$1>, @MaybePresent CacheLoader<? extends @MaybePresent Object super K extends @MaybePresent Object, @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0417 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Matcher<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0418 extends @MaybePresent Object>, @MaybePresent Executable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ToStringHelper, @MaybePresent ToStringHelper)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0419 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent ProvisionListener>, @MaybePresent List<@MaybePresent ProvisionListener>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent StaticInjectionRequest, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent JavaOptionalProviderProvider<T extends @MaybePresent Object>, @MaybePresent Provider<? extends @MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent ImmutableCollection<@MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Comparator<@MaybePresent Method>, @MaybePresent Comparator<? extends @MaybePresent Object super @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Package, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends capture#0420 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0421 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0422 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Scoping, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Scoping, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Long>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Long>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0423 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0424 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0425 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Permit, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Elements>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom ElementSource, @MaybePresent ElementSource)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotatedConstantBindingBuilder, @MaybePresent AnnotatedConstantBindingBuilder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0426 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0427 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0428 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Double>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Double>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotationStrategy, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.spi.BindingSourceRestriction$1>, @MaybePresent ElementVisitor<@MaybePresent ImmutableList<@MaybePresent Message>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0429 extends @MaybePresent Object super @OptionalBottom TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Class<capture#0430 extends @MaybePresent Annotation>, @OptionalBottom Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Message, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0431 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0432 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RemovalCause, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0433 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0434 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent ModuleAnnotatedMethodScanner>, @MaybePresent Iterable<@MaybePresent ModuleAnnotatedMethodScanner>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Method, @MaybePresent Method)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Method, @MaybePresent Method)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Method, @MaybePresent Method)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Method, @MaybePresent Method)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#093 extends @MaybePresent ErrorDetail<capture#093>>, @MaybePresent ErrorDetail<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Key<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Key<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Key<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Key<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<U extends @MaybePresent Object>, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0435 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0436 extends @MaybePresent Object super capture#0437 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends @MaybePresent Object>>, @MaybePresent Map<? extends @MaybePresent Key<? extends @MaybePresent Object>, ? extends @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionListener<capture#0438 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstantBindingBuilderImpl<@MaybePresent Void>, @MaybePresent AnnotatedConstantBindingBuilder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent OrMatcher<T extends @MaybePresent Object>, @MaybePresent Matcher<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Scope>, @MaybePresent Map<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Scope>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0439 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayListMultimap<@MaybePresent Method, @MaybePresent MethodInterceptor>, @MaybePresent Multimap<@MaybePresent Method, @MaybePresent MethodInterceptor>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0440 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0292 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0441 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0442 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0443 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent IdentityHashMap<@MaybePresent Object, @MaybePresent ConstructionContext<? extends @MaybePresent Object>>, @MaybePresent IdentityHashMap<@MaybePresent Object, @MaybePresent ConstructionContext<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0444 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodAspect>, @MaybePresent Iterable<? extends @MaybePresent MethodAspect>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent Message>, @MaybePresent List<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RequireExactBindingAnnotationsOption, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ChildBindingAlreadySetError, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Entry<@MaybePresent Module, @MaybePresent ModuleInfo>, @MaybePresent Entry<@MaybePresent Module, @MaybePresent ModuleInfo>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ModuleAnnotatedMethodScanner, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ModuleAnnotatedMethodScanner, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ModuleAnnotatedMethodScanner, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @MaybePresent NullType)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0445 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0446 extends @MaybePresent Object super capture#0447 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent GenericArrayType, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent DelegatingInvocationHandler<T extends @MaybePresent Object>, @MaybePresent DelegatingInvocationHandler<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent DelegatingInvocationHandler<T extends @MaybePresent Object>, @MaybePresent DelegatingInvocationHandler<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent DelegatingInvocationHandler<T extends @MaybePresent Object>, @MaybePresent DelegatingInvocationHandler<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Builder<@MaybePresent Element>, @MaybePresent Builder<@MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0448 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0449 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Multimap<K extends @MaybePresent Object, @MaybePresent Binding<V extends @MaybePresent Object>>, @MaybePresent Multimap<K extends @MaybePresent Object, @MaybePresent Binding<V extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedHashSet<@MaybePresent ModuleAnnotatedMethodScanner>, @MaybePresent Set<@MaybePresent ModuleAnnotatedMethodScanner>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedHashSet<@MaybePresent ModuleAnnotatedMethodScanner>, @MaybePresent Set<@MaybePresent ModuleAnnotatedMethodScanner>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayDeque<@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>>, @MaybePresent Deque<@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends T extends @MaybePresent Object>, @MaybePresent Class<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Handle, @MaybePresent Handle)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<capture#0450 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent KotlinSupportInterface, @MaybePresent KotlinSupportInterface)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0451 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<capture#0452 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent MembersInjector<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0453 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Stream<@MaybePresent Annotation>, @MaybePresent Stream<@MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent Message>, @MaybePresent Iterable<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0454 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0455 extends @MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Key<? extends @MaybePresent Provider<? extends T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#0456 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0457 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent WildcardTypeImpl, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0458 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent TypeListenerBinding>, @MaybePresent Iterable<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Provider<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Provider<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Provider<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Provider<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Provider<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Provider<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Provider<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Provider<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructorInjector<? extends @MaybePresent Object>, @MaybePresent ConstructorInjector<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Provider<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#0459 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0460 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent Iterable<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Module, @MaybePresent ModuleInfo>, @MaybePresent Map<@MaybePresent Module, @MaybePresent ModuleInfo>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstantFactory<@MaybePresent TypeLiteral<T extends @MaybePresent Object>>, @MaybePresent InternalFactory<@MaybePresent TypeLiteral<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0461 extends @MaybePresent ErrorDetail<capture#0461>>, @MaybePresent ErrorDetail<capture#0461 extends @MaybePresent ErrorDetail<capture#0461>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0462 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent InjectableMethod>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorImpl<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorImpl<T extends @MaybePresent Object>, @MaybePresent MembersInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeVariable<capture#0463 extends @MaybePresent GenericDeclaration>, @MaybePresent TypeVariable<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0464 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>>, @MaybePresent TypeLiteral<@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionRequest<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionRequest<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Boolean>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Boolean>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Float, @MaybePresent Float)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Float, @MaybePresent Float)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent String>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0465 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0466 extends @MaybePresent Object super @OptionalBottom TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Signature, @MaybePresent Signature)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent RecordingBinder>, @MaybePresent List<@MaybePresent RecordingBinder>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom SourceProvider, @MaybePresent SourceProvider)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingAlreadySetError, @MaybePresent BindingAlreadySetError)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstantFactory<T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0467 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0468 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#0469 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0470 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0471 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MissingConstructorError, @MaybePresent MissingConstructorError)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0472 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InstanceBinding<capture#0473 extends T extends @MaybePresent Object>, @MaybePresent Binding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectorBindingData, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionContext<T extends @MaybePresent Object>, @MaybePresent ConstructionContext<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionContext<T extends @MaybePresent Object>, @MaybePresent ConstructionContext<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionContext<T extends @MaybePresent Object>, @MaybePresent ConstructionContext<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionContext<T extends @MaybePresent Object>, @MaybePresent ConstructionContext<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionContext<T extends @MaybePresent Object>, @MaybePresent ConstructionContext<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionContext<T extends @MaybePresent Object>, @MaybePresent ConstructionContext<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionContext<T extends @MaybePresent Object>, @MaybePresent ConstructionContext<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionContext<T extends @MaybePresent Object>, @MaybePresent ConstructionContext<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionContext<T extends @MaybePresent Object>, @MaybePresent ConstructionContext<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionContext<T extends @MaybePresent Object>, @MaybePresent ConstructionContext<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionContext<T extends @MaybePresent Object>, @MaybePresent ConstructionContext<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0474 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingSelection<capture#0475 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0476 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ClassWriter, @MaybePresent ClassWriter)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ClassWriter, @MaybePresent ClassWriter)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderBinding<capture#0477 extends T extends @MaybePresent Object & @OptionalBottom Provider<? extends @MaybePresent Object>>, @MaybePresent ProviderBinding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Toolable>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0478 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ParameterizedType, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Integer, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Integer, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Integer, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Field, @MaybePresent Member)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Actual, @MaybePresent Actual)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Actual, @MaybePresent Actual)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ModuleAnnotatedMethodScanner, @MaybePresent ModuleAnnotatedMethodScanner)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ModuleAnnotatedMethodScanner, @MaybePresent ModuleAnnotatedMethodScanner)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ScopedBindingBuilder, @MaybePresent ScopedBindingBuilder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ScopedBindingBuilder, @MaybePresent ScopedBindingBuilder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectorOptions, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent Iterable<? extends @MaybePresent MethodInterceptor>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Long>, @MaybePresent Class<@MaybePresent Long>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Long>, @MaybePresent Class<@MaybePresent Long>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom ImmutableList<@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @MaybePresent ImmutableList<@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(B extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(B extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(B extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BytecodeGenOption, @MaybePresent Enum<@MaybePresent BytecodeGenOption>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementsAsModule, @MaybePresent Module)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Initializable<@MaybePresent MembersInjector<T extends @MaybePresent Object>>, @MaybePresent Initializable<@MaybePresent MembersInjector<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvidedByInternalFactory<T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent TypeListenerBinding>, @MaybePresent Iterable<? extends @MaybePresent TypeListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0479 extends @MaybePresent Object super @OptionalBottom Method>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Source, @MaybePresent Source)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0480 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0481 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Stage, @MaybePresent Stage)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<? extends @MaybePresent Object>, @OptionalBottom Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0482 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @OptionalBottom TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Method, @MaybePresent Member)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0483 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Handle, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0484 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0485 extends @MaybePresent Object>, @MaybePresent Key<capture#0485 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotationInstanceStrategy, @MaybePresent AnnotationStrategy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Object>, @MaybePresent TypeLiteral<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0486 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ThreadLocal<@MaybePresent Object @MaybePresent []>, @MaybePresent ThreadLocal<@MaybePresent Object @MaybePresent []>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ThreadLocal<@MaybePresent Object @MaybePresent []>, @MaybePresent ThreadLocal<@MaybePresent Object @MaybePresent []>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0487 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Joiner, @MaybePresent Joiner)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>, @MaybePresent Key<@MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0488 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Element, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0489 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<capture#0209 extends @MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent BindingImpl<? extends @MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent MethodInterceptor>, @MaybePresent List<@MaybePresent MethodInterceptor>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent MethodInterceptor>, @MaybePresent List<@MaybePresent MethodInterceptor>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Element>, @MaybePresent List<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0490 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent GenericDeclaration, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent GenericDeclaration, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#051 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Element, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionException, @MaybePresent ProvisionException)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionException, @MaybePresent ProvisionException)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ColorizeOption, @MaybePresent Enum<@MaybePresent ColorizeOption>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderInstanceBinding<capture#0491 extends T extends @MaybePresent Object>, @MaybePresent Binding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0492 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionListener<? extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent InternalFactory<? extends @MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0493 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0494 extends @MaybePresent Object super @OptionalBottom TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ClassDefiner, @MaybePresent ClassDefiner)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ClassDefiner, @MaybePresent ClassDefiner)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0495 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RealElement, @MaybePresent RealElement)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0496 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Class<capture#0497 extends @MaybePresent Annotation>, @OptionalBottom Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0498 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodAspect>, @MaybePresent Collection<? extends @MaybePresent MethodAspect>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionRequest<? extends @MaybePresent Object>>, @MaybePresent Iterable<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionProxy<T extends @MaybePresent Object>, @MaybePresent ConstructionProxy<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionProxy<T extends @MaybePresent Object>, @MaybePresent ConstructionProxy<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionProxy<T extends @MaybePresent Object>, @MaybePresent ConstructionProxy<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionProxy<T extends @MaybePresent Object>, @MaybePresent ConstructionProxy<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructionProxy<T extends @MaybePresent Object>, @MaybePresent ConstructionProxy<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0499 extends @MaybePresent Object super capture#0500 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0501 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0502 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0503 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0504 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom List<@MaybePresent ProvisionListener>, @MaybePresent List<@MaybePresent ProvisionListener>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0505 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0506 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorsException, @MaybePresent ErrorsException)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorsException, @MaybePresent ErrorsException)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0507 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>, @OptionalBottom ImmutableList<@MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0508 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent StaticInjectionRequest, @MaybePresent StaticInjectionRequest)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent StaticInjectionRequest, @MaybePresent StaticInjectionRequest)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0509 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderInstanceBinding<capture#0510 extends T extends @MaybePresent Object>, @MaybePresent ProviderInstanceBinding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom ImplementedBy, @MaybePresent ImplementedBy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0511 extends @MaybePresent Object>, @MaybePresent Key<capture#0511 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>, @MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>, @MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>, @MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>, @MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>, @MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>, @MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>, @MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>, @MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0103 extends @MaybePresent Object>, @MaybePresent TypeLiteral<capture#0103 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Constructor<? extends @MaybePresent Object>>, @MaybePresent Iterable<? extends @OptionalBottom Constructor<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent SingleParameterInjector<capture#0137 extends @MaybePresent Object>, @MaybePresent SingleParameterInjector<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#0512 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterable<capture#0513 extends @MaybePresent Module>, @MaybePresent Iterable<? extends @MaybePresent Module>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Type, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Type, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Type, @MaybePresent Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0514 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotatedElementBuilder, @MaybePresent AnnotatedElementBuilder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<capture#0515 extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0516 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent HashMap<@MaybePresent Signature, @MaybePresent List<@MaybePresent InjectableMethod>>, @MaybePresent Map<@MaybePresent Signature, @MaybePresent List<@MaybePresent InjectableMethod>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#0517 extends T extends @MaybePresent Object>, @MaybePresent Provider<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0518 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0519 extends @MaybePresent ModuleAnnotatedMethodScanner>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectorBindingData, @MaybePresent InjectorBindingData)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectorBindingData, @MaybePresent InjectorBindingData)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Double, @MaybePresent Double)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Double, @MaybePresent Double)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Actual>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0520 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent MembersInjectorLookup<? extends @MaybePresent Object>>, @MaybePresent Iterable<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.internal.InternalFlags$ColorizeOption$1>, @MaybePresent ColorizeOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.internal.InternalFlags$ColorizeOption$2>, @MaybePresent ColorizeOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.internal.InternalFlags$ColorizeOption$3>, @MaybePresent ColorizeOption)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderInstanceBindingImpl<T extends @MaybePresent Object>, @MaybePresent ProviderInstanceBinding<? extends capture#0521 extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0522 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0160 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0523 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Void>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Void>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#0524 extends capture#0269 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Lookups, @MaybePresent Lookups)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Lookups, @MaybePresent Lookups)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0525 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderInstanceBinding<capture#0526 extends B extends @MaybePresent Object>, @MaybePresent ProviderInstanceBinding<? extends B extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0527 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent ModuleAnnotatedMethodScanner>, @MaybePresent Set<@MaybePresent ModuleAnnotatedMethodScanner>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<V extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent PrivateElementsImpl, @MaybePresent PrivateElementsImpl)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent PrivateElementsImpl, @MaybePresent PrivateElementsImpl)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0528 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0529 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0530 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0531 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0532 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0533 extends @MaybePresent Provider<? extends @MaybePresent Object>>, @MaybePresent Class<? extends @MaybePresent Provider<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<? extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0534 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedHashMap<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>, @MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<T extends @MaybePresent Object>, @MaybePresent Constructor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<T extends @MaybePresent Object>, @MaybePresent Constructor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<T extends @MaybePresent Object>, @MaybePresent Constructor<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<T extends @MaybePresent Object>, @MaybePresent TypeLiteral<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0535 extends @MaybePresent Object>, @MaybePresent Class<capture#0535 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent TypeLiteral<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent TypeLiteral<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MethodHandle, @MaybePresent MethodHandle)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MethodHandle, @MaybePresent MethodHandle)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<capture#0536 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends @MaybePresent Object>, @MaybePresent Binding<capture#0537 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent DelegatingInvocationHandler<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent StaticInjectionRequest>, @MaybePresent Set<@MaybePresent StaticInjectionRequest>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent TypeConverterBinding>, @MaybePresent Iterable<@MaybePresent TypeConverterBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Scoping, @MaybePresent Scoping)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Scoping, @MaybePresent Scoping)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionRequest<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent InjectionRequest<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent RecordingBinder>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0538 extends @MaybePresent Provider<? extends @MaybePresent Object>>, @MaybePresent Class<? extends @MaybePresent Provider<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent CharSequence)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent CharSequence)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent CharSequence)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent CharSequence)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent MethodInterceptor>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent StackTraceElement, @MaybePresent StackTraceElement)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent StackTraceElement, @MaybePresent StackTraceElement)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InterceptorBinding, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InstanceBinding<capture#0539 extends T extends @MaybePresent Object>, @MaybePresent InstanceBinding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent InjectionPoint>, @OptionalBottom Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0540 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0541 extends @MaybePresent Module>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RealOptionalKeyProvider<T extends @MaybePresent Object>, @MaybePresent Provider<? extends @MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListener, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Class<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Class<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Class<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Class<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Class<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Class<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Class<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Class<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Class<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Class<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Object>, @MaybePresent Class<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Entry<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent ScopeBinding>, @MaybePresent Entry<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent ScopeBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0542 extends T extends @MaybePresent Object>, @MaybePresent Key<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Executable, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>>, @MaybePresent TypeLiteral<@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0144 extends @MaybePresent Object>, @MaybePresent Class<capture#0144 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0543 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0544 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0545 extends @MaybePresent Provider<? extends @MaybePresent Object>>, @MaybePresent Class<? extends @MaybePresent Provider<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Enum<E extends @MaybePresent Enum<E>>, @MaybePresent Enum<E extends @MaybePresent Enum<E>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstantFactory<@MaybePresent MembersInjector<T extends @MaybePresent Object>>, @MaybePresent InternalFactory<@MaybePresent MembersInjector<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0546 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConvertedConstantBindingImpl<? extends @MaybePresent Object>, @MaybePresent ConvertedConstantBindingImpl<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#0547 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Errors, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Element, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0548 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent TypeListenerBinding>, @MaybePresent ImmutableList<@MaybePresent TypeListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent TypeListenerBinding>, @MaybePresent ImmutableList<@MaybePresent TypeListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent TypeListenerBinding>, @MaybePresent ImmutableList<@MaybePresent TypeListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent TypeListenerBinding>, @MaybePresent ImmutableList<@MaybePresent TypeListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ExposedBinding<capture#0549 extends T extends @MaybePresent Object>, @MaybePresent Binding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Byte, @MaybePresent Byte)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Byte, @MaybePresent Byte)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Long, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Long, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent DuplicateMapKeyError<K extends @MaybePresent Object, V extends @MaybePresent Object>, @MaybePresent ErrorDetail<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0550 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructorInjector<T extends @MaybePresent Object>, @MaybePresent ConstructorInjector<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#042 extends @MaybePresent Object super @OptionalBottom Method>, @MaybePresent Matcher<capture#042 extends @MaybePresent Object super @OptionalBottom Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0551 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0552 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeVariable<? extends @MaybePresent Object>, @MaybePresent TypeVariable<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent DelegatingInvocationHandler<T extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent DelegatingInvocationHandler<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0553 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0554 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Iterable<capture#0555 extends @MaybePresent Element>, @MaybePresent Iterable<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @OptionalBottom Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0556 extends @MaybePresent Object>, @MaybePresent Constructor<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Enum<T extends @MaybePresent Enum<T>>>, @MaybePresent Class<T extends @MaybePresent Enum<T extends @MaybePresent Enum<T extends @MaybePresent Enum<T>>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent PrivateElements, @MaybePresent PrivateElements)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent PrivateElements, @MaybePresent PrivateElements)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Character, @MaybePresent Character)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Character, @MaybePresent Character)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0557 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TestAnnotation, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0558 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderInstanceBinding<capture#0559 extends B extends @MaybePresent Object>, @MaybePresent ProviderInstanceBinding<? extends B extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ParameterizedType, @MaybePresent ParameterizedType)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ParameterizedType, @MaybePresent ParameterizedType)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotationStrategy, @MaybePresent AnnotationStrategy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotationStrategy, @MaybePresent AnnotationStrategy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImplementedBy, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorLookup<? extends @MaybePresent Object>, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0560 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.internal.Annotations$1>, @MaybePresent CacheLoader<? extends @MaybePresent Object super @MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>, @MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>, @MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>, @MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>, @MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>, @MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>, @MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>, @MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>, @MaybePresent ImmutableMap<@MaybePresent Method, @MaybePresent List<@MaybePresent MethodInterceptor>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0561 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0562 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0563 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0564 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0565 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0566 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ModuleAnnotatedMethodScannerBinding, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeVariable<capture#0567 extends @MaybePresent GenericDeclaration>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LoadingCache<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Annotation>, @MaybePresent LoadingCache<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0568 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructorInjector<T extends @MaybePresent Object>.@MaybePresent <anonymous com.google.inject.internal.ConstructorInjector$1>, @MaybePresent ProvisionCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0569 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructorInjector<capture#0570 extends @MaybePresent Object>, @MaybePresent ConstructorInjector<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom ImmutableList<@MaybePresent SingleMemberInjector>, @MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Named>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0571 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Double>, @MaybePresent Class<@MaybePresent Double>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Double>, @MaybePresent Class<@MaybePresent Double>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent Iterable<? extends @MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent Iterable<? extends @MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent Iterable<? extends @MaybePresent Class<? extends @MaybePresent Annotation>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AccessibleObject, @MaybePresent AccessibleObject)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom NullType, @OptionalBottom Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0572 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0573 extends @MaybePresent Object super @OptionalBottom TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorLookup<T extends @MaybePresent Object>, @MaybePresent MembersInjectorLookup<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorLookup<T extends @MaybePresent Object>, @MaybePresent MembersInjectorLookup<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjectorLookup<T extends @MaybePresent Object>, @MaybePresent MembersInjectorLookup<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent GuiceInternal, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0574 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent HashSet<@MaybePresent Key<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Key<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent HashSet<@MaybePresent Key<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Key<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0575 extends @MaybePresent Object>, @MaybePresent Class<capture#0575 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableMap<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>, @MaybePresent Map<@MaybePresent Key<? extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0576 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0577 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TreeMap<@MaybePresent String, @MaybePresent Method>, @MaybePresent Map<@MaybePresent String, @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0578 extends @MaybePresent Object super @OptionalBottom TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ScopeBinding, @MaybePresent ScopeBinding)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ScopeBinding, @MaybePresent ScopeBinding)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#08 extends @MaybePresent Object super @OptionalBottom TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0579 extends @MaybePresent Provider<? extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent Class<? extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent Class<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0580 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom String, @MaybePresent String)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Optional<T extends @MaybePresent Object>>, @MaybePresent TypeLiteral<@MaybePresent Optional<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(T extends @MaybePresent Object, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderInstanceBindingImpl<T extends @MaybePresent Object>, @MaybePresent ProviderInstanceBinding<? extends capture#0407 extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Integer>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Integer>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent InvocationHandler @MaybePresent []>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0581 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Type, @OptionalBottom Type)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent EncounterImpl<T extends @MaybePresent Object>, @MaybePresent TypeEncounter<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<T extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Injector, @MaybePresent Injector)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Inject>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RecordingBinder, @MaybePresent RecordingBinder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RecordingBinder, @MaybePresent RecordingBinder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0173 extends @MaybePresent Object super @OptionalBottom Class<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Class<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeConverter, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<T extends @MaybePresent Object>, @MaybePresent Binding<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0582 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Boolean, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Boolean, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Boolean, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent FactoryProxy<T extends @MaybePresent Object>, @MaybePresent CreationListener)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<T extends @MaybePresent Object>, @MaybePresent Element)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Provides>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#0583 extends T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Short>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Short>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Key<? extends @MaybePresent Object>>, @MaybePresent ImmutableSet<@MaybePresent Key<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<? extends T extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent SingleMemberInjector>, @OptionalBottom ImmutableList<@MaybePresent SingleMemberInjector>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent GenericArrayType, @MaybePresent GenericArrayType)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent GenericArrayType, @MaybePresent GenericArrayType)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RealOptionalBinder<T extends @MaybePresent Object>, @MaybePresent Module)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0584 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderInstanceBinding<capture#0585 extends B extends @MaybePresent Object>, @MaybePresent ProviderInstanceBinding<? extends B extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Retention, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0586 extends @MaybePresent Object>, @MaybePresent Class<capture#0586 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0322 extends @MaybePresent Annotation>, @MaybePresent Class<capture#0322 extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0587 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0588 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0589 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0590 extends @MaybePresent Annotation>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0591 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Message>, @MaybePresent ImmutableSet<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Message>, @MaybePresent ImmutableSet<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Message>, @MaybePresent ImmutableSet<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Message>, @MaybePresent ImmutableSet<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Float>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent Float>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ModuleSource, @MaybePresent ModuleSource)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ModuleSource, @MaybePresent ModuleSource)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0592 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RealOptionalBinder<T extends @MaybePresent Object>, @MaybePresent RealOptionalBinder<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RealOptionalBinder<T extends @MaybePresent Object>, @MaybePresent RealOptionalBinder<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<K extends @MaybePresent Object, V extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent RestrictionLevel, @MaybePresent RestrictionLevel)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<capture#0593 extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#0356 extends T extends @MaybePresent Object>, @MaybePresent Provider<capture#0356 extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<? extends @MaybePresent Object>, @OptionalBottom Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#0594 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotationTypeStrategy, @MaybePresent AnnotationStrategy)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Method, @MaybePresent Method>, @MaybePresent Map<@MaybePresent Method, @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Method, @MaybePresent Method>, @MaybePresent Map<@MaybePresent Method, @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Method, @MaybePresent Method>, @MaybePresent Map<@MaybePresent Method, @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<? extends T extends @MaybePresent Object>, @MaybePresent Binding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Set<@MaybePresent InjectionPoint>, @MaybePresent Set<@MaybePresent InjectionPoint>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<@MaybePresent Provider<T extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent EnhancerBuilderImpl, @MaybePresent EnhancerBuilder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AbstractGlueGenerator, @MaybePresent AbstractGlueGenerator)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>, @MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>, @MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>, @MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>, @MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>, @MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>, @MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>, @MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>, @MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>, @MaybePresent Function<@MaybePresent String, @MaybePresent BiFunction<@MaybePresent Object, @MaybePresent Object @MaybePresent [], @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingAnnotation, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedBindingImpl<T extends @MaybePresent Object>, @MaybePresent BindingImpl<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Annotation, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom Annotation, @MaybePresent Annotation)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Factory<T extends @MaybePresent Object>.@MaybePresent <anonymous com.google.inject.internal.InternalProviderInstanceBindingImpl$Factory$1>, @MaybePresent ProvisionCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent PrivateBinder, @MaybePresent Binder)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Comparable<? extends @MaybePresent Object super @MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent String, @MaybePresent Comparable<? extends @MaybePresent Object super @MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#041 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Scope>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0595 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Map<@MaybePresent Class<? extends @MaybePresent Annotation>, @MaybePresent Scope>, @MaybePresent Map<? extends @MaybePresent Class<? extends @MaybePresent Annotation>, ? extends @MaybePresent Scope>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0596 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0597 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent Dependency<? extends @MaybePresent Object>>, @MaybePresent List<@MaybePresent Dependency<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderToInternalFactoryAdapter<T extends @MaybePresent Object>, @MaybePresent Provider<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0598 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0599 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<? extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0600 extends @MaybePresent ErrorDetail<capture#0600>>, @MaybePresent ErrorDetail<capture#0600 extends @MaybePresent ErrorDetail<capture#0600>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderInstanceBindingImpl<? extends @MaybePresent Object>, @MaybePresent ProviderInstanceBindingImpl<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0601 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Consumer<@MaybePresent Method>, @MaybePresent Consumer<@MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Consumer<@MaybePresent Method>, @MaybePresent Consumer<@MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Consumer<@MaybePresent Method>, @MaybePresent Consumer<@MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0602 extends @MaybePresent Annotation>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Element>, @MaybePresent List<@MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<capture#0603 extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0604 extends @MaybePresent ErrorDetail<capture#0604>>, @MaybePresent ErrorDetail<capture#0604 extends @MaybePresent ErrorDetail<capture#0604>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeConverterBinding, @MaybePresent TypeConverterBinding)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeConverterBinding, @MaybePresent TypeConverterBinding)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConstructorBinding<capture#0605 extends T extends @MaybePresent Object>, @MaybePresent ConstructorBinding<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ErrorDetail<capture#0226 extends @MaybePresent ErrorDetail<capture#0226>>, @MaybePresent ErrorDetail<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0606 extends @MaybePresent Object super @OptionalBottom TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>.@MaybePresent Provision, @MaybePresent ProvisionListenerStackCallback<T extends @MaybePresent Object>.@MaybePresent Provision)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProvisionListenerBinding, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Message>, @MaybePresent Iterable<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Message>, @MaybePresent Iterable<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Message>, @MaybePresent Iterable<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent SingleMemberInjector>, @MaybePresent List<@MaybePresent SingleMemberInjector>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Type, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#051 extends @MaybePresent Annotation>, @MaybePresent Class<capture#051 extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0607 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectorOptions, @MaybePresent InjectorOptions)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Binding<capture#0608 extends @MaybePresent Object>, @MaybePresent Binding<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#0609 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0610 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectorImpl, @MaybePresent Injector)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableMap<@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent ImmutableMap<@MaybePresent TypeLiteral<? extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0611 extends @MaybePresent Annotation>, @MaybePresent Class<capture#0611 extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent AnnotatedBindingBuilder<T extends @MaybePresent Object>, @MaybePresent LinkedBindingBuilder<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Array, @MaybePresent Array)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Multiset<@MaybePresent Object>, @MaybePresent Multiset<@MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0612 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectionListener<capture#0613 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent InjectionListener<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ElementVisitor<T extends @MaybePresent Object>, @MaybePresent ElementVisitor<V extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ArrayList<@MaybePresent ProvisionListenerBinding>, @MaybePresent List<@MaybePresent ProvisionListenerBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0614 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0615 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0616 extends @MaybePresent Object super capture#0617 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0618 extends T extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MethodAspect, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalFactory<capture#0619 extends T extends @MaybePresent Object>, @MaybePresent InternalFactory<? extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(B extends @MaybePresent Object, B extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(B extends @MaybePresent Object, B extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(B extends @MaybePresent Object, B extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(B extends @MaybePresent Object, B extends @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent LinkedHashSet<@MaybePresent MembersInjectorLookup<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent MembersInjectorLookup<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<capture#0620 extends @MaybePresent Object>, @MaybePresent Member)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Key<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Key<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Key<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Key<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Key<? extends @MaybePresent Object>>, @MaybePresent Set<@MaybePresent Key<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0621 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0622 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Field, @MaybePresent AnnotatedElement)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent KeyAndSource>, @MaybePresent Set<@MaybePresent KeyAndSource>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent KeyAndSource>, @MaybePresent Set<@MaybePresent KeyAndSource>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent KeyAndSource>, @MaybePresent Set<@MaybePresent KeyAndSource>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Enum<T extends @MaybePresent Enum<T extends @MaybePresent Enum<T>>>, @MaybePresent Enum<T extends @MaybePresent Enum<T extends @MaybePresent Enum<T extends @MaybePresent Enum<T>>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Enum<T extends @MaybePresent Enum<T extends @MaybePresent Enum<T>>>, @MaybePresent Enum<T extends @MaybePresent Enum<T extends @MaybePresent Enum<T extends @MaybePresent Enum<T>>>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Integer, @MaybePresent Integer)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Integer, @MaybePresent Integer)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent BindingImpl<capture#0623 extends @MaybePresent Object>, @MaybePresent BindingImpl<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0624 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableSet<@MaybePresent Class<? extends @MaybePresent Annotation>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent ProvisionListener>, @MaybePresent List<@MaybePresent ProvisionListener>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ProviderInternalFactory<T extends @MaybePresent Object>.@MaybePresent <anonymous com.google.inject.internal.ProviderInternalFactory$1>, @MaybePresent ProvisionCallback<T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0625 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MapJoiner, @MaybePresent MapJoiner)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MapJoiner, @MaybePresent MapJoiner)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent GenericArrayTypeImpl, @MaybePresent GenericArrayType)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InjectableMethod, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent MembersInjector<capture#0626 extends @MaybePresent Object super T extends @MaybePresent Object>, @MaybePresent MembersInjector<? extends @MaybePresent Object super T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0627 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0628 extends @MaybePresent Object super @OptionalBottom Class<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent Class<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent Method>, @MaybePresent Collection<? extends @MaybePresent Method>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Constructor<? extends @MaybePresent Object>, @MaybePresent Executable)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalContext, @MaybePresent InternalContext)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InternalContext, @MaybePresent InternalContext)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Collection<@MaybePresent ScopeBinding>, @MaybePresent Collection<@MaybePresent ScopeBinding>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Key<capture#0629 extends @MaybePresent Object>, @MaybePresent Key<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.spi.BindingSourceRestriction$2>, @MaybePresent ElementVisitor<@MaybePresent Void>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Provider<capture#0630 extends T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<capture#0586 extends @MaybePresent Object>, @MaybePresent TypeLiteral<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent CreationListener, @MaybePresent CreationListener)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent CreationListener, @MaybePresent CreationListener)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Integer>, @MaybePresent Class<@MaybePresent Integer>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Integer>, @MaybePresent Class<@MaybePresent Integer>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0352 extends T extends @MaybePresent Object>, @MaybePresent Class<capture#0352 extends T extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent InstanceBindingImpl<@MaybePresent TypeLiteral<T extends @MaybePresent Object>>, @MaybePresent BindingImpl<@MaybePresent TypeLiteral<T extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Message, @MaybePresent Message)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Message, @MaybePresent Message)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0631 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Set<@MaybePresent ProviderLookup<? extends @MaybePresent Object>>, @MaybePresent Iterable<? extends @MaybePresent Element>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0632 extends @MaybePresent InjectorOptions>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Matcher<capture#0633 extends @MaybePresent Object super @OptionalBottom TypeLiteral<? extends @MaybePresent Object>>, @MaybePresent Matcher<? extends @MaybePresent Object super @MaybePresent TypeLiteral<? extends @MaybePresent Object>>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ScopeNotFoundError, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0634 extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@OptionalBottom ImmutableList<@MaybePresent MethodAspect>, @MaybePresent ImmutableList<@MaybePresent MethodAspect>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent <anonymous com.google.inject.internal.InternalFlags$1>, @MaybePresent PrivilegedAction<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Dependency<capture#0635 extends @MaybePresent Object>, @MaybePresent Dependency<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0636 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0402 extends @MaybePresent Object>, @MaybePresent Class<capture#0402 extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent Iterable<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ImmutableList<@MaybePresent Message>, @MaybePresent Iterable<@MaybePresent Message>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent List<@MaybePresent Class<? extends @MaybePresent Object>>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent String>, @MaybePresent TypeLiteral<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent TypeLiteral<@MaybePresent String>, @MaybePresent TypeLiteral<@MaybePresent String>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<capture#0637 extends @MaybePresent Object>, @MaybePresent Class<? extends @MaybePresent Object>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Singleton>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Singleton>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Class<@MaybePresent Singleton>, @MaybePresent Class<? extends @MaybePresent Annotation>)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent Optional<T extends @MaybePresent Object>, @MaybePresent Object)=[@org.checkerframework.checker.optional.qual.MaybePresent], IPair(@MaybePresent ConcurrentMap<@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Boolean>, @MaybePresent Map<@MaybePresent Class<? extends @MaybePresent Object>, @MaybePresent Boolean>)=[@org.checkerframework.checker.optional.qual.MaybePresent]} )
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/AbstractGlueGenerator.java
  Last visited tree at line 146 column 40:
                invokerTable.invokeExact(signatureTable.applyAsInt(signature));
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitPrimitive_Array(AbstractAtmComboVisitor.java:387)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:504)
  	at org.checkerframework.framework.type.DefaultTypeHierarchy.isSubtype(DefaultTypeHierarchy.java:258)
  	at org.checkerframework.framework.type.DefaultTypeHierarchy.isSubtype(DefaultTypeHierarchy.java:136)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.commonAssignmentCheck(BaseTypeVisitor.java:3028)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.checkVarargs(BaseTypeVisitor.java:1915)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethodInvocation(BaseTypeVisitor.java:1782)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitMethodInvocation(OptionalVisitor.java:323)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitMethodInvocation(OptionalVisitor.java:41)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodInvocation.accept(JCTree.java:1666)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitTypeCast(TreeScanner.java:639)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitTypeCast(BaseTypeVisitor.java:2572)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitTypeCast(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCTypeCast.accept(JCTree.java:2048)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitReturn(TreeScanner.java:469)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:2189)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCReturn.accept(JCTree.java:1570)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitBlock(TreeScanner.java:248)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBlock.accept(JCTree.java:1048)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitTry(TreeScanner.java:374)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCTry.accept(JCTree.java:1344)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitBlock(TreeScanner.java:248)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBlock.accept(JCTree.java:1048)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitLambdaExpression(TreeScanner.java:559)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitLambdaExpression(BaseTypeVisitor.java:2146)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitLambdaExpression(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCLambda.accept(JCTree.java:1831)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitReturn(TreeScanner.java:469)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:2189)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCReturn.accept(JCTree.java:1570)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitBlock(TreeScanner.java:248)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBlock.accept(JCTree.java:1048)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitIf(TreeScanner.java:419)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitIf(OptionalVisitor.java:253)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitIf(OptionalVisitor.java:41)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCIf.accept(JCTree.java:1449)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitBlock(TreeScanner.java:248)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBlock.accept(JCTree.java:1048)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitMethod(TreeScanner.java:206)
  	at org.checkerframework.framework.source.SourceVisitor.visitMethod(SourceVisitor.java:110)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:1035)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept(JCTree.java:898)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.desugar(JavaCompiler.java:1512)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.desugar(JavaCompiler.java:1428)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/PackageNameCompressor.java:161: error: [method.invocation] call to get() not allowed on the given receiver.
    int longestKey = replacementMap.keySet().stream().max(comparing(String::length)).get().length();
                                                                                        ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeGetter.java:23: warning: Unsafe is internal proprietary API and may be removed in a future release
  static sun.misc.Unsafe getUnsafe() throws ReflectiveOperationException {
                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeGetter.java:23: warning: Unsafe is internal proprietary API and may be removed in a future release
  static sun.misc.Unsafe getUnsafe() throws ReflectiveOperationException {
                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeGetter.java:23: warning: Unsafe is internal proprietary API and may be removed in a future release
  static sun.misc.Unsafe getUnsafe() throws ReflectiveOperationException {
                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeGetter.java:25: warning: Unsafe is internal proprietary API and may be removed in a future release
      return sun.misc.Unsafe.getUnsafe();
                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeGetter.java:30: warning: Unsafe is internal proprietary API and may be removed in a future release
    Class<sun.misc.Unsafe> k = sun.misc.Unsafe.class;
                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/UnsafeGetter.java:30: warning: Unsafe is internal proprietary API and may be removed in a future release
    Class<sun.misc.Unsafe> k = sun.misc.Unsafe.class;
                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/AnonymousClassDefiner.java:28: warning: Unsafe is internal proprietary API and may be removed in a future release
  private static final sun.misc.Unsafe THE_UNSAFE;
                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/AnonymousClassDefiner.java:28: warning: Unsafe is internal proprietary API and may be removed in a future release
  private static final sun.misc.Unsafe THE_UNSAFE;
                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/AnonymousClassDefiner.java:28: warning: Unsafe is internal proprietary API and may be removed in a future release
  private static final sun.misc.Unsafe THE_UNSAFE;
                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/AnonymousClassDefiner.java:36: warning: Unsafe is internal proprietary API and may be removed in a future release
          sun.misc.Unsafe.class.getMethod(
                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/HiddenClassDefiner.java:31: warning: Unsafe is internal proprietary API and may be removed in a future release
  private static final sun.misc.Unsafe THE_UNSAFE;
                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/HiddenClassDefiner.java:31: warning: Unsafe is internal proprietary API and may be removed in a future release
  private static final sun.misc.Unsafe THE_UNSAFE;
                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/src/com/google/inject/internal/aop/HiddenClassDefiner.java:31: warning: Unsafe is internal proprietary API and may be removed in a future release
  private static final sun.misc.Unsafe THE_UNSAFE;
                               ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
2 errors
19 warnings
Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Assisted.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/ParameterListKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/BindingCollector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/internal/LookupTester.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedConstructor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/package-info.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:64: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append not allowed in side-effect-free method
      result.append("@Assisted ");
                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:67: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append(bindingAnnotation).append not allowed in side-effect-free method
      result.append(bindingAnnotation).append(' ');
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:67: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append not allowed in side-effect-free method
      result.append(bindingAnnotation).append(' ');
                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:69: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append not allowed in side-effect-free method
    return result.append(type).toString();
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:62: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
    StringBuilder result = new StringBuilder();
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:345: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Lists.newArrayList not allowed in deterministic side-effect-free method
    List<Dependency<?>> dependencies = Lists.newArrayList();
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:347: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting constructor.getAllParameters not allowed in deterministic side-effect-free method
      for (Parameter parameter : constructor.getAllParameters()) {
                                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:348: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting parameter.isProvidedByFactory not allowed in deterministic side-effect-free method
        if (!parameter.isProvidedByFactory()) {
                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:349: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.add not allowed in deterministic side-effect-free method
          dependencies.add(Dependency.get(parameter.getPrimaryBindingKey()));
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:349: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
          dependencies.add(Dependency.get(parameter.getPrimaryBindingKey()));
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:349: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting parameter.getPrimaryBindingKey not allowed in deterministic side-effect-free method
          dependencies.add(Dependency.get(parameter.getPrimaryBindingKey()));
                                                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:353: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.copyOf not allowed in deterministic side-effect-free method
    return ImmutableSet.copyOf(dependencies);
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:346: warning: [purity.not.deterministic.call] call to non-deterministic method factoryMethodToConstructor.values not allowed in deterministic method
    for (AssistedConstructor<?> constructor : factoryMethodToConstructor.values()) {
                                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:364: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.getDeclaringClass not allowed in deterministic side-effect-free method
            if (method.getDeclaringClass().equals(Object.class)) {
                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:365: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.getName not allowed in deterministic side-effect-free method
              if ("equals".equals(method.getName())) {
                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:367: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.getName not allowed in deterministic side-effect-free method
              } else if ("hashCode".equals(method.getName())) {
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:370: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.invoke not allowed in deterministic side-effect-free method
                return method.invoke(this, creationArgs);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:375: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting gatherArgsForConstructor not allowed in deterministic side-effect-free method
            Object[] constructorArgs = gatherArgsForConstructor(constructor, creationArgs);
                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:376: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting constructor.newInstance not allowed in deterministic side-effect-free method
            Object objectToReturn = constructor.newInstance(constructorArgs);
                                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:383: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting constructor.getAllParameters not allowed in deterministic side-effect-free method
            int numParams = constructor.getAllParameters().size();
                                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:388: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting constructor.getAllParameters not allowed in deterministic side-effect-free method
              Parameter parameter = constructor.getAllParameters().get(i);
                                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:389: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting parameter.isProvidedByFactory not allowed in deterministic side-effect-free method
              if (parameter.isProvidedByFactory()) {
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:390: warning: [purity.not.deterministic.not.sideeffectfree.assign.array] array assignment not allowed in deterministic side-effect-free method
                result[i] = factoryArgs[argPosition];
                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:393: warning: [purity.not.deterministic.not.sideeffectfree.assign.array] array assignment not allowed in deterministic side-effect-free method
                result[i] = parameter.getValue(injector);
                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:393: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting parameter.getValue not allowed in deterministic side-effect-free method
                result[i] = parameter.getValue(injector);
                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:402: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting factoryRawType.cast not allowed in deterministic side-effect-free method
    return factoryRawType.cast(
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:403: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Proxy.newProxyInstance not allowed in deterministic side-effect-free method
        Proxy.newProxyInstance(
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:404: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting factoryRawType.getClassLoader not allowed in deterministic side-effect-free method
            factoryRawType.getClassLoader(), new Class<?>[] {factoryRawType}, invocationHandler));
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:359: warning: [purity.not.sideeffectfree.call] call to side-effecting InvocationHandler not allowed in side-effect-free method
        new InvocationHandler() {
        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:359: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
        new InvocationHandler() {
        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:377: warning: [purity.not.deterministic.call] call to non-deterministic method injector.injectMembers not allowed in deterministic method
            injector.injectMembers(objectToReturn);
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:409: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(factoryType, implementationType);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java:129: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((Assisted)o).value not allowed in deterministic side-effect-free method
          return o instanceof Assisted && ((Assisted) o).value().isEmpty();
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java:142: warning: [purity.not.sideeffectfree.call] call to side-effecting Annotations.memberValueString not allowed in side-effect-free method
              + Annotations.memberValueString("value", "")
                                             ^
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java
  Last visited tree at line 143 column 17:
                + ")";
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitVariable(TreeScanner.java:223)
  	at org.checkerframework.framework.source.SourceVisitor.visitVariable(SourceVisitor.java:104)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitVariable(BaseTypeVisitor.java:1548)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:365)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:41)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCVariableDecl.accept(JCTree.java:990)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java
  Last visited tree at line 35 column 14:
    Collection<AssistedMethod> getAssistedMethods();
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java
  Last visited tree at line 43 column 18:
    Set<Dependency<?>> getDependencies();
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java
  Last visited tree at line 51 column 1:
  @Keep
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java
  Last visited tree at line 33 column 43:
    V visit(AssistedInjectBinding<? extends T> assistedInjectBinding);
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
5 errors
34 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024707-4amks6f0/iteration0' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Assisted.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/ParameterListKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/BindingCollector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/internal/LookupTester.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedConstructor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/package-info.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:64: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append not allowed in side-effect-free method
      result.append("@Assisted ");
                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:67: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append(bindingAnnotation).append not allowed in side-effect-free method
      result.append(bindingAnnotation).append(' ');
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:67: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append not allowed in side-effect-free method
      result.append(bindingAnnotation).append(' ');
                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:69: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append not allowed in side-effect-free method
    return result.append(type).toString();
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:62: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
    StringBuilder result = new StringBuilder();
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:345: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Lists.newArrayList not allowed in deterministic side-effect-free method
    List<Dependency<?>> dependencies = Lists.newArrayList();
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:349: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.add not allowed in deterministic side-effect-free method
          dependencies.add(Dependency.get(parameter.getPrimaryBindingKey()));
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:349: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
          dependencies.add(Dependency.get(parameter.getPrimaryBindingKey()));
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:349: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting parameter.getPrimaryBindingKey not allowed in deterministic side-effect-free method
          dependencies.add(Dependency.get(parameter.getPrimaryBindingKey()));
                                                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:353: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.copyOf not allowed in deterministic side-effect-free method
    return ImmutableSet.copyOf(dependencies);
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:346: warning: [purity.not.deterministic.call] call to non-deterministic method factoryMethodToConstructor.values not allowed in deterministic method
    for (AssistedConstructor<?> constructor : factoryMethodToConstructor.values()) {
                                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:364: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.getDeclaringClass not allowed in deterministic side-effect-free method
            if (method.getDeclaringClass().equals(Object.class)) {
                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:365: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.getName not allowed in deterministic side-effect-free method
              if ("equals".equals(method.getName())) {
                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:367: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.getName not allowed in deterministic side-effect-free method
              } else if ("hashCode".equals(method.getName())) {
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:370: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.invoke not allowed in deterministic side-effect-free method
                return method.invoke(this, creationArgs);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:375: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting gatherArgsForConstructor not allowed in deterministic side-effect-free method
            Object[] constructorArgs = gatherArgsForConstructor(constructor, creationArgs);
                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:376: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting constructor.newInstance not allowed in deterministic side-effect-free method
            Object objectToReturn = constructor.newInstance(constructorArgs);
                                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:390: warning: [purity.not.deterministic.not.sideeffectfree.assign.array] array assignment not allowed in deterministic side-effect-free method
                result[i] = factoryArgs[argPosition];
                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:393: warning: [purity.not.deterministic.not.sideeffectfree.assign.array] array assignment not allowed in deterministic side-effect-free method
                result[i] = parameter.getValue(injector);
                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:393: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting parameter.getValue not allowed in deterministic side-effect-free method
                result[i] = parameter.getValue(injector);
                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:402: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting factoryRawType.cast not allowed in deterministic side-effect-free method
    return factoryRawType.cast(
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:403: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Proxy.newProxyInstance not allowed in deterministic side-effect-free method
        Proxy.newProxyInstance(
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:404: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting factoryRawType.getClassLoader not allowed in deterministic side-effect-free method
            factoryRawType.getClassLoader(), new Class<?>[] {factoryRawType}, invocationHandler));
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:359: warning: [purity.not.sideeffectfree.call] call to side-effecting InvocationHandler not allowed in side-effect-free method
        new InvocationHandler() {
        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:359: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
        new InvocationHandler() {
        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:377: warning: [purity.not.deterministic.call] call to non-deterministic method injector.injectMembers not allowed in deterministic method
            injector.injectMembers(objectToReturn);
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:409: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(factoryType, implementationType);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java:129: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((Assisted)o).value not allowed in deterministic side-effect-free method
          return o instanceof Assisted && ((Assisted) o).value().isEmpty();
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java:142: warning: [purity.not.sideeffectfree.call] call to side-effecting Annotations.memberValueString not allowed in side-effect-free method
              + Annotations.memberValueString("value", "")
                                             ^
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java
  Last visited tree at line 143 column 17:
                + ")";
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitVariable(TreeScanner.java:223)
  	at org.checkerframework.framework.source.SourceVisitor.visitVariable(SourceVisitor.java:104)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitVariable(BaseTypeVisitor.java:1548)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:365)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:41)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCVariableDecl.accept(JCTree.java:990)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java
  Last visited tree at line 35 column 14:
    Collection<AssistedMethod> getAssistedMethods();
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java
  Last visited tree at line 43 column 18:
    Set<Dependency<?>> getDependencies();
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java
  Last visited tree at line 51 column 1:
  @Keep
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java
  Last visited tree at line 33 column 43:
    V visit(AssistedInjectBinding<? extends T> assistedInjectBinding);
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
5 errors
29 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024707-4amks6f0/iteration1' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Assisted.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/ParameterListKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/BindingCollector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/internal/LookupTester.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedConstructor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/package-info.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:64: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append not allowed in side-effect-free method
      result.append("@Assisted ");
                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:67: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append(bindingAnnotation).append not allowed in side-effect-free method
      result.append(bindingAnnotation).append(' ');
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:67: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append not allowed in side-effect-free method
      result.append(bindingAnnotation).append(' ');
                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:69: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append not allowed in side-effect-free method
    return result.append(type).toString();
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:62: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
    StringBuilder result = new StringBuilder();
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:345: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Lists.newArrayList not allowed in deterministic side-effect-free method
    List<Dependency<?>> dependencies = Lists.newArrayList();
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:349: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.add not allowed in deterministic side-effect-free method
          dependencies.add(Dependency.get(parameter.getPrimaryBindingKey()));
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:349: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
          dependencies.add(Dependency.get(parameter.getPrimaryBindingKey()));
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:349: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting parameter.getPrimaryBindingKey not allowed in deterministic side-effect-free method
          dependencies.add(Dependency.get(parameter.getPrimaryBindingKey()));
                                                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:353: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.copyOf not allowed in deterministic side-effect-free method
    return ImmutableSet.copyOf(dependencies);
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:346: warning: [purity.not.deterministic.call] call to non-deterministic method factoryMethodToConstructor.values not allowed in deterministic method
    for (AssistedConstructor<?> constructor : factoryMethodToConstructor.values()) {
                                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:364: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.getDeclaringClass not allowed in deterministic side-effect-free method
            if (method.getDeclaringClass().equals(Object.class)) {
                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:365: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.getName not allowed in deterministic side-effect-free method
              if ("equals".equals(method.getName())) {
                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:367: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.getName not allowed in deterministic side-effect-free method
              } else if ("hashCode".equals(method.getName())) {
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:370: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.invoke not allowed in deterministic side-effect-free method
                return method.invoke(this, creationArgs);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:375: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting gatherArgsForConstructor not allowed in deterministic side-effect-free method
            Object[] constructorArgs = gatherArgsForConstructor(constructor, creationArgs);
                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:376: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting constructor.newInstance not allowed in deterministic side-effect-free method
            Object objectToReturn = constructor.newInstance(constructorArgs);
                                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:390: warning: [purity.not.deterministic.not.sideeffectfree.assign.array] array assignment not allowed in deterministic side-effect-free method
                result[i] = factoryArgs[argPosition];
                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:393: warning: [purity.not.deterministic.not.sideeffectfree.assign.array] array assignment not allowed in deterministic side-effect-free method
                result[i] = parameter.getValue(injector);
                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:393: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting parameter.getValue not allowed in deterministic side-effect-free method
                result[i] = parameter.getValue(injector);
                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:402: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting factoryRawType.cast not allowed in deterministic side-effect-free method
    return factoryRawType.cast(
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:403: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Proxy.newProxyInstance not allowed in deterministic side-effect-free method
        Proxy.newProxyInstance(
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:404: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting factoryRawType.getClassLoader not allowed in deterministic side-effect-free method
            factoryRawType.getClassLoader(), new Class<?>[] {factoryRawType}, invocationHandler));
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:359: warning: [purity.not.sideeffectfree.call] call to side-effecting InvocationHandler not allowed in side-effect-free method
        new InvocationHandler() {
        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:359: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
        new InvocationHandler() {
        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:377: warning: [purity.not.deterministic.call] call to non-deterministic method injector.injectMembers not allowed in deterministic method
            injector.injectMembers(objectToReturn);
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:409: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(factoryType, implementationType);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java:129: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((Assisted)o).value not allowed in deterministic side-effect-free method
          return o instanceof Assisted && ((Assisted) o).value().isEmpty();
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java:142: warning: [purity.not.sideeffectfree.call] call to side-effecting Annotations.memberValueString not allowed in side-effect-free method
              + Annotations.memberValueString("value", "")
                                             ^
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java
  Last visited tree at line 143 column 17:
                + ")";
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitVariable(TreeScanner.java:223)
  	at org.checkerframework.framework.source.SourceVisitor.visitVariable(SourceVisitor.java:104)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitVariable(BaseTypeVisitor.java:1548)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:365)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:41)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCVariableDecl.accept(JCTree.java:990)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java
  Last visited tree at line 35 column 14:
    Collection<AssistedMethod> getAssistedMethods();
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java
  Last visited tree at line 43 column 18:
    Set<Dependency<?>> getDependencies();
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java
  Last visited tree at line 51 column 1:
  @Keep
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java
  Last visited tree at line 33 column 43:
    V visit(AssistedInjectBinding<? extends T> assistedInjectBinding);
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
5 errors
29 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024707-4amks6f0/iteration2' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Assisted.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/ParameterListKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/BindingCollector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/internal/LookupTester.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedConstructor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/package-info.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:64: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append not allowed in side-effect-free method
      result.append("@Assisted ");
                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:67: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append(bindingAnnotation).append not allowed in side-effect-free method
      result.append(bindingAnnotation).append(' ');
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:67: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append not allowed in side-effect-free method
      result.append(bindingAnnotation).append(' ');
                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:69: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append not allowed in side-effect-free method
    return result.append(type).toString();
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:62: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
    StringBuilder result = new StringBuilder();
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:345: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Lists.newArrayList not allowed in deterministic side-effect-free method
    List<Dependency<?>> dependencies = Lists.newArrayList();
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:349: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.add not allowed in deterministic side-effect-free method
          dependencies.add(Dependency.get(parameter.getPrimaryBindingKey()));
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:349: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
          dependencies.add(Dependency.get(parameter.getPrimaryBindingKey()));
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:349: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting parameter.getPrimaryBindingKey not allowed in deterministic side-effect-free method
          dependencies.add(Dependency.get(parameter.getPrimaryBindingKey()));
                                                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:353: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.copyOf not allowed in deterministic side-effect-free method
    return ImmutableSet.copyOf(dependencies);
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:346: warning: [purity.not.deterministic.call] call to non-deterministic method factoryMethodToConstructor.values not allowed in deterministic method
    for (AssistedConstructor<?> constructor : factoryMethodToConstructor.values()) {
                                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:364: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.getDeclaringClass not allowed in deterministic side-effect-free method
            if (method.getDeclaringClass().equals(Object.class)) {
                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:365: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.getName not allowed in deterministic side-effect-free method
              if ("equals".equals(method.getName())) {
                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:367: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.getName not allowed in deterministic side-effect-free method
              } else if ("hashCode".equals(method.getName())) {
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:370: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.invoke not allowed in deterministic side-effect-free method
                return method.invoke(this, creationArgs);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:375: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting gatherArgsForConstructor not allowed in deterministic side-effect-free method
            Object[] constructorArgs = gatherArgsForConstructor(constructor, creationArgs);
                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:376: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting constructor.newInstance not allowed in deterministic side-effect-free method
            Object objectToReturn = constructor.newInstance(constructorArgs);
                                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:390: warning: [purity.not.deterministic.not.sideeffectfree.assign.array] array assignment not allowed in deterministic side-effect-free method
                result[i] = factoryArgs[argPosition];
                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:393: warning: [purity.not.deterministic.not.sideeffectfree.assign.array] array assignment not allowed in deterministic side-effect-free method
                result[i] = parameter.getValue(injector);
                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:393: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting parameter.getValue not allowed in deterministic side-effect-free method
                result[i] = parameter.getValue(injector);
                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:402: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting factoryRawType.cast not allowed in deterministic side-effect-free method
    return factoryRawType.cast(
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:403: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Proxy.newProxyInstance not allowed in deterministic side-effect-free method
        Proxy.newProxyInstance(
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:404: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting factoryRawType.getClassLoader not allowed in deterministic side-effect-free method
            factoryRawType.getClassLoader(), new Class<?>[] {factoryRawType}, invocationHandler));
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:359: warning: [purity.not.sideeffectfree.call] call to side-effecting InvocationHandler not allowed in side-effect-free method
        new InvocationHandler() {
        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:359: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
        new InvocationHandler() {
        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:377: warning: [purity.not.deterministic.call] call to non-deterministic method injector.injectMembers not allowed in deterministic method
            injector.injectMembers(objectToReturn);
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:409: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(factoryType, implementationType);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java:129: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((Assisted)o).value not allowed in deterministic side-effect-free method
          return o instanceof Assisted && ((Assisted) o).value().isEmpty();
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java:142: warning: [purity.not.sideeffectfree.call] call to side-effecting Annotations.memberValueString not allowed in side-effect-free method
              + Annotations.memberValueString("value", "")
                                             ^
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java
  Last visited tree at line 143 column 17:
                + ")";
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitVariable(TreeScanner.java:223)
  	at org.checkerframework.framework.source.SourceVisitor.visitVariable(SourceVisitor.java:104)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitVariable(BaseTypeVisitor.java:1548)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:365)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:41)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCVariableDecl.accept(JCTree.java:990)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java
  Last visited tree at line 35 column 14:
    Collection<AssistedMethod> getAssistedMethods();
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java
  Last visited tree at line 43 column 18:
    Set<Dependency<?>> getDependencies();
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java
  Last visited tree at line 51 column 1:
  @Keep
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java
  Last visited tree at line 33 column 43:
    V visit(AssistedInjectBinding<? extends T> assistedInjectBinding);
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
5 errors
29 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024707-4amks6f0/iteration3' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Assisted.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/ParameterListKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/BindingCollector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/internal/LookupTester.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedConstructor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/package-info.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:64: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append not allowed in side-effect-free method
      result.append("@Assisted ");
                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:67: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append(bindingAnnotation).append not allowed in side-effect-free method
      result.append(bindingAnnotation).append(' ');
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:67: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append not allowed in side-effect-free method
      result.append(bindingAnnotation).append(' ');
                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:69: warning: [purity.not.sideeffectfree.call] call to side-effecting result.append not allowed in side-effect-free method
    return result.append(type).toString();
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java:62: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
    StringBuilder result = new StringBuilder();
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:345: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Lists.newArrayList not allowed in deterministic side-effect-free method
    List<Dependency<?>> dependencies = Lists.newArrayList();
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:349: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.add not allowed in deterministic side-effect-free method
          dependencies.add(Dependency.get(parameter.getPrimaryBindingKey()));
                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:349: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
          dependencies.add(Dependency.get(parameter.getPrimaryBindingKey()));
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:349: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting parameter.getPrimaryBindingKey not allowed in deterministic side-effect-free method
          dependencies.add(Dependency.get(parameter.getPrimaryBindingKey()));
                                                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:353: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.copyOf not allowed in deterministic side-effect-free method
    return ImmutableSet.copyOf(dependencies);
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:346: warning: [purity.not.deterministic.call] call to non-deterministic method factoryMethodToConstructor.values not allowed in deterministic method
    for (AssistedConstructor<?> constructor : factoryMethodToConstructor.values()) {
                                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:364: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.getDeclaringClass not allowed in deterministic side-effect-free method
            if (method.getDeclaringClass().equals(Object.class)) {
                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:365: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.getName not allowed in deterministic side-effect-free method
              if ("equals".equals(method.getName())) {
                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:367: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.getName not allowed in deterministic side-effect-free method
              } else if ("hashCode".equals(method.getName())) {
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:370: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting method.invoke not allowed in deterministic side-effect-free method
                return method.invoke(this, creationArgs);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:375: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting gatherArgsForConstructor not allowed in deterministic side-effect-free method
            Object[] constructorArgs = gatherArgsForConstructor(constructor, creationArgs);
                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:376: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting constructor.newInstance not allowed in deterministic side-effect-free method
            Object objectToReturn = constructor.newInstance(constructorArgs);
                                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:390: warning: [purity.not.deterministic.not.sideeffectfree.assign.array] array assignment not allowed in deterministic side-effect-free method
                result[i] = factoryArgs[argPosition];
                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:393: warning: [purity.not.deterministic.not.sideeffectfree.assign.array] array assignment not allowed in deterministic side-effect-free method
                result[i] = parameter.getValue(injector);
                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:393: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting parameter.getValue not allowed in deterministic side-effect-free method
                result[i] = parameter.getValue(injector);
                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:402: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting factoryRawType.cast not allowed in deterministic side-effect-free method
    return factoryRawType.cast(
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:403: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Proxy.newProxyInstance not allowed in deterministic side-effect-free method
        Proxy.newProxyInstance(
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:404: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting factoryRawType.getClassLoader not allowed in deterministic side-effect-free method
            factoryRawType.getClassLoader(), new Class<?>[] {factoryRawType}, invocationHandler));
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:359: warning: [purity.not.sideeffectfree.call] call to side-effecting InvocationHandler not allowed in side-effect-free method
        new InvocationHandler() {
        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:359: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
        new InvocationHandler() {
        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:377: warning: [purity.not.deterministic.call] call to non-deterministic method injector.injectMembers not allowed in deterministic method
            injector.injectMembers(objectToReturn);
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java:409: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(factoryType, implementationType);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java:129: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((Assisted)o).value not allowed in deterministic side-effect-free method
          return o instanceof Assisted && ((Assisted) o).value().isEmpty();
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java:142: warning: [purity.not.sideeffectfree.call] call to side-effecting Annotations.memberValueString not allowed in side-effect-free method
              + Annotations.memberValueString("value", "")
                                             ^
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java
  Last visited tree at line 143 column 17:
                + ")";
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitVariable(TreeScanner.java:223)
  	at org.checkerframework.framework.source.SourceVisitor.visitVariable(SourceVisitor.java:104)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitVariable(BaseTypeVisitor.java:1548)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:365)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:41)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCVariableDecl.accept(JCTree.java:990)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java
  Last visited tree at line 35 column 14:
    Collection<AssistedMethod> getAssistedMethods();
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java
  Last visited tree at line 43 column 18:
    Set<Dependency<?>> getDependencies();
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java
  Last visited tree at line 51 column 1:
  @Keep
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: SourceChecker.typeProcess: unexpected Throwable (NullPointerException) while processing /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java
  Last visited tree at line 33 column 43:
    V visit(AssistedInjectBinding<? extends T> assistedInjectBinding);
  Exception: java.lang.NullPointerException; java.lang.NullPointerException
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.setSupertypesAndSubtypesModified(WholeProgramInferenceJavaParserStorage.java:236)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1019)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
5 errors
29 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024707-4amks6f0/iteration3' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Assisted.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/ParameterListKey.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/BindingCollector.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/internal/LookupTester.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedConstructor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/src/com/google/inject/assistedinject/package-info.java'

Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/classes:/homes/gws/jmsy/.m2/repository/com/google/dagger/dagger/2.22.1/dagger-2.22.1.jar:/homes/gws/jmsy/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/SupportedAnnotations.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/Keys.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/Annotations.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:145: warning: [purity.not.sideeffectfree.call] call to side-effecting DaggerMethodScanner.create not allowed in side-effect-free method
      ModuleAnnotatedMethodScanner scanner = DaggerMethodScanner.create(predicate);
                                                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:146: warning: [purity.not.sideeffectfree.call] call to side-effecting deduplicateModules not allowed in side-effect-free method
      for (Object module : deduplicateModules(binder, transitiveModules())) {
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:146: warning: [purity.not.sideeffectfree.call] call to side-effecting transitiveModules not allowed in side-effect-free method
      for (Object module : deduplicateModules(binder, transitiveModules())) {
                                                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:147: warning: [purity.not.sideeffectfree.call] call to side-effecting checkIsDaggerModule not allowed in side-effect-free method
        checkIsDaggerModule(module, binder);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:148: warning: [purity.not.sideeffectfree.call] call to side-effecting validateNoSubcomponents not allowed in side-effect-free method
        validateNoSubcomponents(binder, module);
                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:149: warning: [purity.not.sideeffectfree.call] call to side-effecting allDeclaredMethods not allowed in side-effect-free method
        ImmutableList<Method> declaredMethods = allDeclaredMethods(moduleClass(module));
                                                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:149: warning: [purity.not.sideeffectfree.call] call to side-effecting moduleClass not allowed in side-effect-free method
        ImmutableList<Method> declaredMethods = allDeclaredMethods(moduleClass(module));
                                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:150: warning: [purity.not.sideeffectfree.call] call to side-effecting checkUnsupportedDaggerAnnotations not allowed in side-effect-free method
        checkUnsupportedDaggerAnnotations(declaredMethods, binder);
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:151: warning: [purity.not.sideeffectfree.call] call to side-effecting instantiateIfNecessary not allowed in side-effect-free method
        module = instantiateIfNecessary(module, declaredMethods, binder);
                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting ProviderMethodsModule.forModule not allowed in side-effect-free method
        binder.install(ProviderMethodsModule.forModule(module, scanner));
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:291: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(this).add not allowed in side-effect-free method
      return MoreObjects.toStringHelper(this).add("modules", declaredModules).toString();
                                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:291: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
      return MoreObjects.toStringHelper(this).add("modules", declaredModules).toString();
                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:69: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting supportedBindingAnnotations not allowed in deterministic side-effect-free method
    return supportedBindingAnnotations();
                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:76: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting predicate.apply not allowed in deterministic side-effect-free method
    if (!predicate.apply(method)) {
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:79: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting annotation.annotationType not allowed in deterministic side-effect-free method
    Class<? extends Annotation> annotationType = annotation.annotationType();
                                                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:81: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting processMultibindingAnnotations not allowed in deterministic side-effect-free method
      return processMultibindingAnnotations(binder, method, key);
                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:83: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting configureBindsKey not allowed in deterministic side-effect-free method
      configureBindsKey(binder, method, key);
                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:86: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting configureMultibindsKey not allowed in deterministic side-effect-free method
      configureMultibindsKey(binder, method, key);
                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:89: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting OptionalBinder.newOptionalBinder not allowed in deterministic side-effect-free method
      OptionalBinder.newOptionalBinder(binder, key);
                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:93: warning: [purity.not.deterministic.call] call to non-deterministic method annotation.toString not allowed in deterministic method
    throw new UnsupportedOperationException(annotation.toString());
                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
    Annotation mapKey = mapKeyOpt.get();
                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:233: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(this).add not allowed in side-effect-free method
    return MoreObjects.toStringHelper(this).add("predicate", predicate).toString();
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:233: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(this).add("predicate", predicate).toString();
                                     ^
23 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024811-556afuw5/iteration0' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/classes:/homes/gws/jmsy/.m2/repository/com/google/dagger/dagger/2.22.1/dagger-2.22.1.jar:/homes/gws/jmsy/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/SupportedAnnotations.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/Keys.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/Annotations.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:145: warning: [purity.not.sideeffectfree.call] call to side-effecting DaggerMethodScanner.create not allowed in side-effect-free method
      ModuleAnnotatedMethodScanner scanner = DaggerMethodScanner.create(predicate);
                                                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:146: warning: [purity.not.sideeffectfree.call] call to side-effecting deduplicateModules not allowed in side-effect-free method
      for (Object module : deduplicateModules(binder, transitiveModules())) {
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:146: warning: [purity.not.sideeffectfree.call] call to side-effecting transitiveModules not allowed in side-effect-free method
      for (Object module : deduplicateModules(binder, transitiveModules())) {
                                                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:147: warning: [purity.not.sideeffectfree.call] call to side-effecting checkIsDaggerModule not allowed in side-effect-free method
        checkIsDaggerModule(module, binder);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:148: warning: [purity.not.sideeffectfree.call] call to side-effecting validateNoSubcomponents not allowed in side-effect-free method
        validateNoSubcomponents(binder, module);
                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:149: warning: [purity.not.sideeffectfree.call] call to side-effecting allDeclaredMethods not allowed in side-effect-free method
        ImmutableList<Method> declaredMethods = allDeclaredMethods(moduleClass(module));
                                                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:150: warning: [purity.not.sideeffectfree.call] call to side-effecting checkUnsupportedDaggerAnnotations not allowed in side-effect-free method
        checkUnsupportedDaggerAnnotations(declaredMethods, binder);
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:151: warning: [purity.not.sideeffectfree.call] call to side-effecting instantiateIfNecessary not allowed in side-effect-free method
        module = instantiateIfNecessary(module, declaredMethods, binder);
                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting ProviderMethodsModule.forModule not allowed in side-effect-free method
        binder.install(ProviderMethodsModule.forModule(module, scanner));
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:291: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(this).add not allowed in side-effect-free method
      return MoreObjects.toStringHelper(this).add("modules", declaredModules).toString();
                                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:291: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
      return MoreObjects.toStringHelper(this).add("modules", declaredModules).toString();
                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:76: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting predicate.apply not allowed in deterministic side-effect-free method
    if (!predicate.apply(method)) {
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:79: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting annotation.annotationType not allowed in deterministic side-effect-free method
    Class<? extends Annotation> annotationType = annotation.annotationType();
                                                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:81: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting processMultibindingAnnotations not allowed in deterministic side-effect-free method
      return processMultibindingAnnotations(binder, method, key);
                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:83: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting configureBindsKey not allowed in deterministic side-effect-free method
      configureBindsKey(binder, method, key);
                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:86: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting configureMultibindsKey not allowed in deterministic side-effect-free method
      configureMultibindsKey(binder, method, key);
                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:89: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting OptionalBinder.newOptionalBinder not allowed in deterministic side-effect-free method
      OptionalBinder.newOptionalBinder(binder, key);
                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:93: warning: [purity.not.deterministic.call] call to non-deterministic method annotation.toString not allowed in deterministic method
    throw new UnsupportedOperationException(annotation.toString());
                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
    Annotation mapKey = mapKeyOpt.get();
                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:233: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(this).add not allowed in side-effect-free method
    return MoreObjects.toStringHelper(this).add("predicate", predicate).toString();
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:233: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(this).add("predicate", predicate).toString();
                                     ^
21 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024811-556afuw5/iteration1' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/classes:/homes/gws/jmsy/.m2/repository/com/google/dagger/dagger/2.22.1/dagger-2.22.1.jar:/homes/gws/jmsy/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/SupportedAnnotations.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/Keys.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/Annotations.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:145: warning: [purity.not.sideeffectfree.call] call to side-effecting DaggerMethodScanner.create not allowed in side-effect-free method
      ModuleAnnotatedMethodScanner scanner = DaggerMethodScanner.create(predicate);
                                                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:146: warning: [purity.not.sideeffectfree.call] call to side-effecting deduplicateModules not allowed in side-effect-free method
      for (Object module : deduplicateModules(binder, transitiveModules())) {
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:146: warning: [purity.not.sideeffectfree.call] call to side-effecting transitiveModules not allowed in side-effect-free method
      for (Object module : deduplicateModules(binder, transitiveModules())) {
                                                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:147: warning: [purity.not.sideeffectfree.call] call to side-effecting checkIsDaggerModule not allowed in side-effect-free method
        checkIsDaggerModule(module, binder);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:148: warning: [purity.not.sideeffectfree.call] call to side-effecting validateNoSubcomponents not allowed in side-effect-free method
        validateNoSubcomponents(binder, module);
                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:149: warning: [purity.not.sideeffectfree.call] call to side-effecting allDeclaredMethods not allowed in side-effect-free method
        ImmutableList<Method> declaredMethods = allDeclaredMethods(moduleClass(module));
                                                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:150: warning: [purity.not.sideeffectfree.call] call to side-effecting checkUnsupportedDaggerAnnotations not allowed in side-effect-free method
        checkUnsupportedDaggerAnnotations(declaredMethods, binder);
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:151: warning: [purity.not.sideeffectfree.call] call to side-effecting instantiateIfNecessary not allowed in side-effect-free method
        module = instantiateIfNecessary(module, declaredMethods, binder);
                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting ProviderMethodsModule.forModule not allowed in side-effect-free method
        binder.install(ProviderMethodsModule.forModule(module, scanner));
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:291: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(this).add not allowed in side-effect-free method
      return MoreObjects.toStringHelper(this).add("modules", declaredModules).toString();
                                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java:291: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
      return MoreObjects.toStringHelper(this).add("modules", declaredModules).toString();
                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:76: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting predicate.apply not allowed in deterministic side-effect-free method
    if (!predicate.apply(method)) {
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:79: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting annotation.annotationType not allowed in deterministic side-effect-free method
    Class<? extends Annotation> annotationType = annotation.annotationType();
                                                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:81: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting processMultibindingAnnotations not allowed in deterministic side-effect-free method
      return processMultibindingAnnotations(binder, method, key);
                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:83: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting configureBindsKey not allowed in deterministic side-effect-free method
      configureBindsKey(binder, method, key);
                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:86: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting configureMultibindsKey not allowed in deterministic side-effect-free method
      configureMultibindsKey(binder, method, key);
                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:89: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting OptionalBinder.newOptionalBinder not allowed in deterministic side-effect-free method
      OptionalBinder.newOptionalBinder(binder, key);
                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:93: warning: [purity.not.deterministic.call] call to non-deterministic method annotation.toString not allowed in deterministic method
    throw new UnsupportedOperationException(annotation.toString());
                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
    Annotation mapKey = mapKeyOpt.get();
                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:233: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(this).add not allowed in side-effect-free method
    return MoreObjects.toStringHelper(this).add("predicate", predicate).toString();
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:233: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(this).add("predicate", predicate).toString();
                                     ^
21 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024811-556afuw5/iteration1' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/classes:/homes/gws/jmsy/.m2/repository/com/google/dagger/dagger/2.22.1/dagger-2.22.1.jar:/homes/gws/jmsy/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerAdapter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/SupportedAnnotations.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/Keys.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/Annotations.java'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/dagger-adapter/src/com/google/inject/daggeradapter/DaggerMethodScanner.java:147: error: [method.invocation] call to get() not allowed on the given receiver.
    Annotation mapKey = mapKeyOpt.get();
                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
1 error
Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/EdgeStyle.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/CompassPoint.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ShortNameFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DefaultNodeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/AliasCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/PortIdFactoryImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DefaultRootKeySetCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/TransitiveDependencyVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizEdge.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/NodeShape.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DefaultEdgeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NameFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/RootKeySetCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/NodeStyle.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InjectorGrapher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InterfaceNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ProviderAliasCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizGrapher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Alias.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/AbstractInjectorGrapher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/EdgeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/ArrowType.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/PortIdFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/Graphviz.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java:50: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return super.equals(other) && Objects.equal(members, other.members);
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java:55: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(members);
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java:61: warning: [purity.not.sideeffectfree.call] call to side-effecting getId not allowed in side-effect-free method
        + getId()
               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java:63: warning: [purity.not.sideeffectfree.call] call to side-effecting getSource not allowed in side-effect-free method
        + getSource()
                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java:56: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(id, other.id)
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java:57: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
        && (ignoreSourceInComparisons || Objects.equal(source, other.source));
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java:62: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return ignoreSourceInComparisons ? id.hashCode() : Objects.hashCode(id, source);
                                                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java:68: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(key, nodeType);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java:77: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(key, other.key) && Objects.equal(nodeType, other.nodeType);
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java:77: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(key, other.key) && Objects.equal(nodeType, other.nodeType);
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java:50: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(fromId, other.fromId) && Objects.equal(toId, other.toId);
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java:50: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(fromId, other.fromId) && Objects.equal(toId, other.toId);
                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java:55: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(fromId, toId);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InterfaceNode.java:43: warning: [purity.not.sideeffectfree.call] call to side-effecting getId not allowed in side-effect-free method
    return "InterfaceNode{id=" + getId() + " source=" + getSource() + "}";
                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InterfaceNode.java:43: warning: [purity.not.sideeffectfree.call] call to side-effecting getSource not allowed in side-effect-free method
    return "InterfaceNode{id=" + getId() + " source=" + getSource() + "}";
                                                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java:53: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
        && Objects.equal(instance, other.instance)
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java:54: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
        && Objects.equal(members, other.members);
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(instance, members);
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java:65: warning: [purity.not.sideeffectfree.call] call to side-effecting getId not allowed in side-effect-free method
        + getId()
               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java:67: warning: [purity.not.sideeffectfree.call] call to side-effecting getSource not allowed in side-effect-free method
        + getSource()
                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java:51: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return super.equals(other) && Objects.equal(injectionPoint, other.injectionPoint);
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java:56: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(injectionPoint);
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java:62: warning: [purity.not.sideeffectfree.call] call to side-effecting getFromId not allowed in side-effect-free method
        + getFromId()
                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java:64: warning: [purity.not.sideeffectfree.call] call to side-effecting getToId not allowed in side-effect-free method
        + getToId()
                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java:55: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return super.equals(other) && Objects.equal(type, other.type);
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java:60: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(type);
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java:65: warning: [purity.not.sideeffectfree.call] call to side-effecting getFromId not allowed in side-effect-free method
    return "BindingEdge{fromId=" + getFromId() + " toId=" + getToId() + " type=" + type + "}";
                                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java:65: warning: [purity.not.sideeffectfree.call] call to side-effecting getToId not allowed in side-effect-free method
    return "BindingEdge{fromId=" + getFromId() + " toId=" + getToId() + " type=" + type + "}";
                                                                   ^
28 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024841-uqc55njt/iteration0' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/EdgeStyle.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/CompassPoint.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ShortNameFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DefaultNodeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/AliasCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/PortIdFactoryImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DefaultRootKeySetCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/TransitiveDependencyVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizEdge.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/NodeShape.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DefaultEdgeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NameFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/RootKeySetCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/NodeStyle.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InjectorGrapher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InterfaceNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ProviderAliasCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizGrapher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Alias.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/AbstractInjectorGrapher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/EdgeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/ArrowType.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/PortIdFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/Graphviz.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java:50: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return super.equals(other) && Objects.equal(members, other.members);
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java:55: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(members);
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java:56: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(id, other.id)
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java:57: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
        && (ignoreSourceInComparisons || Objects.equal(source, other.source));
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java:62: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return ignoreSourceInComparisons ? id.hashCode() : Objects.hashCode(id, source);
                                                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java:68: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(key, nodeType);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java:77: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(key, other.key) && Objects.equal(nodeType, other.nodeType);
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java:77: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(key, other.key) && Objects.equal(nodeType, other.nodeType);
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java:50: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(fromId, other.fromId) && Objects.equal(toId, other.toId);
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java:50: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(fromId, other.fromId) && Objects.equal(toId, other.toId);
                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java:55: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(fromId, toId);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java:53: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
        && Objects.equal(instance, other.instance)
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java:54: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
        && Objects.equal(members, other.members);
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(instance, members);
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java:51: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return super.equals(other) && Objects.equal(injectionPoint, other.injectionPoint);
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java:56: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(injectionPoint);
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java:55: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return super.equals(other) && Objects.equal(type, other.type);
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java:60: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(type);
                                                   ^
18 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024841-uqc55njt/iteration1' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/EdgeStyle.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/CompassPoint.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ShortNameFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DefaultNodeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/AliasCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/PortIdFactoryImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DefaultRootKeySetCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/TransitiveDependencyVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizEdge.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/NodeShape.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DefaultEdgeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NameFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/RootKeySetCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/NodeStyle.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InjectorGrapher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InterfaceNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ProviderAliasCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizGrapher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Alias.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/AbstractInjectorGrapher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/EdgeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/ArrowType.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/PortIdFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/Graphviz.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java:50: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return super.equals(other) && Objects.equal(members, other.members);
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java:55: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(members);
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java:56: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(id, other.id)
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java:57: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
        && (ignoreSourceInComparisons || Objects.equal(source, other.source));
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java:62: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return ignoreSourceInComparisons ? id.hashCode() : Objects.hashCode(id, source);
                                                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java:68: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(key, nodeType);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java:77: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(key, other.key) && Objects.equal(nodeType, other.nodeType);
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java:77: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(key, other.key) && Objects.equal(nodeType, other.nodeType);
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java:50: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(fromId, other.fromId) && Objects.equal(toId, other.toId);
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java:50: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(fromId, other.fromId) && Objects.equal(toId, other.toId);
                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java:55: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(fromId, toId);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java:53: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
        && Objects.equal(instance, other.instance)
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java:54: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
        && Objects.equal(members, other.members);
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(instance, members);
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java:51: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return super.equals(other) && Objects.equal(injectionPoint, other.injectionPoint);
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java:56: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(injectionPoint);
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java:55: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return super.equals(other) && Objects.equal(type, other.type);
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java:60: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(type);
                                                   ^
18 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024841-uqc55njt/iteration2' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/EdgeStyle.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/CompassPoint.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ShortNameFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DefaultNodeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/AliasCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/PortIdFactoryImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DefaultRootKeySetCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/TransitiveDependencyVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizEdge.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/NodeShape.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DefaultEdgeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NameFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/RootKeySetCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/NodeStyle.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InjectorGrapher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InterfaceNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ProviderAliasCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizGrapher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Alias.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/AbstractInjectorGrapher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/EdgeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/ArrowType.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/PortIdFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/Graphviz.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java:50: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return super.equals(other) && Objects.equal(members, other.members);
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java:55: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(members);
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java:56: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(id, other.id)
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java:57: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
        && (ignoreSourceInComparisons || Objects.equal(source, other.source));
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java:62: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return ignoreSourceInComparisons ? id.hashCode() : Objects.hashCode(id, source);
                                                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java:68: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(key, nodeType);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java:77: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(key, other.key) && Objects.equal(nodeType, other.nodeType);
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java:77: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(key, other.key) && Objects.equal(nodeType, other.nodeType);
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java:50: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(fromId, other.fromId) && Objects.equal(toId, other.toId);
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java:50: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return Objects.equal(fromId, other.fromId) && Objects.equal(toId, other.toId);
                                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java:55: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return Objects.hashCode(fromId, toId);
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java:53: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
        && Objects.equal(instance, other.instance)
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java:54: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
        && Objects.equal(members, other.members);
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(instance, members);
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java:51: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return super.equals(other) && Objects.equal(injectionPoint, other.injectionPoint);
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java:56: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(injectionPoint);
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java:55: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.equal not allowed in deterministic side-effect-free method
    return super.equals(other) && Objects.equal(type, other.type);
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java:60: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Objects.hashCode not allowed in deterministic side-effect-free method
    return 31 * super.hashCode() + Objects.hashCode(type);
                                                   ^
18 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024841-uqc55njt/iteration2' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/assistedinject/target/classes:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/EdgeStyle.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/CompassPoint.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Edge.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ShortNameFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DefaultNodeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Node.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/AliasCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/PortIdFactoryImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DefaultRootKeySetCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/TransitiveDependencyVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizEdge.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/NodeShape.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DefaultEdgeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NameFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeId.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/RootKeySetCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/NodeStyle.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InjectorGrapher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InterfaceNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/ProviderAliasCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizGrapher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/Alias.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/AbstractInjectorGrapher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/EdgeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/ArrowType.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/InstanceNode.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/PortIdFactory.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/graphviz/Graphviz.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/NodeCreator.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java'

Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src/com/google/inject/tools/jmx/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src/com/google/inject/tools/jmx/Manager.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src/com/google/inject/tools/jmx/ManagedBindingMBean.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src/com/google/inject/tools/jmx/ManagedBinding.java' '-Ainfer=ajava' '-Awarns'

Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src/com/google/inject/tools/jmx/Manager.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024934-eltlzv6_/iteration0' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src/com/google/inject/tools/jmx/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src/com/google/inject/tools/jmx/Manager.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src/com/google/inject/tools/jmx/ManagedBindingMBean.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src/com/google/inject/tools/jmx/ManagedBinding.java' '-Ainfer=ajava' '-Awarns'

Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src/com/google/inject/tools/jmx/Manager.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024934-eltlzv6_/iteration0' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src/com/google/inject/tools/jmx/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src/com/google/inject/tools/jmx/Manager.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src/com/google/inject/tools/jmx/ManagedBindingMBean.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src/com/google/inject/tools/jmx/ManagedBinding.java'

Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jmx/src/com/google/inject/tools/jmx/Manager.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/JndiIntegration.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/package-info.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/JndiIntegration.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting type.cast not allowed in deterministic side-effect-free method
        return type.cast(context.lookup(name));
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/JndiIntegration.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting context.lookup not allowed in deterministic side-effect-free method
        return type.cast(context.lookup(name));
                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/JndiIntegration.java:60: warning: [purity.not.deterministic.catch] catch block not allowed in deterministic method
      } catch (NamingException e) {
        ^
3 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024950-xa56dgy1/iteration0' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/JndiIntegration.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/package-info.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/JndiIntegration.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting type.cast not allowed in deterministic side-effect-free method
        return type.cast(context.lookup(name));
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/JndiIntegration.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting context.lookup not allowed in deterministic side-effect-free method
        return type.cast(context.lookup(name));
                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/JndiIntegration.java:60: warning: [purity.not.deterministic.catch] catch block not allowed in deterministic method
      } catch (NamingException e) {
        ^
3 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024950-xa56dgy1/iteration1' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/JndiIntegration.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/package-info.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/JndiIntegration.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting type.cast not allowed in deterministic side-effect-free method
        return type.cast(context.lookup(name));
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/JndiIntegration.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting context.lookup not allowed in deterministic side-effect-free method
        return type.cast(context.lookup(name));
                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/JndiIntegration.java:60: warning: [purity.not.deterministic.catch] catch block not allowed in deterministic method
      } catch (NamingException e) {
        ^
3 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-024950-xa56dgy1/iteration1' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/JndiIntegration.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/jndi/src/com/google/inject/jndi/package-info.java'

Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.0.0/jakarta.persistence-api-3.0.0.jar:/homes/gws/jmsy/.m2/repository/jakarta/servlet/jakarta.servlet-api/5.0.0/jakarta.servlet-api-5.0.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/FirstResult.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaFinderProxy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaLocalTxnInterceptor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistOptions.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/UnitOfWork.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/Jpa.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/DynamicFinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/Finder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistService.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/Transactional.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/MaxResults.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistFilter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistModule.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting options.getAutoBeginWorkOnEntityManagerCreation not allowed in deterministic side-effect-free method
    if (options.getAutoBeginWorkOnEntityManagerCreation() && !isWorking()) {
                                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting isWorking not allowed in deterministic side-effect-free method
    if (options.getAutoBeginWorkOnEntityManagerCreation() && !isWorking()) {
                                                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java:60: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting begin not allowed in deterministic side-effect-free method
      begin();
           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java:63: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting entityManager.get not allowed in deterministic side-effect-free method
    EntityManager em = entityManager.get();
                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java:64: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Preconditions.checkState not allowed in deterministic side-effect-free method
    Preconditions.checkState(
                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistModule.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting m.getDeclaringClass not allowed in deterministic side-effect-free method
          return !Object.class.equals(m.getDeclaringClass());
                                                         ^
Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistModule.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
6 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025008-902v8kpy/iteration0' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.0.0/jakarta.persistence-api-3.0.0.jar:/homes/gws/jmsy/.m2/repository/jakarta/servlet/jakarta.servlet-api/5.0.0/jakarta.servlet-api-5.0.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/FirstResult.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaFinderProxy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaLocalTxnInterceptor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistOptions.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/UnitOfWork.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/Jpa.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/DynamicFinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/Finder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistService.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/Transactional.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/MaxResults.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistFilter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistModule.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting isWorking not allowed in deterministic side-effect-free method
    if (options.getAutoBeginWorkOnEntityManagerCreation() && !isWorking()) {
                                                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java:60: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting begin not allowed in deterministic side-effect-free method
      begin();
           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java:63: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting entityManager.get not allowed in deterministic side-effect-free method
    EntityManager em = entityManager.get();
                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java:64: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Preconditions.checkState not allowed in deterministic side-effect-free method
    Preconditions.checkState(
                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistModule.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting m.getDeclaringClass not allowed in deterministic side-effect-free method
          return !Object.class.equals(m.getDeclaringClass());
                                                         ^
Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistModule.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
5 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025008-902v8kpy/iteration1' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.0.0/jakarta.persistence-api-3.0.0.jar:/homes/gws/jmsy/.m2/repository/jakarta/servlet/jakarta.servlet-api/5.0.0/jakarta.servlet-api-5.0.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/FirstResult.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaFinderProxy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaLocalTxnInterceptor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistOptions.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/UnitOfWork.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/Jpa.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/DynamicFinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/Finder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistService.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/Transactional.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/MaxResults.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistFilter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistModule.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting isWorking not allowed in deterministic side-effect-free method
    if (options.getAutoBeginWorkOnEntityManagerCreation() && !isWorking()) {
                                                                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java:60: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting begin not allowed in deterministic side-effect-free method
      begin();
           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java:63: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting entityManager.get not allowed in deterministic side-effect-free method
    EntityManager em = entityManager.get();
                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java:64: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Preconditions.checkState not allowed in deterministic side-effect-free method
    Preconditions.checkState(
                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistModule.java:59: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting m.getDeclaringClass not allowed in deterministic side-effect-free method
          return !Object.class.equals(m.getDeclaringClass());
                                                         ^
Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistModule.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
5 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025008-902v8kpy/iteration1' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.0.0/jakarta.persistence-api-3.0.0.jar:/homes/gws/jmsy/.m2/repository/jakarta/servlet/jakarta.servlet-api/5.0.0/jakarta.servlet-api-5.0.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/FirstResult.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaFinderProxy.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaLocalTxnInterceptor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistOptions.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/UnitOfWork.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/Jpa.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/jpa/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/DynamicFinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/Finder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistService.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/Transactional.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/finder/MaxResults.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistFilter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistModule.java'

Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/persist/src/com/google/inject/persist/PersistModule.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/servlet/jakarta.servlet-api/5.0.0/jakarta.servlet-api-5.0.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FilterPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ManagedServletPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/GuiceServletContextListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/DefaultFilterPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FiltersModuleBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/RequestScoped.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/AbstractServletModuleBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ManagedFilterPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletUtils.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/UriPatternType.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ScopingException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ScopingOnly.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/GuiceFilter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletModuleBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/UriPatternMatcher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/RequestScoper.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/RequestParameters.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletsModuleBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/SessionScoped.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FilterChainInvocation.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ContinuingHttpServletRequest.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletModuleTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FilterDefinition.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBinding.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceServletBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add("uriPatternType", getUriPatternType()).add not allowed in side-effect-free method
        .add("servletInstance", getServletInstance())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceServletBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:45: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceServletBinding.class).add("pattern", getPattern()).add not allowed in side-effect-free method
        .add("initParams", getInitParams())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:44: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceServletBinding.class).add not allowed in side-effect-free method
        .add("pattern", getPattern())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:43: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(InstanceServletBinding.class)
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:44: warning: [purity.not.sideeffectfree.call] call to side-effecting getPattern not allowed in side-effect-free method
        .add("pattern", getPattern())
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:45: warning: [purity.not.sideeffectfree.call] call to side-effecting getInitParams not allowed in side-effect-free method
        .add("initParams", getInitParams())
                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting getUriPatternType not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting getServletInstance not allowed in side-effect-free method
        .add("servletInstance", getServletInstance())
                                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceFilterBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add("uriPatternType", getUriPatternType()).add not allowed in side-effect-free method
        .add("filterInstance", getFilterInstance())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceFilterBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:45: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceFilterBinding.class).add("pattern", getPattern()).add not allowed in side-effect-free method
        .add("initParams", getInitParams())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:44: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceFilterBinding.class).add not allowed in side-effect-free method
        .add("pattern", getPattern())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:43: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(InstanceFilterBinding.class)
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:44: warning: [purity.not.sideeffectfree.call] call to side-effecting getPattern not allowed in side-effect-free method
        .add("pattern", getPattern())
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:45: warning: [purity.not.sideeffectfree.call] call to side-effecting getInitParams not allowed in side-effect-free method
        .add("initParams", getInitParams())
                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting getUriPatternType not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting getFilterInstance not allowed in side-effect-free method
        .add("filterInstance", getFilterInstance())
                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:50: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedFilterBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add("uriPatternType", getUriPatternType()).add not allowed in side-effect-free method
        .add("linkedFilterKey", getLinkedKey())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:49: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedFilterBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:48: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedFilterBinding.class).add("pattern", getPattern()).add not allowed in side-effect-free method
        .add("initParams", getInitParams())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedFilterBinding.class).add not allowed in side-effect-free method
        .add("pattern", getPattern())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(LinkedFilterBinding.class)
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting getPattern not allowed in side-effect-free method
        .add("pattern", getPattern())
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:48: warning: [purity.not.sideeffectfree.call] call to side-effecting getInitParams not allowed in side-effect-free method
        .add("initParams", getInitParams())
                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:49: warning: [purity.not.sideeffectfree.call] call to side-effecting getUriPatternType not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:50: warning: [purity.not.sideeffectfree.call] call to side-effecting getLinkedKey not allowed in side-effect-free method
        .add("linkedFilterKey", getLinkedKey())
                                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:68: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.of not allowed in deterministic side-effect-free method
            ImmutableSet.of(
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:69: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Key.get not allowed in deterministic side-effect-free method
                Key.get(HttpServletRequest.class),
                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:70: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Key.get not allowed in deterministic side-effect-free method
                Key.get(HttpServletResponse.class),
                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:71: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting super not allowed in deterministic side-effect-free method
                new Key<Map<String, String[]>>(RequestParameters.class) {});
                                                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:77: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.localContext.get not allowed in deterministic side-effect-free method
          if (null == GuiceFilter.localContext.get()) {
                                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:82: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting requestScopeContext.get not allowed in deterministic side-effect-free method
            Context context = requestScopeContext.get();
                                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:94: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
                if (!Scopes.isCircularProxy(t)) {
                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:96: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting context.map.put not allowed in deterministic side-effect-free method
                  context.map.put(key, t != null ? t : NullObject.INSTANCE);
                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:110: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getOriginalRequest not allowed in deterministic side-effect-free method
          HttpServletRequest request = GuiceFilter.getOriginalRequest(key);
                                                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:118: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting request.getAttribute not allowed in deterministic side-effect-free method
            Object obj = request.getAttribute(name);
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:126: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
              if (!Scopes.isCircularProxy(t)) {
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:127: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting request.setAttribute not allowed in deterministic side-effect-free method
                request.setAttribute(name, (t != null) ? t : NullObject.INSTANCE);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:64: warning: [purity.not.sideeffectfree.call] call to side-effecting Provider<T> not allowed in side-effect-free method
      return new Provider<T>() {
             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:71: warning: [purity.not.sideeffectfree.call] call to side-effecting Key<Map<String, String[]>> not allowed in side-effect-free method
                new Key<Map<String, String[]>>(RequestParameters.class) {});
                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:64: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
      return new Provider<T>() {
             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:71: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
                new Key<Map<String, String[]>>(RequestParameters.class) {});
                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:116: warning: [purity.not.deterministic.call] call to non-deterministic method key.toString not allowed in deterministic method
          String name = key.toString();
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:136: warning: [purity.not.deterministic.call] call to non-deterministic method String.format not allowed in deterministic method
          return String.format("%s[%s]", creator, REQUEST);
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:77: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.localContext.get not allowed in deterministic side-effect-free method
          if (null == GuiceFilter.localContext.get()) {
                                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:82: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting requestScopeContext.get not allowed in deterministic side-effect-free method
            Context context = requestScopeContext.get();
                                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:94: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
                if (!Scopes.isCircularProxy(t)) {
                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:96: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting context.map.put not allowed in deterministic side-effect-free method
                  context.map.put(key, t != null ? t : NullObject.INSTANCE);
                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:110: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getOriginalRequest not allowed in deterministic side-effect-free method
          HttpServletRequest request = GuiceFilter.getOriginalRequest(key);
                                                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:118: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting request.getAttribute not allowed in deterministic side-effect-free method
            Object obj = request.getAttribute(name);
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:126: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
              if (!Scopes.isCircularProxy(t)) {
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:127: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting request.setAttribute not allowed in deterministic side-effect-free method
                request.setAttribute(name, (t != null) ? t : NullObject.INSTANCE);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:116: warning: [purity.not.deterministic.call] call to non-deterministic method key.toString not allowed in deterministic method
          String name = key.toString();
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:157: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getRequest(key).getSession not allowed in deterministic side-effect-free method
          HttpSession session = GuiceFilter.getRequest(key).getSession();
                                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:157: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getRequest not allowed in deterministic side-effect-free method
          HttpSession session = GuiceFilter.getRequest(key).getSession();
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:159: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting session.getAttribute not allowed in deterministic side-effect-free method
            Object obj = session.getAttribute(name);
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:167: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
              if (!Scopes.isCircularProxy(t)) {
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:168: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting session.setAttribute not allowed in deterministic side-effect-free method
                session.setAttribute(name, (t != null) ? t : NullObject.INSTANCE);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:154: warning: [purity.not.sideeffectfree.call] call to side-effecting Provider<T> not allowed in side-effect-free method
      return new Provider<T>() {
             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:153: warning: [purity.not.deterministic.call] call to non-deterministic method key.toString not allowed in deterministic method
      final String name = key.toString();
                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:154: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
      return new Provider<T>() {
             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:177: warning: [purity.not.deterministic.call] call to non-deterministic method String.format not allowed in deterministic method
          return String.format("%s[%s]", creator, SESSION);
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:157: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getRequest(key).getSession not allowed in deterministic side-effect-free method
          HttpSession session = GuiceFilter.getRequest(key).getSession();
                                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:157: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getRequest not allowed in deterministic side-effect-free method
          HttpSession session = GuiceFilter.getRequest(key).getSession();
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:159: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting session.getAttribute not allowed in deterministic side-effect-free method
            Object obj = session.getAttribute(name);
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:167: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
              if (!Scopes.isCircularProxy(t)) {
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:168: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting session.setAttribute not allowed in deterministic side-effect-free method
                session.setAttribute(name, (t != null) ? t : NullObject.INSTANCE);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java:78: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getServletContext not allowed in deterministic side-effect-free method
      return GuiceFilter.getServletContext();
                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java:69: warning: [purity.not.deterministic.call] call to non-deterministic method Logger.getLogger(InternalServletModule.class.getName()).warning not allowed in deterministic method
          .warning(
                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:50: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedServletBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add("uriPatternType", getUriPatternType()).add not allowed in side-effect-free method
        .add("linkedServletKey", getLinkedKey())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:49: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedServletBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:48: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedServletBinding.class).add("pattern", getPattern()).add not allowed in side-effect-free method
        .add("initParams", getInitParams())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedServletBinding.class).add not allowed in side-effect-free method
        .add("pattern", getPattern())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(LinkedServletBinding.class)
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting getPattern not allowed in side-effect-free method
        .add("pattern", getPattern())
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:48: warning: [purity.not.sideeffectfree.call] call to side-effecting getInitParams not allowed in side-effect-free method
        .add("initParams", getInitParams())
                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:49: warning: [purity.not.sideeffectfree.call] call to side-effecting getUriPatternType not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:50: warning: [purity.not.sideeffectfree.call] call to side-effecting getLinkedKey not allowed in side-effect-free method
        .add("linkedServletKey", getLinkedKey())
                                             ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
79 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025039-7xrserqp/iteration0' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/servlet/jakarta.servlet-api/5.0.0/jakarta.servlet-api-5.0.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FilterPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ManagedServletPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/GuiceServletContextListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/DefaultFilterPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FiltersModuleBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/RequestScoped.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/AbstractServletModuleBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ManagedFilterPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletUtils.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/UriPatternType.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ScopingException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ScopingOnly.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/GuiceFilter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletModuleBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/UriPatternMatcher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/RequestScoper.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/RequestParameters.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletsModuleBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/SessionScoped.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FilterChainInvocation.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ContinuingHttpServletRequest.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletModuleTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FilterDefinition.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBinding.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceServletBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add("uriPatternType", getUriPatternType()).add not allowed in side-effect-free method
        .add("servletInstance", getServletInstance())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceServletBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:45: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceServletBinding.class).add("pattern", getPattern()).add not allowed in side-effect-free method
        .add("initParams", getInitParams())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:44: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceServletBinding.class).add not allowed in side-effect-free method
        .add("pattern", getPattern())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:43: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(InstanceServletBinding.class)
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:44: warning: [purity.not.sideeffectfree.call] call to side-effecting getPattern not allowed in side-effect-free method
        .add("pattern", getPattern())
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting getUriPatternType not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting getServletInstance not allowed in side-effect-free method
        .add("servletInstance", getServletInstance())
                                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceFilterBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add("uriPatternType", getUriPatternType()).add not allowed in side-effect-free method
        .add("filterInstance", getFilterInstance())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceFilterBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:45: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceFilterBinding.class).add("pattern", getPattern()).add not allowed in side-effect-free method
        .add("initParams", getInitParams())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:44: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceFilterBinding.class).add not allowed in side-effect-free method
        .add("pattern", getPattern())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:43: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(InstanceFilterBinding.class)
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:44: warning: [purity.not.sideeffectfree.call] call to side-effecting getPattern not allowed in side-effect-free method
        .add("pattern", getPattern())
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting getUriPatternType not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting getFilterInstance not allowed in side-effect-free method
        .add("filterInstance", getFilterInstance())
                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:50: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedFilterBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add("uriPatternType", getUriPatternType()).add not allowed in side-effect-free method
        .add("linkedFilterKey", getLinkedKey())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:49: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedFilterBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:48: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedFilterBinding.class).add("pattern", getPattern()).add not allowed in side-effect-free method
        .add("initParams", getInitParams())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedFilterBinding.class).add not allowed in side-effect-free method
        .add("pattern", getPattern())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(LinkedFilterBinding.class)
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting getPattern not allowed in side-effect-free method
        .add("pattern", getPattern())
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:49: warning: [purity.not.sideeffectfree.call] call to side-effecting getUriPatternType not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:50: warning: [purity.not.sideeffectfree.call] call to side-effecting getLinkedKey not allowed in side-effect-free method
        .add("linkedFilterKey", getLinkedKey())
                                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:68: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.of not allowed in deterministic side-effect-free method
            ImmutableSet.of(
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:69: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Key.get not allowed in deterministic side-effect-free method
                Key.get(HttpServletRequest.class),
                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:70: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Key.get not allowed in deterministic side-effect-free method
                Key.get(HttpServletResponse.class),
                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:71: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting super not allowed in deterministic side-effect-free method
                new Key<Map<String, String[]>>(RequestParameters.class) {});
                                                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:77: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.localContext.get not allowed in deterministic side-effect-free method
          if (null == GuiceFilter.localContext.get()) {
                                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:82: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting requestScopeContext.get not allowed in deterministic side-effect-free method
            Context context = requestScopeContext.get();
                                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:94: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
                if (!Scopes.isCircularProxy(t)) {
                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:96: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting context.map.put not allowed in deterministic side-effect-free method
                  context.map.put(key, t != null ? t : NullObject.INSTANCE);
                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:110: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getOriginalRequest not allowed in deterministic side-effect-free method
          HttpServletRequest request = GuiceFilter.getOriginalRequest(key);
                                                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:118: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting request.getAttribute not allowed in deterministic side-effect-free method
            Object obj = request.getAttribute(name);
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:126: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
              if (!Scopes.isCircularProxy(t)) {
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:127: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting request.setAttribute not allowed in deterministic side-effect-free method
                request.setAttribute(name, (t != null) ? t : NullObject.INSTANCE);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:64: warning: [purity.not.sideeffectfree.call] call to side-effecting Provider<T> not allowed in side-effect-free method
      return new Provider<T>() {
             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:71: warning: [purity.not.sideeffectfree.call] call to side-effecting Key<Map<String, String[]>> not allowed in side-effect-free method
                new Key<Map<String, String[]>>(RequestParameters.class) {});
                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:64: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
      return new Provider<T>() {
             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:71: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
                new Key<Map<String, String[]>>(RequestParameters.class) {});
                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:116: warning: [purity.not.deterministic.call] call to non-deterministic method key.toString not allowed in deterministic method
          String name = key.toString();
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:136: warning: [purity.not.deterministic.call] call to non-deterministic method String.format not allowed in deterministic method
          return String.format("%s[%s]", creator, REQUEST);
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:77: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.localContext.get not allowed in deterministic side-effect-free method
          if (null == GuiceFilter.localContext.get()) {
                                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:82: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting requestScopeContext.get not allowed in deterministic side-effect-free method
            Context context = requestScopeContext.get();
                                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:94: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
                if (!Scopes.isCircularProxy(t)) {
                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:96: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting context.map.put not allowed in deterministic side-effect-free method
                  context.map.put(key, t != null ? t : NullObject.INSTANCE);
                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:110: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getOriginalRequest not allowed in deterministic side-effect-free method
          HttpServletRequest request = GuiceFilter.getOriginalRequest(key);
                                                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:118: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting request.getAttribute not allowed in deterministic side-effect-free method
            Object obj = request.getAttribute(name);
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:126: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
              if (!Scopes.isCircularProxy(t)) {
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:127: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting request.setAttribute not allowed in deterministic side-effect-free method
                request.setAttribute(name, (t != null) ? t : NullObject.INSTANCE);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:116: warning: [purity.not.deterministic.call] call to non-deterministic method key.toString not allowed in deterministic method
          String name = key.toString();
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:157: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getRequest(key).getSession not allowed in deterministic side-effect-free method
          HttpSession session = GuiceFilter.getRequest(key).getSession();
                                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:157: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getRequest not allowed in deterministic side-effect-free method
          HttpSession session = GuiceFilter.getRequest(key).getSession();
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:159: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting session.getAttribute not allowed in deterministic side-effect-free method
            Object obj = session.getAttribute(name);
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:167: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
              if (!Scopes.isCircularProxy(t)) {
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:168: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting session.setAttribute not allowed in deterministic side-effect-free method
                session.setAttribute(name, (t != null) ? t : NullObject.INSTANCE);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:154: warning: [purity.not.sideeffectfree.call] call to side-effecting Provider<T> not allowed in side-effect-free method
      return new Provider<T>() {
             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:153: warning: [purity.not.deterministic.call] call to non-deterministic method key.toString not allowed in deterministic method
      final String name = key.toString();
                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:154: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
      return new Provider<T>() {
             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:177: warning: [purity.not.deterministic.call] call to non-deterministic method String.format not allowed in deterministic method
          return String.format("%s[%s]", creator, SESSION);
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:157: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getRequest(key).getSession not allowed in deterministic side-effect-free method
          HttpSession session = GuiceFilter.getRequest(key).getSession();
                                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:157: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getRequest not allowed in deterministic side-effect-free method
          HttpSession session = GuiceFilter.getRequest(key).getSession();
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:159: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting session.getAttribute not allowed in deterministic side-effect-free method
            Object obj = session.getAttribute(name);
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:167: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
              if (!Scopes.isCircularProxy(t)) {
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:168: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting session.setAttribute not allowed in deterministic side-effect-free method
                session.setAttribute(name, (t != null) ? t : NullObject.INSTANCE);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java:69: warning: [purity.not.deterministic.call] call to non-deterministic method Logger.getLogger(InternalServletModule.class.getName()).warning not allowed in deterministic method
          .warning(
                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method GuiceFilter.getServletContext not allowed in deterministic method
      return GuiceFilter.getServletContext();
                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:50: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedServletBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add("uriPatternType", getUriPatternType()).add not allowed in side-effect-free method
        .add("linkedServletKey", getLinkedKey())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:49: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedServletBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:48: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedServletBinding.class).add("pattern", getPattern()).add not allowed in side-effect-free method
        .add("initParams", getInitParams())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedServletBinding.class).add not allowed in side-effect-free method
        .add("pattern", getPattern())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(LinkedServletBinding.class)
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting getPattern not allowed in side-effect-free method
        .add("pattern", getPattern())
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:49: warning: [purity.not.sideeffectfree.call] call to side-effecting getUriPatternType not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
                                                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:50: warning: [purity.not.sideeffectfree.call] call to side-effecting getLinkedKey not allowed in side-effect-free method
        .add("linkedServletKey", getLinkedKey())
                                             ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
75 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025039-7xrserqp/iteration1' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/servlet/jakarta.servlet-api/5.0.0/jakarta.servlet-api-5.0.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FilterPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ManagedServletPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/GuiceServletContextListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/DefaultFilterPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FiltersModuleBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/RequestScoped.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/AbstractServletModuleBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ManagedFilterPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletUtils.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/UriPatternType.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ScopingException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ScopingOnly.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/GuiceFilter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletModuleBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/UriPatternMatcher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/RequestScoper.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/RequestParameters.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletsModuleBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/SessionScoped.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FilterChainInvocation.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ContinuingHttpServletRequest.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletModuleTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FilterDefinition.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBinding.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceServletBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add("uriPatternType", getUriPatternType()).add not allowed in side-effect-free method
        .add("servletInstance", getServletInstance())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceServletBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:45: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceServletBinding.class).add("pattern", getPattern()).add not allowed in side-effect-free method
        .add("initParams", getInitParams())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:44: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceServletBinding.class).add not allowed in side-effect-free method
        .add("pattern", getPattern())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java:43: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(InstanceServletBinding.class)
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceFilterBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add("uriPatternType", getUriPatternType()).add not allowed in side-effect-free method
        .add("filterInstance", getFilterInstance())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceFilterBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:45: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceFilterBinding.class).add("pattern", getPattern()).add not allowed in side-effect-free method
        .add("initParams", getInitParams())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:44: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(InstanceFilterBinding.class).add not allowed in side-effect-free method
        .add("pattern", getPattern())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java:43: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(InstanceFilterBinding.class)
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:50: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedFilterBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add("uriPatternType", getUriPatternType()).add not allowed in side-effect-free method
        .add("linkedFilterKey", getLinkedKey())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:49: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedFilterBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:48: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedFilterBinding.class).add("pattern", getPattern()).add not allowed in side-effect-free method
        .add("initParams", getInitParams())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedFilterBinding.class).add not allowed in side-effect-free method
        .add("pattern", getPattern())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(LinkedFilterBinding.class)
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:68: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.of not allowed in deterministic side-effect-free method
            ImmutableSet.of(
                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:69: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Key.get not allowed in deterministic side-effect-free method
                Key.get(HttpServletRequest.class),
                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:70: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Key.get not allowed in deterministic side-effect-free method
                Key.get(HttpServletResponse.class),
                       ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:71: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting super not allowed in deterministic side-effect-free method
                new Key<Map<String, String[]>>(RequestParameters.class) {});
                                                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:77: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.localContext.get not allowed in deterministic side-effect-free method
          if (null == GuiceFilter.localContext.get()) {
                                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:82: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting requestScopeContext.get not allowed in deterministic side-effect-free method
            Context context = requestScopeContext.get();
                                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:94: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
                if (!Scopes.isCircularProxy(t)) {
                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:96: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting context.map.put not allowed in deterministic side-effect-free method
                  context.map.put(key, t != null ? t : NullObject.INSTANCE);
                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:110: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getOriginalRequest not allowed in deterministic side-effect-free method
          HttpServletRequest request = GuiceFilter.getOriginalRequest(key);
                                                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:118: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting request.getAttribute not allowed in deterministic side-effect-free method
            Object obj = request.getAttribute(name);
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:126: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
              if (!Scopes.isCircularProxy(t)) {
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:127: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting request.setAttribute not allowed in deterministic side-effect-free method
                request.setAttribute(name, (t != null) ? t : NullObject.INSTANCE);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:64: warning: [purity.not.sideeffectfree.call] call to side-effecting Provider<T> not allowed in side-effect-free method
      return new Provider<T>() {
             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:71: warning: [purity.not.sideeffectfree.call] call to side-effecting Key<Map<String, String[]>> not allowed in side-effect-free method
                new Key<Map<String, String[]>>(RequestParameters.class) {});
                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:64: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
      return new Provider<T>() {
             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:71: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
                new Key<Map<String, String[]>>(RequestParameters.class) {});
                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:116: warning: [purity.not.deterministic.call] call to non-deterministic method key.toString not allowed in deterministic method
          String name = key.toString();
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:136: warning: [purity.not.deterministic.call] call to non-deterministic method String.format not allowed in deterministic method
          return String.format("%s[%s]", creator, REQUEST);
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:77: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.localContext.get not allowed in deterministic side-effect-free method
          if (null == GuiceFilter.localContext.get()) {
                                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:82: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting requestScopeContext.get not allowed in deterministic side-effect-free method
            Context context = requestScopeContext.get();
                                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:94: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
                if (!Scopes.isCircularProxy(t)) {
                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:96: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting context.map.put not allowed in deterministic side-effect-free method
                  context.map.put(key, t != null ? t : NullObject.INSTANCE);
                                 ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:110: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getOriginalRequest not allowed in deterministic side-effect-free method
          HttpServletRequest request = GuiceFilter.getOriginalRequest(key);
                                                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:118: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting request.getAttribute not allowed in deterministic side-effect-free method
            Object obj = request.getAttribute(name);
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:126: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
              if (!Scopes.isCircularProxy(t)) {
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:127: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting request.setAttribute not allowed in deterministic side-effect-free method
                request.setAttribute(name, (t != null) ? t : NullObject.INSTANCE);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:116: warning: [purity.not.deterministic.call] call to non-deterministic method key.toString not allowed in deterministic method
          String name = key.toString();
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:157: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getRequest(key).getSession not allowed in deterministic side-effect-free method
          HttpSession session = GuiceFilter.getRequest(key).getSession();
                                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:157: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getRequest not allowed in deterministic side-effect-free method
          HttpSession session = GuiceFilter.getRequest(key).getSession();
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:159: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting session.getAttribute not allowed in deterministic side-effect-free method
            Object obj = session.getAttribute(name);
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:167: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
              if (!Scopes.isCircularProxy(t)) {
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:168: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting session.setAttribute not allowed in deterministic side-effect-free method
                session.setAttribute(name, (t != null) ? t : NullObject.INSTANCE);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:154: warning: [purity.not.sideeffectfree.call] call to side-effecting Provider<T> not allowed in side-effect-free method
      return new Provider<T>() {
             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:153: warning: [purity.not.deterministic.call] call to non-deterministic method key.toString not allowed in deterministic method
      final String name = key.toString();
                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:154: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
      return new Provider<T>() {
             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:177: warning: [purity.not.deterministic.call] call to non-deterministic method String.format not allowed in deterministic method
          return String.format("%s[%s]", creator, SESSION);
                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:157: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getRequest(key).getSession not allowed in deterministic side-effect-free method
          HttpSession session = GuiceFilter.getRequest(key).getSession();
                                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:157: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting GuiceFilter.getRequest not allowed in deterministic side-effect-free method
          HttpSession session = GuiceFilter.getRequest(key).getSession();
                                                      ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:159: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting session.getAttribute not allowed in deterministic side-effect-free method
            Object obj = session.getAttribute(name);
                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:167: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Scopes.isCircularProxy not allowed in deterministic side-effect-free method
              if (!Scopes.isCircularProxy(t)) {
                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java:168: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting session.setAttribute not allowed in deterministic side-effect-free method
                session.setAttribute(name, (t != null) ? t : NullObject.INSTANCE);
                                    ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java:69: warning: [purity.not.deterministic.call] call to non-deterministic method Logger.getLogger(InternalServletModule.class.getName()).warning not allowed in deterministic method
          .warning(
                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method GuiceFilter.getServletContext not allowed in deterministic method
      return GuiceFilter.getServletContext();
                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:50: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedServletBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add("uriPatternType", getUriPatternType()).add not allowed in side-effect-free method
        .add("linkedServletKey", getLinkedKey())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:49: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedServletBinding.class).add("pattern", getPattern()).add("initParams", getInitParams()).add not allowed in side-effect-free method
        .add("uriPatternType", getUriPatternType())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:48: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedServletBinding.class).add("pattern", getPattern()).add not allowed in side-effect-free method
        .add("initParams", getInitParams())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:47: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper(LinkedServletBinding.class).add not allowed in side-effect-free method
        .add("pattern", getPattern())
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java:46: warning: [purity.not.sideeffectfree.call] call to side-effecting MoreObjects.toStringHelper not allowed in side-effect-free method
    return MoreObjects.toStringHelper(LinkedServletBinding.class)
                                     ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
63 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025039-7xrserqp/iteration1' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/servlet/jakarta.servlet-api/5.0.0/jakarta.servlet-api-5.0.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FilterPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ManagedServletPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/GuiceServletContextListener.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/DefaultFilterPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FiltersModuleBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/RequestScoped.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/AbstractServletModuleBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ManagedFilterPipeline.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletUtils.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/UriPatternType.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ScopingException.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ScopingOnly.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/GuiceFilter.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceServletBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletModuleBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/UriPatternMatcher.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/RequestScoper.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/RequestParameters.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletsModuleBuilder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/SessionScoped.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FilterChainInvocation.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBinding.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ContinuingHttpServletRequest.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/ServletModuleTargetVisitor.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/FilterDefinition.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/servlet/src/com/google/inject/servlet/LinkedFilterBinding.java'

Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/target/classes:/homes/gws/jmsy/.m2/repository/org/springframework/spring-beans/5.3.18/spring-beans-5.3.18.jar:/homes/gws/jmsy/.m2/repository/org/springframework/spring-core/5.3.18/spring-core-5.3.18.jar:/homes/gws/jmsy/.m2/repository/org/springframework/spring-jcl/5.3.18/spring-jcl-5.3.18.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/src/com/google/inject/spring/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/src/com/google/inject/spring/SpringIntegration.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/src/com/google/inject/spring/SpringIntegration.java:105: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getSingleton not allowed in deterministic side-effect-free method
      return singleton ? getSingleton() : type.cast(beanFactory.getBean(name));
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/src/com/google/inject/spring/SpringIntegration.java:105: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting type.cast not allowed in deterministic side-effect-free method
      return singleton ? getSingleton() : type.cast(beanFactory.getBean(name));
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/src/com/google/inject/spring/SpringIntegration.java:105: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting beanFactory.getBean not allowed in deterministic side-effect-free method
      return singleton ? getSingleton() : type.cast(beanFactory.getBean(name));
                                                                       ^
3 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025125-zxu6aih2/iteration0' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/target/classes:/homes/gws/jmsy/.m2/repository/org/springframework/spring-beans/5.3.18/spring-beans-5.3.18.jar:/homes/gws/jmsy/.m2/repository/org/springframework/spring-core/5.3.18/spring-core-5.3.18.jar:/homes/gws/jmsy/.m2/repository/org/springframework/spring-jcl/5.3.18/spring-jcl-5.3.18.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/src/com/google/inject/spring/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/src/com/google/inject/spring/SpringIntegration.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/src/com/google/inject/spring/SpringIntegration.java:105: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getSingleton not allowed in deterministic side-effect-free method
      return singleton ? getSingleton() : type.cast(beanFactory.getBean(name));
                                     ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/src/com/google/inject/spring/SpringIntegration.java:105: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting type.cast not allowed in deterministic side-effect-free method
      return singleton ? getSingleton() : type.cast(beanFactory.getBean(name));
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/src/com/google/inject/spring/SpringIntegration.java:105: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting beanFactory.getBean not allowed in deterministic side-effect-free method
      return singleton ? getSingleton() : type.cast(beanFactory.getBean(name));
                                                                       ^
3 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025125-zxu6aih2/iteration0' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/target/classes:/homes/gws/jmsy/.m2/repository/org/springframework/spring-beans/5.3.18/spring-beans-5.3.18.jar:/homes/gws/jmsy/.m2/repository/org/springframework/spring-core/5.3.18/spring-core-5.3.18.jar:/homes/gws/jmsy/.m2/repository/org/springframework/spring-jcl/5.3.18/spring-jcl-5.3.18.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/src/com/google/inject/spring/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/spring/src/com/google/inject/spring/SpringIntegration.java'

Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvides.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvideUtils.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ProviderChecker.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderWithDependencies.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingInject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviders.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:257: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.of not allowed in deterministic side-effect-free method
              return ImmutableSet.<Dependency<?>>of(Dependency.get(typeKey));
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:257: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
              return ImmutableSet.<Dependency<?>>of(Dependency.get(typeKey));
                                                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:335: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.of not allowed in deterministic side-effect-free method
                    return ImmutableSet.<Dependency<?>>of(Dependency.get(resultKey));
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:335: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
                    return ImmutableSet.<Dependency<?>>of(Dependency.get(resultKey));
                                                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:352: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Result.forValue not allowed in deterministic side-effect-free method
            return Result.forValue(targetProvider.get().get());
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:352: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting targetProvider.get().get not allowed in deterministic side-effect-free method
            return Result.forValue(targetProvider.get().get());
                                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:357: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Result.forException not allowed in deterministic side-effect-free method
                  return Result.forException(e);
                                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:359: warning: [purity.not.sideeffectfree.call] call to side-effecting ResultException not allowed in side-effect-free method
                  throw new ResultException(e);
                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:353: warning: [purity.not.deterministic.catch] catch block not allowed in deterministic method
          } catch (Exception e) {
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:375: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.of not allowed in deterministic side-effect-free method
          return ImmutableSet.<Dependency<?>>of(Dependency.get(targetKey));
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:375: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
          return ImmutableSet.<Dependency<?>>of(Dependency.get(targetKey));
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethod.java:139: warning: [purity.not.sideeffectfree.call] call to side-effecting StackTraceElements.forMember not allowed in side-effect-free method
    return "@CheckedProvides " + StackTraceElements.forMember(method);
                                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java:69: warning: [purity.not.sideeffectfree.call] call to side-effecting getProviderMethods not allowed in side-effect-free method
    for (CheckedProviderMethod<?> throwingProviderMethod : getProviderMethods(binder)) {
                                                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java:70: warning: [purity.not.sideeffectfree.call] call to side-effecting throwingProviderMethod.configure not allowed in side-effect-free method
      throwingProviderMethod.configure(binder);
                                      ^
Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ProviderChecker.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviders.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
14 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025141-p8t756t4/iteration0' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvides.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvideUtils.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ProviderChecker.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderWithDependencies.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingInject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviders.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:239: warning: [purity.not.deterministic.catch] catch block not allowed in deterministic method
              } catch (ProvisionException pe) {
                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:257: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.of not allowed in deterministic side-effect-free method
              return ImmutableSet.<Dependency<?>>of(Dependency.get(typeKey));
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:257: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
              return ImmutableSet.<Dependency<?>>of(Dependency.get(typeKey));
                                                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:335: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.of not allowed in deterministic side-effect-free method
                    return ImmutableSet.<Dependency<?>>of(Dependency.get(resultKey));
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:335: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
                    return ImmutableSet.<Dependency<?>>of(Dependency.get(resultKey));
                                                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:352: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Result.forValue not allowed in deterministic side-effect-free method
            return Result.forValue(targetProvider.get().get());
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:352: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting targetProvider.get().get not allowed in deterministic side-effect-free method
            return Result.forValue(targetProvider.get().get());
                                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:357: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Result.forException not allowed in deterministic side-effect-free method
                  return Result.forException(e);
                                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:353: warning: [purity.not.deterministic.catch] catch block not allowed in deterministic method
          } catch (Exception e) {
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:375: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.of not allowed in deterministic side-effect-free method
          return ImmutableSet.<Dependency<?>>of(Dependency.get(targetKey));
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:375: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
          return ImmutableSet.<Dependency<?>>of(Dependency.get(targetKey));
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethod.java:139: warning: [purity.not.sideeffectfree.call] call to side-effecting StackTraceElements.forMember not allowed in side-effect-free method
    return "@CheckedProvides " + StackTraceElements.forMember(method);
                                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java:69: warning: [purity.not.sideeffectfree.call] call to side-effecting getProviderMethods not allowed in side-effect-free method
    for (CheckedProviderMethod<?> throwingProviderMethod : getProviderMethods(binder)) {
                                                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java:70: warning: [purity.not.sideeffectfree.call] call to side-effecting throwingProviderMethod.configure not allowed in side-effect-free method
      throwingProviderMethod.configure(binder);
                                      ^
Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ProviderChecker.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviders.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
14 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025141-p8t756t4/iteration1' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvides.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvideUtils.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ProviderChecker.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderWithDependencies.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingInject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviders.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:239: warning: [purity.not.deterministic.catch] catch block not allowed in deterministic method
              } catch (ProvisionException pe) {
                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:257: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.of not allowed in deterministic side-effect-free method
              return ImmutableSet.<Dependency<?>>of(Dependency.get(typeKey));
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:257: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
              return ImmutableSet.<Dependency<?>>of(Dependency.get(typeKey));
                                                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:335: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.of not allowed in deterministic side-effect-free method
                    return ImmutableSet.<Dependency<?>>of(Dependency.get(resultKey));
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:335: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
                    return ImmutableSet.<Dependency<?>>of(Dependency.get(resultKey));
                                                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:352: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting targetProvider.get().get not allowed in deterministic side-effect-free method
            return Result.forValue(targetProvider.get().get());
                                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:352: warning: [purity.not.deterministic.call] call to non-deterministic method Result.forValue not allowed in deterministic method
            return Result.forValue(targetProvider.get().get());
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:353: warning: [purity.not.deterministic.catch] catch block not allowed in deterministic method
          } catch (Exception e) {
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:357: warning: [purity.not.deterministic.call] call to non-deterministic method Result.forException not allowed in deterministic method
                  return Result.forException(e);
                                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:375: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.of not allowed in deterministic side-effect-free method
          return ImmutableSet.<Dependency<?>>of(Dependency.get(targetKey));
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:375: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
          return ImmutableSet.<Dependency<?>>of(Dependency.get(targetKey));
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethod.java:139: warning: [purity.not.sideeffectfree.call] call to side-effecting StackTraceElements.forMember not allowed in side-effect-free method
    return "@CheckedProvides " + StackTraceElements.forMember(method);
                                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java:69: warning: [purity.not.sideeffectfree.call] call to side-effecting getProviderMethods not allowed in side-effect-free method
    for (CheckedProviderMethod<?> throwingProviderMethod : getProviderMethods(binder)) {
                                                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java:70: warning: [purity.not.sideeffectfree.call] call to side-effecting throwingProviderMethod.configure not allowed in side-effect-free method
      throwingProviderMethod.configure(binder);
                                      ^
Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ProviderChecker.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviders.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
14 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025141-p8t756t4/iteration2' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvides.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvideUtils.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ProviderChecker.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderWithDependencies.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingInject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviders.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:239: warning: [purity.not.deterministic.catch] catch block not allowed in deterministic method
              } catch (ProvisionException pe) {
                ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:257: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.of not allowed in deterministic side-effect-free method
              return ImmutableSet.<Dependency<?>>of(Dependency.get(typeKey));
                                                   ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:257: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
              return ImmutableSet.<Dependency<?>>of(Dependency.get(typeKey));
                                                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:335: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.of not allowed in deterministic side-effect-free method
                    return ImmutableSet.<Dependency<?>>of(Dependency.get(resultKey));
                                                         ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:335: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
                    return ImmutableSet.<Dependency<?>>of(Dependency.get(resultKey));
                                                                        ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:352: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting targetProvider.get().get not allowed in deterministic side-effect-free method
            return Result.forValue(targetProvider.get().get());
                                                           ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:352: warning: [purity.not.deterministic.call] call to non-deterministic method Result.forValue not allowed in deterministic method
            return Result.forValue(targetProvider.get().get());
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:353: warning: [purity.not.deterministic.catch] catch block not allowed in deterministic method
          } catch (Exception e) {
            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:357: warning: [purity.not.deterministic.call] call to non-deterministic method Result.forException not allowed in deterministic method
                  return Result.forException(e);
                                            ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:375: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ImmutableSet.of not allowed in deterministic side-effect-free method
          return ImmutableSet.<Dependency<?>>of(Dependency.get(targetKey));
                                               ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java:375: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Dependency.get not allowed in deterministic side-effect-free method
          return ImmutableSet.<Dependency<?>>of(Dependency.get(targetKey));
                                                              ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethod.java:139: warning: [purity.not.sideeffectfree.call] call to side-effecting StackTraceElements.forMember not allowed in side-effect-free method
    return "@CheckedProvides " + StackTraceElements.forMember(method);
                                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java:69: warning: [purity.not.sideeffectfree.call] call to side-effecting getProviderMethods not allowed in side-effect-free method
    for (CheckedProviderMethod<?> throwingProviderMethod : getProviderMethods(binder)) {
                                                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java:70: warning: [purity.not.sideeffectfree.call] call to side-effecting throwingProviderMethod.configure not allowed in side-effect-free method
      throwingProviderMethod.configure(binder);
                                      ^
Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ProviderChecker.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviders.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
14 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025141-p8t756t4/iteration2' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvides.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvideUtils.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethod.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ProviderChecker.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/package-info.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvider.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderWithDependencies.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingInject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviders.java'

Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/ProviderChecker.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: /scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviders.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/classes:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.8.1/auto-value-annotations-1.8.1.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/throwingproviders/CheckedProviderSubject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/Bind.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:482: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getFieldValue not allowed in deterministic side-effect-free method
                Object val = getFieldValue(fieldInfo);
                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:483: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((jakarta.inject.Provider<?>)val).get not allowed in deterministic side-effect-free method
                return ((jakarta.inject.Provider<?>) val).get();
                                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:496: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getFieldValue not allowed in deterministic side-effect-free method
              return getFieldValue(fieldInfo);
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:543: warning: [purity.not.sideeffectfree.call] call to side-effecting bindField not allowed in side-effect-free method
        bindField(binder, fieldInfo);
                 ^
4 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025229-z09f5p8b/iteration0' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/classes:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.8.1/auto-value-annotations-1.8.1.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/throwingproviders/CheckedProviderSubject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/Bind.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:482: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getFieldValue not allowed in deterministic side-effect-free method
                Object val = getFieldValue(fieldInfo);
                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:483: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((jakarta.inject.Provider<?>)val).get not allowed in deterministic side-effect-free method
                return ((jakarta.inject.Provider<?>) val).get();
                                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:496: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getFieldValue not allowed in deterministic side-effect-free method
              return getFieldValue(fieldInfo);
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:543: warning: [purity.not.sideeffectfree.call] call to side-effecting bindField not allowed in side-effect-free method
        bindField(binder, fieldInfo);
                 ^
4 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025229-z09f5p8b/iteration1' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/classes:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.8.1/auto-value-annotations-1.8.1.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/throwingproviders/CheckedProviderSubject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/Bind.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:482: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getFieldValue not allowed in deterministic side-effect-free method
                Object val = getFieldValue(fieldInfo);
                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:483: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((jakarta.inject.Provider<?>)val).get not allowed in deterministic side-effect-free method
                return ((jakarta.inject.Provider<?>) val).get();
                                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:496: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getFieldValue not allowed in deterministic side-effect-free method
              return getFieldValue(fieldInfo);
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:543: warning: [purity.not.sideeffectfree.call] call to side-effecting bindField not allowed in side-effect-free method
        bindField(binder, fieldInfo);
                 ^
4 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025229-z09f5p8b/iteration2' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/classes:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.8.1/auto-value-annotations-1.8.1.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/throwingproviders/CheckedProviderSubject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/Bind.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:482: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getFieldValue not allowed in deterministic side-effect-free method
                Object val = getFieldValue(fieldInfo);
                                          ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:483: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((jakarta.inject.Provider<?>)val).get not allowed in deterministic side-effect-free method
                return ((jakarta.inject.Provider<?>) val).get();
                                                             ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:496: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getFieldValue not allowed in deterministic side-effect-free method
              return getFieldValue(fieldInfo);
                                  ^
/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java:543: warning: [purity.not.sideeffectfree.call] call to side-effecting bindField not allowed in side-effect-free method
        bindField(binder, fieldInfo);
                 ^
4 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-025229-z09f5p8b/iteration2' '-classpath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/classes:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/throwingproviders/target/classes:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/homes/gws/jmsy/.m2/repository/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.13.0/checker-qual-3.13.0.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.8.1/auto-value-annotations-1.8.1.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/core/target/classes:/homes/gws/jmsy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/classes' '-sourcepath' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src:/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/target/generated-sources/annotations' '-g' '--release' '11' '-encoding' 'UTF-8' '-parameters' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/throwingproviders/CheckedProviderSubject.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/Bind.java' '/scratch/jmsy/outdir/guice-db5bcc20f94055fb5bc08cbb9b0e7a5530308786/guice/extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java'

