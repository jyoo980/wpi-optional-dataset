Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/gwt-sources:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/J2ktIncompatible.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/LongSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MapSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StackTraceCleaner.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/BooleanSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparisonFailureWithFacts.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Correspondence.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/LazyMessage.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GraphMatching.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GuavaOptionalSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/FailureMetadata.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultisetSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AbstractArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparisonFailures.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ClassSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveByteArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveBooleanArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ExpectFailure.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveIntArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Truth.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Ordered.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/FailureStrategy.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveCharArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StringSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ErrorWithFacts.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Fact.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ObjectArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/DiffUtils.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StandardSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/DoubleSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveShortArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/UsedByReflection.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/package-info.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Subject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ThrowableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AssertionErrorWithFacts.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthJUnit.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveLongArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SimpleSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveDoubleArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/BigDecimalSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IntegerSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/CustomSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Platform.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ActualValueInference.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/FloatSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MathUtil.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveFloatArraySubject.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Platform.java:201: warning: [purity.not.sideeffectfree.call] call to side-effecting checkNotNull not allowed in side-effect-free method
      return checkNotNull(getLocalizedMessage());
                         ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:181: warning: [purity.not.sideeffectfree.call] call to side-effecting toStringWithBrackets not allowed in side-effect-free method
      String withBrackets = toStringWithBrackets();
                                                ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:232: warning: [purity.not.sideeffectfree.call] call to side-effecting homogeneousTypeToDisplay.isPresent not allowed in side-effect-free method
      return homogeneousTypeToDisplay.isPresent()
                                               ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:233: warning: [purity.not.sideeffectfree.call] call to side-effecting homogeneousTypeToDisplay.get not allowed in side-effect-free method
          ? valuesAndMaybeTypes + " (" + homogeneousTypeToDisplay.get() + ")"
                                                                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/LazyMessage.java:43: warning: [purity.not.sideeffectfree.call] call to side-effecting lenientFormat not allowed in side-effect-free method
    return lenientFormat(format, args);
                        ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java:1214: warning: [argument] incompatible argument for parameter expected of UsingCorrespondence.containsExactlyElementsIn.
          (expected == null) ? newArrayList((E) null) : asList(expected));
                             ^
  found   : @MaybePresent Iterable<capture#01[ extends E[ extends @MaybePresent Object super @MaybePresent Void] super @OptionalBottom Void]>
  required: @MaybePresent Iterable<?[ extends E[ extends @MaybePresent Object super @OptionalBottom Void] super @OptionalBottom Void]>
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java:1214: warning: [conditional] incompatible types in conditional expression.
          (expected == null) ? newArrayList((E) null) : asList(expected));
                                           ^
  found   : @MaybePresent ArrayList<E[ extends @MaybePresent Object super @OptionalBottom Void]>
  required: @MaybePresent Iterable<capture#01[ extends E[ extends @MaybePresent Object super @MaybePresent Void] super @OptionalBottom Void]>
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java:1214: warning: [conditional] incompatible types in conditional expression.
          (expected == null) ? newArrayList((E) null) : asList(expected));
                                                              ^
  found   : @MaybePresent List<E[ extends @MaybePresent Object super @OptionalBottom Void]>
  required: @MaybePresent Iterable<capture#01[ extends E[ extends @MaybePresent Object super @MaybePresent Void] super @OptionalBottom Void]>
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent float @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveFloatArraySubject.java
  Last visited tree at line 235 column 7:
        containsNoneIn(Floats.asList(excluded));
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveDoubleArraySubject.java
  Last visited tree at line 230 column 7:
        containsNoneIn(Doubles.asList(excluded));
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GuavaOptionalSubject.java
  Last visited tree at line 79 column 7:
        checkNoNeedToDisplayBothValues("get()").that(actual.get()).isEqualTo(expected);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MapSubject.java
  Last visited tree at line 288 column 33:
      boolean test(A actualValue, E expectedValue);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java
  Last visited tree at line 347 column 20:
          return new IterableEntries(metadata, MultimapSubject.this, checkNotNull(actual));
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitReturn(TreeScanner.java:469)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:2189)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCReturn.accept(JCTree.java:1570)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitBlock(TreeScanner.java:248)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBlock.accept(JCTree.java:1048)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitMethod(TreeScanner.java:206)
  	at org.checkerframework.framework.source.SourceVisitor.visitMethod(SourceVisitor.java:110)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:1035)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept(JCTree.java:898)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultisetSubject.java
  Last visited tree at line 42 column 5:
      check("count(%s)", element).that(actualCount).isEqualTo(expectedCount);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TableSubject.java
  Last visited tree at line 129 column 5:
      check("values()").that(checkNotNull(actual).values()).contains(value);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SimpleSubjectBuilder.java
  Last visited tree at line 45 column 12:
      return subjectFactory.createSubject(metadata, actual);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/CustomSubjectBuilder.java
  Last visited tree at line 55 column 48:
      CustomSubjectBuilderT createSubjectBuilder(FailureMetadata metadata);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Ordered.java
  Last visited tree at line 35 column 3:
    void inOrder();
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StackTraceCleaner.java
  Last visited tree at line 330 column 14:
        return stackTraceElement;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparisonFailureWithFacts.java
  Last visited tree at line 46 column 12:
      return facts;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ErrorWithFacts.java
  Last visited tree at line 26 column 17:
    ImmutableList<Fact> facts();
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java
  Last visited tree at line 60 column 22:
            return new TruthFailureSubject(metadata, actual, "failure");
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitVariable(TreeScanner.java:223)
  	at org.checkerframework.framework.source.SourceVisitor.visitVariable(SourceVisitor.java:104)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitVariable(BaseTypeVisitor.java:1548)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:365)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:41)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCVariableDecl.accept(JCTree.java:990)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GraphMatching.java
  Last visited tree at line 261 column 14:
        return false;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Truth.java:310: warning: [purity.not.sideeffectfree.call] call to side-effecting checkNotNull not allowed in side-effect-free method
      return checkNotNull(getLocalizedMessage());
                         ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Truth.java
  Last visited tree at line 310 column 14:
        return checkNotNull(getLocalizedMessage());
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ExpectFailure.java
  Last visited tree at line 202 column 9:
          ensureFailureCaught();
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitReturn(TreeScanner.java:469)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:2189)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCReturn.accept(JCTree.java:1570)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitBlock(TreeScanner.java:248)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBlock.accept(JCTree.java:1048)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitMethod(TreeScanner.java:206)
  	at org.checkerframework.framework.source.SourceVisitor.visitMethod(SourceVisitor.java:110)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:1035)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept(JCTree.java:898)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:143: warning: [purity.not.sideeffectfree.call] call to side-effecting new StringBuilder().append(numFailures).append(numFailures > 1 ? " expectations" : " expectation").append not allowed in side-effect-free method
              .append(" failed:\n");
                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:142: warning: [purity.not.sideeffectfree.call] call to side-effecting new StringBuilder().append(numFailures).append not allowed in side-effect-free method
              .append(numFailures > 1 ? " expectations" : " expectation")
                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:141: warning: [purity.not.sideeffectfree.call] call to side-effecting new StringBuilder().append not allowed in side-effect-free method
              .append(numFailures)
                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:148: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append("  ");
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:149: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append(padStart(String.valueOf(count), countLength, ' '));
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:149: warning: [purity.not.sideeffectfree.call] call to side-effecting padStart not allowed in side-effect-free method
        message.append(padStart(String.valueOf(count), countLength, ' '));
                               ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:150: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append(". ");
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting appendIndented not allowed in side-effect-free method
          appendIndented(countLength, message, getStackTraceAsString(failure));
                        ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting getStackTraceAsString not allowed in side-effect-free method
          appendIndented(countLength, message, getStackTraceAsString(failure));
                                                                    ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:154: warning: [purity.not.sideeffectfree.call] call to side-effecting appendIndented not allowed in side-effect-free method
          appendIndented(
                        ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting printSubsequentFailure not allowed in side-effect-free method
              printSubsequentFailure(failures.get(0).getStackTrace(), failure));
                                    ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting failures.get(0).getStackTrace not allowed in side-effect-free method
              printSubsequentFailure(failures.get(0).getStackTrace(), failure));
                                                                  ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:159: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append("\n");
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:140: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
          new StringBuilder()
          ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java
  Last visited tree at line 227 column 7:
        failures.add(failure);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/UsedByReflection.java
  Last visited tree at line 24 column 1:
  @Target({METHOD, FIELD, CONSTRUCTOR})
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AssertionErrorWithFacts.java:56: warning: [purity.not.sideeffectfree.call] call to side-effecting checkNotNull not allowed in side-effect-free method
    return checkNotNull(getLocalizedMessage());
                       ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AssertionErrorWithFacts.java
  Last visited tree at line 61 column 12:
      return facts;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthJUnit.java
  Last visited tree at line 64 column 24:
    private TruthJUnit() {}
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ActualValueInference.java
  Last visited tree at line 148 column 14:
        return null;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
22 errors
24 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-005843-afx6bey3/iteration0' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/gwt-sources:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/J2ktIncompatible.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/LongSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MapSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StackTraceCleaner.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/BooleanSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparisonFailureWithFacts.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Correspondence.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/LazyMessage.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GraphMatching.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GuavaOptionalSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/FailureMetadata.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultisetSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AbstractArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparisonFailures.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ClassSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveByteArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveBooleanArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ExpectFailure.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveIntArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Truth.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Ordered.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/FailureStrategy.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveCharArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StringSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ErrorWithFacts.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Fact.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ObjectArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/DiffUtils.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StandardSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/DoubleSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveShortArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/UsedByReflection.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/package-info.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Subject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ThrowableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AssertionErrorWithFacts.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthJUnit.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveLongArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SimpleSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveDoubleArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/BigDecimalSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IntegerSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/CustomSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Platform.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ActualValueInference.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/FloatSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MathUtil.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveFloatArraySubject.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Platform.java:201: warning: [purity.not.sideeffectfree.call] call to side-effecting checkNotNull not allowed in side-effect-free method
      return checkNotNull(getLocalizedMessage());
                         ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:181: warning: [purity.not.sideeffectfree.call] call to side-effecting toStringWithBrackets not allowed in side-effect-free method
      String withBrackets = toStringWithBrackets();
                                                ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:232: warning: [purity.not.sideeffectfree.call] call to side-effecting homogeneousTypeToDisplay.isPresent not allowed in side-effect-free method
      return homogeneousTypeToDisplay.isPresent()
                                               ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:233: warning: [purity.not.sideeffectfree.call] call to side-effecting homogeneousTypeToDisplay.get not allowed in side-effect-free method
          ? valuesAndMaybeTypes + " (" + homogeneousTypeToDisplay.get() + ")"
                                                                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:402: warning: [argument] incompatible argument for parameter elements of Builder.add.
    return new ImmutableList.Builder<E>().add(first).add(array).add(last).build();
                                                         ^
  found   : E[ extends @MaybePresent Object super @MaybePresent Void] @MaybePresent []
  required: E[ extends @MaybePresent Object super @OptionalBottom Void] @MaybePresent []
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/LazyMessage.java:43: warning: [purity.not.sideeffectfree.call] call to side-effecting lenientFormat not allowed in side-effect-free method
    return lenientFormat(format, args);
                        ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java:1214: warning: [argument] incompatible argument for parameter expected of UsingCorrespondence.containsExactlyElementsIn.
          (expected == null) ? newArrayList((E) null) : asList(expected));
                             ^
  found   : @MaybePresent Iterable<capture#01[ extends E[ extends @MaybePresent Object super @MaybePresent Void] super @OptionalBottom Void]>
  required: @MaybePresent Iterable<?[ extends E[ extends @MaybePresent Object super @OptionalBottom Void] super @OptionalBottom Void]>
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java:1214: warning: [conditional] incompatible types in conditional expression.
          (expected == null) ? newArrayList((E) null) : asList(expected));
                                           ^
  found   : @MaybePresent ArrayList<E[ extends @MaybePresent Object super @OptionalBottom Void]>
  required: @MaybePresent Iterable<capture#01[ extends E[ extends @MaybePresent Object super @MaybePresent Void] super @OptionalBottom Void]>
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java:1214: warning: [conditional] incompatible types in conditional expression.
          (expected == null) ? newArrayList((E) null) : asList(expected));
                                                              ^
  found   : @MaybePresent List<E[ extends @MaybePresent Object super @OptionalBottom Void]>
  required: @MaybePresent Iterable<capture#01[ extends E[ extends @MaybePresent Object super @MaybePresent Void] super @OptionalBottom Void]>
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveFloatArraySubject.java:126: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting checkedToFloat not allowed in deterministic side-effect-free method
              return Float.floatToIntBits(actual) == Float.floatToIntBits(checkedToFloat(expected));
                                                                                        ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent float @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveFloatArraySubject.java
  Last visited tree at line 235 column 7:
        containsNoneIn(Floats.asList(excluded));
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveDoubleArraySubject.java:127: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting checkedToDouble not allowed in deterministic side-effect-free method
                  == Double.doubleToLongBits(checkedToDouble(expected));
                                                            ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveDoubleArraySubject.java
  Last visited tree at line 230 column 7:
        containsNoneIn(Doubles.asList(excluded));
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GuavaOptionalSubject.java
  Last visited tree at line 79 column 7:
        checkNoNeedToDisplayBothValues("get()").that(actual.get()).isEqualTo(expected);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MapSubject.java
  Last visited tree at line 288 column 33:
      boolean test(A actualValue, E expectedValue);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java:347: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting checkNotNull not allowed in deterministic side-effect-free method
        return new IterableEntries(metadata, MultimapSubject.this, checkNotNull(actual));
                                                                               ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java:347: warning: [purity.not.sideeffectfree.call] call to side-effecting IterableEntries not allowed in side-effect-free method
        return new IterableEntries(metadata, MultimapSubject.this, checkNotNull(actual));
               ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java:347: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
        return new IterableEntries(metadata, MultimapSubject.this, checkNotNull(actual));
               ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java
  Last visited tree at line 347 column 20:
          return new IterableEntries(metadata, MultimapSubject.this, checkNotNull(actual));
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitReturn(TreeScanner.java:469)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:2189)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCReturn.accept(JCTree.java:1570)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitBlock(TreeScanner.java:248)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBlock.accept(JCTree.java:1048)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitMethod(TreeScanner.java:206)
  	at org.checkerframework.framework.source.SourceVisitor.visitMethod(SourceVisitor.java:110)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:1035)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept(JCTree.java:898)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultisetSubject.java
  Last visited tree at line 42 column 5:
      check("count(%s)", element).that(actualCount).isEqualTo(expectedCount);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TableSubject.java
  Last visited tree at line 129 column 5:
      check("values()").that(checkNotNull(actual).values()).contains(value);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SimpleSubjectBuilder.java
  Last visited tree at line 45 column 12:
      return subjectFactory.createSubject(metadata, actual);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/CustomSubjectBuilder.java
  Last visited tree at line 55 column 48:
      CustomSubjectBuilderT createSubjectBuilder(FailureMetadata metadata);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Ordered.java
  Last visited tree at line 35 column 3:
    void inOrder();
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StackTraceCleaner.java
  Last visited tree at line 330 column 14:
        return stackTraceElement;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparisonFailureWithFacts.java
  Last visited tree at line 46 column 12:
      return facts;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ErrorWithFacts.java
  Last visited tree at line 26 column 17:
    ImmutableList<Fact> facts();
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java:60: warning: [purity.not.sideeffectfree.call] call to side-effecting TruthFailureSubject not allowed in side-effect-free method
          return new TruthFailureSubject(metadata, actual, "failure");
                 ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java:60: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
          return new TruthFailureSubject(metadata, actual, "failure");
                 ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java
  Last visited tree at line 60 column 22:
            return new TruthFailureSubject(metadata, actual, "failure");
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitVariable(TreeScanner.java:223)
  	at org.checkerframework.framework.source.SourceVisitor.visitVariable(SourceVisitor.java:104)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitVariable(BaseTypeVisitor.java:1548)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:365)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:41)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCVariableDecl.accept(JCTree.java:990)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GraphMatching.java
  Last visited tree at line 261 column 14:
        return false;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Truth.java:310: warning: [purity.not.sideeffectfree.call] call to side-effecting checkNotNull not allowed in side-effect-free method
      return checkNotNull(getLocalizedMessage());
                         ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Truth.java
  Last visited tree at line 310 column 14:
        return checkNotNull(getLocalizedMessage());
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ExpectFailure.java:97: warning: [purity.methodref] Incompatible purity declaration
    return StandardSubjectBuilder.forCustomFailureStrategy(this::captureFailure);
                                                           ^
  Method in @MaybePresent ExpectFailure
    void captureFailure(@MaybePresent ExpectFailure this, @MaybePresent AssertionError p0)
    is not a valid method reference for method in @MaybePresent FailureStrategy
    void fail(@MaybePresent FailureStrategy this, @MaybePresent AssertionError p0)
  found   : []
  required: [SIDE_EFFECT_FREE]
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ExpectFailure.java
  Last visited tree at line 202 column 9:
          ensureFailureCaught();
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitReturn(TreeScanner.java:469)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:2189)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCReturn.accept(JCTree.java:1570)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitBlock(TreeScanner.java:248)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBlock.accept(JCTree.java:1048)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitMethod(TreeScanner.java:206)
  	at org.checkerframework.framework.source.SourceVisitor.visitMethod(SourceVisitor.java:110)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:1035)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept(JCTree.java:898)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:99: warning: [purity.not.sideeffectfree.call] call to side-effecting record not allowed in side-effect-free method
      record(failure);
            ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:143: warning: [purity.not.sideeffectfree.call] call to side-effecting new StringBuilder().append(numFailures).append(numFailures > 1 ? " expectations" : " expectation").append not allowed in side-effect-free method
              .append(" failed:\n");
                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:142: warning: [purity.not.sideeffectfree.call] call to side-effecting new StringBuilder().append(numFailures).append not allowed in side-effect-free method
              .append(numFailures > 1 ? " expectations" : " expectation")
                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:141: warning: [purity.not.sideeffectfree.call] call to side-effecting new StringBuilder().append not allowed in side-effect-free method
              .append(numFailures)
                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:148: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append("  ");
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:149: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append(padStart(String.valueOf(count), countLength, ' '));
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:149: warning: [purity.not.sideeffectfree.call] call to side-effecting padStart not allowed in side-effect-free method
        message.append(padStart(String.valueOf(count), countLength, ' '));
                               ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:150: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append(". ");
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting appendIndented not allowed in side-effect-free method
          appendIndented(countLength, message, getStackTraceAsString(failure));
                        ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting getStackTraceAsString not allowed in side-effect-free method
          appendIndented(countLength, message, getStackTraceAsString(failure));
                                                                    ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:154: warning: [purity.not.sideeffectfree.call] call to side-effecting appendIndented not allowed in side-effect-free method
          appendIndented(
                        ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting printSubsequentFailure not allowed in side-effect-free method
              printSubsequentFailure(failures.get(0).getStackTrace(), failure));
                                    ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting failures.get(0).getStackTrace not allowed in side-effect-free method
              printSubsequentFailure(failures.get(0).getStackTrace(), failure));
                                                                  ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:159: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append("\n");
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:140: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
          new StringBuilder()
          ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java
  Last visited tree at line 227 column 7:
        failures.add(failure);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/UsedByReflection.java
  Last visited tree at line 24 column 1:
  @Target({METHOD, FIELD, CONSTRUCTOR})
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AssertionErrorWithFacts.java:56: warning: [purity.not.sideeffectfree.call] call to side-effecting checkNotNull not allowed in side-effect-free method
    return checkNotNull(getLocalizedMessage());
                       ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AssertionErrorWithFacts.java
  Last visited tree at line 61 column 12:
      return facts;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthJUnit.java
  Last visited tree at line 64 column 24:
    private TruthJUnit() {}
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ActualValueInference.java
  Last visited tree at line 148 column 14:
        return null;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
22 errors
34 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-005843-afx6bey3/iteration1' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/gwt-sources:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/J2ktIncompatible.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/LongSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MapSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StackTraceCleaner.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/BooleanSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparisonFailureWithFacts.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Correspondence.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/LazyMessage.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GraphMatching.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GuavaOptionalSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/FailureMetadata.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultisetSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AbstractArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparisonFailures.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ClassSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveByteArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveBooleanArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ExpectFailure.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveIntArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Truth.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Ordered.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/FailureStrategy.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveCharArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StringSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ErrorWithFacts.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Fact.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ObjectArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/DiffUtils.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StandardSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/DoubleSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveShortArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/UsedByReflection.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/package-info.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Subject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ThrowableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AssertionErrorWithFacts.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthJUnit.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveLongArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SimpleSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveDoubleArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/BigDecimalSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IntegerSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/CustomSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Platform.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ActualValueInference.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/FloatSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MathUtil.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveFloatArraySubject.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Platform.java:201: warning: [purity.not.sideeffectfree.call] call to side-effecting checkNotNull not allowed in side-effect-free method
      return checkNotNull(getLocalizedMessage());
                         ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:181: warning: [purity.not.sideeffectfree.call] call to side-effecting toStringWithBrackets not allowed in side-effect-free method
      String withBrackets = toStringWithBrackets();
                                                ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:232: warning: [purity.not.sideeffectfree.call] call to side-effecting homogeneousTypeToDisplay.isPresent not allowed in side-effect-free method
      return homogeneousTypeToDisplay.isPresent()
                                               ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:233: warning: [purity.not.sideeffectfree.call] call to side-effecting homogeneousTypeToDisplay.get not allowed in side-effect-free method
          ? valuesAndMaybeTypes + " (" + homogeneousTypeToDisplay.get() + ")"
                                                                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:402: warning: [argument] incompatible argument for parameter elements of Builder.add.
    return new ImmutableList.Builder<E>().add(first).add(array).add(last).build();
                                                         ^
  found   : E[ extends @MaybePresent Object super @MaybePresent Void] @MaybePresent []
  required: E[ extends @MaybePresent Object super @OptionalBottom Void] @MaybePresent []
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/LazyMessage.java:43: warning: [purity.not.sideeffectfree.call] call to side-effecting lenientFormat not allowed in side-effect-free method
    return lenientFormat(format, args);
                        ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java:1214: warning: [argument] incompatible argument for parameter expected of UsingCorrespondence.containsExactlyElementsIn.
          (expected == null) ? newArrayList((E) null) : asList(expected));
                             ^
  found   : @MaybePresent Iterable<capture#01[ extends E[ extends @MaybePresent Object super @MaybePresent Void] super @OptionalBottom Void]>
  required: @MaybePresent Iterable<?[ extends E[ extends @MaybePresent Object super @OptionalBottom Void] super @OptionalBottom Void]>
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java:1214: warning: [conditional] incompatible types in conditional expression.
          (expected == null) ? newArrayList((E) null) : asList(expected));
                                           ^
  found   : @MaybePresent ArrayList<E[ extends @MaybePresent Object super @OptionalBottom Void]>
  required: @MaybePresent Iterable<capture#01[ extends E[ extends @MaybePresent Object super @MaybePresent Void] super @OptionalBottom Void]>
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java:1214: warning: [conditional] incompatible types in conditional expression.
          (expected == null) ? newArrayList((E) null) : asList(expected));
                                                              ^
  found   : @MaybePresent List<E[ extends @MaybePresent Object super @OptionalBottom Void]>
  required: @MaybePresent Iterable<capture#01[ extends E[ extends @MaybePresent Object super @MaybePresent Void] super @OptionalBottom Void]>
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveFloatArraySubject.java:126: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting checkedToFloat not allowed in deterministic side-effect-free method
              return Float.floatToIntBits(actual) == Float.floatToIntBits(checkedToFloat(expected));
                                                                                        ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent float @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveFloatArraySubject.java
  Last visited tree at line 235 column 7:
        containsNoneIn(Floats.asList(excluded));
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveDoubleArraySubject.java:127: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting checkedToDouble not allowed in deterministic side-effect-free method
                  == Double.doubleToLongBits(checkedToDouble(expected));
                                                            ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveDoubleArraySubject.java
  Last visited tree at line 230 column 7:
        containsNoneIn(Doubles.asList(excluded));
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GuavaOptionalSubject.java
  Last visited tree at line 79 column 7:
        checkNoNeedToDisplayBothValues("get()").that(actual.get()).isEqualTo(expected);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MapSubject.java
  Last visited tree at line 288 column 33:
      boolean test(A actualValue, E expectedValue);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java:347: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting checkNotNull not allowed in deterministic side-effect-free method
        return new IterableEntries(metadata, MultimapSubject.this, checkNotNull(actual));
                                                                               ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java:347: warning: [purity.not.sideeffectfree.call] call to side-effecting IterableEntries not allowed in side-effect-free method
        return new IterableEntries(metadata, MultimapSubject.this, checkNotNull(actual));
               ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java:347: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
        return new IterableEntries(metadata, MultimapSubject.this, checkNotNull(actual));
               ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java
  Last visited tree at line 347 column 20:
          return new IterableEntries(metadata, MultimapSubject.this, checkNotNull(actual));
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitReturn(TreeScanner.java:469)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:2189)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCReturn.accept(JCTree.java:1570)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitBlock(TreeScanner.java:248)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBlock.accept(JCTree.java:1048)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitMethod(TreeScanner.java:206)
  	at org.checkerframework.framework.source.SourceVisitor.visitMethod(SourceVisitor.java:110)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:1035)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept(JCTree.java:898)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultisetSubject.java
  Last visited tree at line 42 column 5:
      check("count(%s)", element).that(actualCount).isEqualTo(expectedCount);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TableSubject.java
  Last visited tree at line 129 column 5:
      check("values()").that(checkNotNull(actual).values()).contains(value);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SimpleSubjectBuilder.java
  Last visited tree at line 45 column 12:
      return subjectFactory.createSubject(metadata, actual);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/CustomSubjectBuilder.java
  Last visited tree at line 55 column 48:
      CustomSubjectBuilderT createSubjectBuilder(FailureMetadata metadata);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Ordered.java
  Last visited tree at line 35 column 3:
    void inOrder();
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StackTraceCleaner.java
  Last visited tree at line 330 column 14:
        return stackTraceElement;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparisonFailureWithFacts.java
  Last visited tree at line 46 column 12:
      return facts;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ErrorWithFacts.java
  Last visited tree at line 26 column 17:
    ImmutableList<Fact> facts();
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java:60: warning: [purity.not.sideeffectfree.call] call to side-effecting TruthFailureSubject not allowed in side-effect-free method
          return new TruthFailureSubject(metadata, actual, "failure");
                 ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java:60: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
          return new TruthFailureSubject(metadata, actual, "failure");
                 ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java
  Last visited tree at line 60 column 22:
            return new TruthFailureSubject(metadata, actual, "failure");
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitVariable(TreeScanner.java:223)
  	at org.checkerframework.framework.source.SourceVisitor.visitVariable(SourceVisitor.java:104)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitVariable(BaseTypeVisitor.java:1548)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:365)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:41)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCVariableDecl.accept(JCTree.java:990)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GraphMatching.java
  Last visited tree at line 261 column 14:
        return false;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Truth.java:310: warning: [purity.not.sideeffectfree.call] call to side-effecting checkNotNull not allowed in side-effect-free method
      return checkNotNull(getLocalizedMessage());
                         ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Truth.java
  Last visited tree at line 310 column 14:
        return checkNotNull(getLocalizedMessage());
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ExpectFailure.java:97: warning: [purity.methodref] Incompatible purity declaration
    return StandardSubjectBuilder.forCustomFailureStrategy(this::captureFailure);
                                                           ^
  Method in @MaybePresent ExpectFailure
    void captureFailure(@MaybePresent ExpectFailure this, @MaybePresent AssertionError p0)
    is not a valid method reference for method in @MaybePresent FailureStrategy
    void fail(@MaybePresent FailureStrategy this, @MaybePresent AssertionError p0)
  found   : []
  required: [SIDE_EFFECT_FREE]
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ExpectFailure.java
  Last visited tree at line 202 column 9:
          ensureFailureCaught();
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitReturn(TreeScanner.java:469)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:2189)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCReturn.accept(JCTree.java:1570)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitBlock(TreeScanner.java:248)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBlock.accept(JCTree.java:1048)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitMethod(TreeScanner.java:206)
  	at org.checkerframework.framework.source.SourceVisitor.visitMethod(SourceVisitor.java:110)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:1035)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept(JCTree.java:898)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:99: warning: [purity.not.sideeffectfree.call] call to side-effecting record not allowed in side-effect-free method
      record(failure);
            ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:143: warning: [purity.not.sideeffectfree.call] call to side-effecting new StringBuilder().append(numFailures).append(numFailures > 1 ? " expectations" : " expectation").append not allowed in side-effect-free method
              .append(" failed:\n");
                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:142: warning: [purity.not.sideeffectfree.call] call to side-effecting new StringBuilder().append(numFailures).append not allowed in side-effect-free method
              .append(numFailures > 1 ? " expectations" : " expectation")
                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:141: warning: [purity.not.sideeffectfree.call] call to side-effecting new StringBuilder().append not allowed in side-effect-free method
              .append(numFailures)
                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:148: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append("  ");
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:149: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append(padStart(String.valueOf(count), countLength, ' '));
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:149: warning: [purity.not.sideeffectfree.call] call to side-effecting padStart not allowed in side-effect-free method
        message.append(padStart(String.valueOf(count), countLength, ' '));
                               ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:150: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append(". ");
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting appendIndented not allowed in side-effect-free method
          appendIndented(countLength, message, getStackTraceAsString(failure));
                        ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting getStackTraceAsString not allowed in side-effect-free method
          appendIndented(countLength, message, getStackTraceAsString(failure));
                                                                    ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:154: warning: [purity.not.sideeffectfree.call] call to side-effecting appendIndented not allowed in side-effect-free method
          appendIndented(
                        ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting printSubsequentFailure not allowed in side-effect-free method
              printSubsequentFailure(failures.get(0).getStackTrace(), failure));
                                    ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting failures.get(0).getStackTrace not allowed in side-effect-free method
              printSubsequentFailure(failures.get(0).getStackTrace(), failure));
                                                                  ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:159: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append("\n");
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:140: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
          new StringBuilder()
          ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java
  Last visited tree at line 227 column 7:
        failures.add(failure);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/UsedByReflection.java
  Last visited tree at line 24 column 1:
  @Target({METHOD, FIELD, CONSTRUCTOR})
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AssertionErrorWithFacts.java:56: warning: [purity.not.sideeffectfree.call] call to side-effecting checkNotNull not allowed in side-effect-free method
    return checkNotNull(getLocalizedMessage());
                       ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AssertionErrorWithFacts.java
  Last visited tree at line 61 column 12:
      return facts;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthJUnit.java
  Last visited tree at line 64 column 24:
    private TruthJUnit() {}
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ActualValueInference.java
  Last visited tree at line 148 column 14:
        return null;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
22 errors
34 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-005843-afx6bey3/iteration2' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/gwt-sources:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/J2ktIncompatible.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/LongSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MapSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StackTraceCleaner.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/BooleanSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparisonFailureWithFacts.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Correspondence.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/LazyMessage.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GraphMatching.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GuavaOptionalSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/FailureMetadata.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultisetSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AbstractArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparisonFailures.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ClassSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveByteArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveBooleanArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ExpectFailure.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveIntArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Truth.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Ordered.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/FailureStrategy.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveCharArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StringSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ErrorWithFacts.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Fact.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ObjectArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/DiffUtils.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StandardSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/DoubleSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveShortArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/UsedByReflection.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/package-info.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Subject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ThrowableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AssertionErrorWithFacts.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthJUnit.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveLongArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SimpleSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveDoubleArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/BigDecimalSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IntegerSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/CustomSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Platform.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ActualValueInference.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/FloatSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MathUtil.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveFloatArraySubject.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Platform.java:201: warning: [purity.not.sideeffectfree.call] call to side-effecting checkNotNull not allowed in side-effect-free method
      return checkNotNull(getLocalizedMessage());
                         ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:181: warning: [purity.not.sideeffectfree.call] call to side-effecting toStringWithBrackets not allowed in side-effect-free method
      String withBrackets = toStringWithBrackets();
                                                ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:232: warning: [purity.not.sideeffectfree.call] call to side-effecting homogeneousTypeToDisplay.isPresent not allowed in side-effect-free method
      return homogeneousTypeToDisplay.isPresent()
                                               ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:233: warning: [purity.not.sideeffectfree.call] call to side-effecting homogeneousTypeToDisplay.get not allowed in side-effect-free method
          ? valuesAndMaybeTypes + " (" + homogeneousTypeToDisplay.get() + ")"
                                                                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:402: warning: [argument] incompatible argument for parameter elements of Builder.add.
    return new ImmutableList.Builder<E>().add(first).add(array).add(last).build();
                                                         ^
  found   : E[ extends @MaybePresent Object super @MaybePresent Void] @MaybePresent []
  required: E[ extends @MaybePresent Object super @OptionalBottom Void] @MaybePresent []
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/LazyMessage.java:43: warning: [purity.not.sideeffectfree.call] call to side-effecting lenientFormat not allowed in side-effect-free method
    return lenientFormat(format, args);
                        ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java:1214: warning: [argument] incompatible argument for parameter expected of UsingCorrespondence.containsExactlyElementsIn.
          (expected == null) ? newArrayList((E) null) : asList(expected));
                             ^
  found   : @MaybePresent Iterable<capture#01[ extends E[ extends @MaybePresent Object super @MaybePresent Void] super @OptionalBottom Void]>
  required: @MaybePresent Iterable<?[ extends E[ extends @MaybePresent Object super @OptionalBottom Void] super @OptionalBottom Void]>
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java:1214: warning: [conditional] incompatible types in conditional expression.
          (expected == null) ? newArrayList((E) null) : asList(expected));
                                           ^
  found   : @MaybePresent ArrayList<E[ extends @MaybePresent Object super @OptionalBottom Void]>
  required: @MaybePresent Iterable<capture#01[ extends E[ extends @MaybePresent Object super @MaybePresent Void] super @OptionalBottom Void]>
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java:1214: warning: [conditional] incompatible types in conditional expression.
          (expected == null) ? newArrayList((E) null) : asList(expected));
                                                              ^
  found   : @MaybePresent List<E[ extends @MaybePresent Object super @OptionalBottom Void]>
  required: @MaybePresent Iterable<capture#01[ extends E[ extends @MaybePresent Object super @MaybePresent Void] super @OptionalBottom Void]>
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveFloatArraySubject.java:126: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting checkedToFloat not allowed in deterministic side-effect-free method
              return Float.floatToIntBits(actual) == Float.floatToIntBits(checkedToFloat(expected));
                                                                                        ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent float @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveFloatArraySubject.java
  Last visited tree at line 235 column 7:
        containsNoneIn(Floats.asList(excluded));
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveDoubleArraySubject.java:127: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting checkedToDouble not allowed in deterministic side-effect-free method
                  == Double.doubleToLongBits(checkedToDouble(expected));
                                                            ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveDoubleArraySubject.java
  Last visited tree at line 230 column 7:
        containsNoneIn(Doubles.asList(excluded));
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GuavaOptionalSubject.java
  Last visited tree at line 79 column 7:
        checkNoNeedToDisplayBothValues("get()").that(actual.get()).isEqualTo(expected);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MapSubject.java
  Last visited tree at line 288 column 33:
      boolean test(A actualValue, E expectedValue);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java:347: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting checkNotNull not allowed in deterministic side-effect-free method
        return new IterableEntries(metadata, MultimapSubject.this, checkNotNull(actual));
                                                                               ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java:347: warning: [purity.not.sideeffectfree.call] call to side-effecting IterableEntries not allowed in side-effect-free method
        return new IterableEntries(metadata, MultimapSubject.this, checkNotNull(actual));
               ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java:347: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
        return new IterableEntries(metadata, MultimapSubject.this, checkNotNull(actual));
               ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java
  Last visited tree at line 347 column 20:
          return new IterableEntries(metadata, MultimapSubject.this, checkNotNull(actual));
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitReturn(TreeScanner.java:469)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:2189)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCReturn.accept(JCTree.java:1570)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitBlock(TreeScanner.java:248)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBlock.accept(JCTree.java:1048)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitMethod(TreeScanner.java:206)
  	at org.checkerframework.framework.source.SourceVisitor.visitMethod(SourceVisitor.java:110)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:1035)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept(JCTree.java:898)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultisetSubject.java
  Last visited tree at line 42 column 5:
      check("count(%s)", element).that(actualCount).isEqualTo(expectedCount);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TableSubject.java
  Last visited tree at line 129 column 5:
      check("values()").that(checkNotNull(actual).values()).contains(value);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SimpleSubjectBuilder.java
  Last visited tree at line 45 column 12:
      return subjectFactory.createSubject(metadata, actual);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/CustomSubjectBuilder.java
  Last visited tree at line 55 column 48:
      CustomSubjectBuilderT createSubjectBuilder(FailureMetadata metadata);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Ordered.java
  Last visited tree at line 35 column 3:
    void inOrder();
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StackTraceCleaner.java
  Last visited tree at line 330 column 14:
        return stackTraceElement;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparisonFailureWithFacts.java
  Last visited tree at line 46 column 12:
      return facts;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ErrorWithFacts.java
  Last visited tree at line 26 column 17:
    ImmutableList<Fact> facts();
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java:60: warning: [purity.not.sideeffectfree.call] call to side-effecting TruthFailureSubject not allowed in side-effect-free method
          return new TruthFailureSubject(metadata, actual, "failure");
                 ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java:60: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
          return new TruthFailureSubject(metadata, actual, "failure");
                 ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java
  Last visited tree at line 60 column 22:
            return new TruthFailureSubject(metadata, actual, "failure");
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitVariable(TreeScanner.java:223)
  	at org.checkerframework.framework.source.SourceVisitor.visitVariable(SourceVisitor.java:104)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitVariable(BaseTypeVisitor.java:1548)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:365)
  	at org.checkerframework.checker.optional.OptionalVisitor.visitVariable(OptionalVisitor.java:41)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCVariableDecl.accept(JCTree.java:990)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GraphMatching.java
  Last visited tree at line 261 column 14:
        return false;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Truth.java:310: warning: [purity.not.sideeffectfree.call] call to side-effecting checkNotNull not allowed in side-effect-free method
      return checkNotNull(getLocalizedMessage());
                         ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Truth.java
  Last visited tree at line 310 column 14:
        return checkNotNull(getLocalizedMessage());
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ExpectFailure.java:97: warning: [purity.methodref] Incompatible purity declaration
    return StandardSubjectBuilder.forCustomFailureStrategy(this::captureFailure);
                                                           ^
  Method in @MaybePresent ExpectFailure
    void captureFailure(@MaybePresent ExpectFailure this, @MaybePresent AssertionError p0)
    is not a valid method reference for method in @MaybePresent FailureStrategy
    void fail(@MaybePresent FailureStrategy this, @MaybePresent AssertionError p0)
  found   : []
  required: [SIDE_EFFECT_FREE]
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ExpectFailure.java
  Last visited tree at line 202 column 9:
          ensureFailureCaught();
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:2113)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitNewClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1727)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitReturn(TreeScanner.java:469)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:2189)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitReturn(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCReturn.accept(JCTree.java:1570)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitBlock(TreeScanner.java:248)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBlock.accept(JCTree.java:1048)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitMethod(TreeScanner.java:206)
  	at org.checkerframework.framework.source.SourceVisitor.visitMethod(SourceVisitor.java:110)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:1035)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitMethod(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept(JCTree.java:898)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:99: warning: [purity.not.sideeffectfree.call] call to side-effecting record not allowed in side-effect-free method
      record(failure);
            ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:143: warning: [purity.not.sideeffectfree.call] call to side-effecting new StringBuilder().append(numFailures).append(numFailures > 1 ? " expectations" : " expectation").append not allowed in side-effect-free method
              .append(" failed:\n");
                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:142: warning: [purity.not.sideeffectfree.call] call to side-effecting new StringBuilder().append(numFailures).append not allowed in side-effect-free method
              .append(numFailures > 1 ? " expectations" : " expectation")
                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:141: warning: [purity.not.sideeffectfree.call] call to side-effecting new StringBuilder().append not allowed in side-effect-free method
              .append(numFailures)
                     ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:148: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append("  ");
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:149: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append(padStart(String.valueOf(count), countLength, ' '));
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:149: warning: [purity.not.sideeffectfree.call] call to side-effecting padStart not allowed in side-effect-free method
        message.append(padStart(String.valueOf(count), countLength, ' '));
                               ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:150: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append(". ");
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting appendIndented not allowed in side-effect-free method
          appendIndented(countLength, message, getStackTraceAsString(failure));
                        ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting getStackTraceAsString not allowed in side-effect-free method
          appendIndented(countLength, message, getStackTraceAsString(failure));
                                                                    ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:154: warning: [purity.not.sideeffectfree.call] call to side-effecting appendIndented not allowed in side-effect-free method
          appendIndented(
                        ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting printSubsequentFailure not allowed in side-effect-free method
              printSubsequentFailure(failures.get(0).getStackTrace(), failure));
                                    ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting failures.get(0).getStackTrace not allowed in side-effect-free method
              printSubsequentFailure(failures.get(0).getStackTrace(), failure));
                                                                  ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:159: warning: [purity.not.sideeffectfree.call] call to side-effecting message.append not allowed in side-effect-free method
        message.append("\n");
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java:140: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
          new StringBuilder()
          ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java
  Last visited tree at line 227 column 7:
        failures.add(failure);
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/UsedByReflection.java
  Last visited tree at line 24 column 1:
  @Target({METHOD, FIELD, CONSTRUCTOR})
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AssertionErrorWithFacts.java:56: warning: [purity.not.sideeffectfree.call] call to side-effecting checkNotNull not allowed in side-effect-free method
    return checkNotNull(getLocalizedMessage());
                       ^
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AssertionErrorWithFacts.java
  Last visited tree at line 61 column 12:
      return facts;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthJUnit.java
  Last visited tree at line 64 column 24:
    private TruthJUnit() {}
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
error: AsSuperVisitor: unexpected combination:
    type: DECLARED @MaybePresent Object
    superType: ARRAY @MaybePresent double @MaybePresent []
  ; The Checker Framework crashed.  Please report the crash.  Version: Checker Framework 3.38.1-SNAPSHOT, branch master, 2023-09-13, commit 558d3e7, dirty=true.
  Compilation unit: /scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ActualValueInference.java
  Last visited tree at line 148 column 14:
        return null;
  Exception: java.lang.Throwable; java.lang.Throwable
  	at org.checkerframework.javacutil.BugInCF.<init>(BugInCF.java:22)
  	at org.checkerframework.framework.type.visitor.AtmComboVisitor.defaultAction(AtmComboVisitor.java:58)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visitDeclared_Array(AbstractAtmComboVisitor.java:99)
  	at org.checkerframework.framework.util.AtmCombo.accept(AtmCombo.java:308)
  	at org.checkerframework.framework.type.visitor.AbstractAtmComboVisitor.visit(AbstractAtmComboVisitor.java:34)
  	at org.checkerframework.framework.type.AsSuperVisitor.visit(AsSuperVisitor.java:106)
  	at org.checkerframework.framework.type.AsSuperVisitor.asSuper(AsSuperVisitor.java:87)
  	at org.checkerframework.framework.util.AnnotatedTypes.asSuper(AnnotatedTypes.java:117)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.updateAtmWithLub(WholeProgramInferenceImplementation.java:1066)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.makeConditionConsistentWithOtherMethod(AnnotatedTypeFactory.java:5703)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.wpiPrepareMethodForWriting(AnnotatedTypeFactory.java:5650)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.java:1005)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareClassForWriting(WholeProgramInferenceJavaParserStorage.java:956)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.wpiPrepareCompilationUnitForWriting(WholeProgramInferenceJavaParserStorage.java:926)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.writeResultsToFile(WholeProgramInferenceJavaParserStorage.java:1025)
  	at org.checkerframework.common.wholeprograminference.WholeProgramInferenceImplementation.writeResultsToFile(WholeProgramInferenceImplementation.java:1145)
  	at org.checkerframework.framework.type.AnnotatedTypeFactory.postProcessClassTree(AnnotatedTypeFactory.java:1414)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:551)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)
  	at org.checkerframework.framework.source.SourceVisitor.scan(SourceVisitor.java:92)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:403)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.scan(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)
  	at jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)
  	at jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)
  	at org.checkerframework.framework.source.SourceVisitor.visitClass(SourceVisitor.java:98)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.processClassTree(BaseTypeVisitor.java:604)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:550)
  	at org.checkerframework.common.basetype.BaseTypeVisitor.visitClass(BaseTypeVisitor.java:184)
  	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:808)
  	at jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)
  	at org.checkerframework.framework.source.SourceVisitor.visit(SourceVisitor.java:86)
  	at org.checkerframework.framework.source.SourceChecker.typeProcess(SourceChecker.java:1044)
  	at org.checkerframework.common.basetype.BaseTypeChecker.typeProcess(BaseTypeChecker.java:558)
  	at org.checkerframework.javacutil.AbstractTypeProcessor$AttributionTaskListener.finished(AbstractTypeProcessor.java:188)
  	at jdk.compiler/com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.finished(ClientCodeWrapper.java:828)
  	at jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1414)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1371)
  	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:973)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:311)
  	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:170)
  	at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)
  	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
22 errors
34 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-005843-afx6bey3/iteration2' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/gwt-sources:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/J2ktIncompatible.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/LongSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MapSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StackTraceCleaner.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/BooleanSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparisonFailureWithFacts.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Correspondence.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/LazyMessage.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GraphMatching.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/GuavaOptionalSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/FailureMetadata.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultisetSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AbstractArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ComparisonFailures.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ClassSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveByteArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveBooleanArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ExpectFailure.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveIntArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Truth.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Ordered.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/FailureStrategy.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Expect.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveCharArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StringSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ErrorWithFacts.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Fact.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ObjectArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/DiffUtils.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/StandardSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/DoubleSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveShortArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/UsedByReflection.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/package-info.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Subject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ThrowableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/AssertionErrorWithFacts.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/TruthJUnit.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveLongArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SimpleSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveDoubleArraySubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/BigDecimalSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IntegerSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/CustomSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/Platform.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ActualValueInference.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/FloatSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MathUtil.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/MultimapSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/PrimitiveFloatArraySubject.java'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java:402: error: [argument] incompatible argument for parameter elements of Builder.add.
    return new ImmutableList.Builder<E>().add(first).add(array).add(last).build();
                                                         ^
  found   : E[ extends @MaybePresent Object super @MaybePresent Void] @MaybePresent []
  required: E[ extends @MaybePresent Object super @OptionalBottom Void] @MaybePresent []
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java:1214: error: [argument] incompatible argument for parameter expected of UsingCorrespondence.containsExactlyElementsIn.
          (expected == null) ? newArrayList((E) null) : asList(expected));
                             ^
  found   : @MaybePresent Iterable<capture#01[ extends E[ extends @MaybePresent Object super @MaybePresent Void] super @OptionalBottom Void]>
  required: @MaybePresent Iterable<?[ extends E[ extends @MaybePresent Object super @OptionalBottom Void] super @OptionalBottom Void]>
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java:1214: error: [conditional] incompatible types in conditional expression.
          (expected == null) ? newArrayList((E) null) : asList(expected));
                                           ^
  found   : @MaybePresent ArrayList<E[ extends @MaybePresent Object super @OptionalBottom Void]>
  required: @MaybePresent Iterable<capture#01[ extends E[ extends @MaybePresent Object super @MaybePresent Void] super @OptionalBottom Void]>
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/IterableSubject.java:1214: error: [conditional] incompatible types in conditional expression.
          (expected == null) ? newArrayList((E) null) : asList(expected));
                                                              ^
  found   : @MaybePresent List<E[ extends @MaybePresent Object super @OptionalBottom Void]>
  required: @MaybePresent Iterable<capture#01[ extends E[ extends @MaybePresent Object super @MaybePresent Void] super @OptionalBottom Void]>
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/src/main/java/com/google/common/truth/ExpectFailure.java:97: error: [purity.methodref] Incompatible purity declaration
    return StandardSubjectBuilder.forCustomFailureStrategy(this::captureFailure);
                                                           ^
  Method in @MaybePresent ExpectFailure
    void captureFailure(@MaybePresent ExpectFailure this, @MaybePresent AssertionError p0)
    is not a valid method reference for method in @MaybePresent FailureStrategy
    void fail(@MaybePresent FailureStrategy this, @MaybePresent AssertionError p0)
  found   : []
  required: [SIDE_EFFECT_FREE]
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
5 errors
Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalDoubleSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/IntStreamSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalIntSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/LongStreamSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/PathSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalLongSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/StreamSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/Truth8.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/IntStreamSubject.java:60: warning: [purity.methodref] Incompatible purity declaration
    return IntStreamSubject::new;
           ^
  Method in @MaybePresent IntStreamSubject
    @MaybePresent IntStreamSubject <init>(@MaybePresent FailureMetadata p0, @MaybePresent IntStream p1)
    is not a valid method reference for method in @MaybePresent Factory<@MaybePresent IntStreamSubject, @MaybePresent IntStream>
    @MaybePresent IntStreamSubject createSubject(@MaybePresent Factory<@MaybePresent IntStreamSubject, @MaybePresent IntStream> this, @MaybePresent FailureMetadata p0, @MaybePresent IntStream p1)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/LongStreamSubject.java:60: warning: [purity.methodref] Incompatible purity declaration
    return LongStreamSubject::new;
           ^
  Method in @MaybePresent LongStreamSubject
    @MaybePresent LongStreamSubject <init>(@MaybePresent FailureMetadata p0, @MaybePresent LongStream p1)
    is not a valid method reference for method in @MaybePresent Factory<@MaybePresent LongStreamSubject, @MaybePresent LongStream>
    @MaybePresent LongStreamSubject createSubject(@MaybePresent Factory<@MaybePresent LongStreamSubject, @MaybePresent LongStream> this, @MaybePresent FailureMetadata p0, @MaybePresent LongStream p1)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalSubject.java:30: warning: [optional.field] Don't use Optional as the type of a field.
  private final @Nullable Optional<?> actual;
                                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalSubject.java:34: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
      @Nullable Optional<?> subject,
                            ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalSubject.java:85: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    return (metadata, subject) -> new OptionalSubject(metadata, subject, "optional");
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/PathSubject.java:31: warning: [purity.methodref] Incompatible purity declaration
    return PathSubject::new;
           ^
  Method in @MaybePresent PathSubject
    @MaybePresent PathSubject <init>(@MaybePresent FailureMetadata p0, @MaybePresent Path p1)
    is not a valid method reference for method in @MaybePresent Factory<@MaybePresent PathSubject, @MaybePresent Path>
    @MaybePresent PathSubject createSubject(@MaybePresent Factory<@MaybePresent PathSubject, @MaybePresent Path> this, @MaybePresent FailureMetadata p0, @MaybePresent Path p1)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/StreamSubject.java:59: warning: [purity.methodref] Incompatible purity declaration
    return StreamSubject::new;
           ^
  Method in @MaybePresent StreamSubject
    @MaybePresent StreamSubject <init>(@MaybePresent FailureMetadata p0, @MaybePresent Stream<? extends @MaybePresent Object> p1)
    is not a valid method reference for method in @MaybePresent Factory<@MaybePresent StreamSubject, @MaybePresent Stream<? extends @MaybePresent Object>>
    @MaybePresent StreamSubject createSubject(@MaybePresent Factory<@MaybePresent StreamSubject, @MaybePresent Stream<? extends @MaybePresent Object>> this, @MaybePresent FailureMetadata p0, @MaybePresent Stream<? extends @MaybePresent Object> p1)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/Truth8.java:48: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
  public static OptionalSubject assertThat(@Nullable Optional<?> target) {
                                                                 ^
8 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-010109-xuvt5bzz/iteration0' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalDoubleSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/IntStreamSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalIntSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/LongStreamSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/PathSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalLongSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/StreamSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/Truth8.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/IntStreamSubject.java:60: warning: [purity.methodref] Incompatible purity declaration
    return IntStreamSubject::new;
           ^
  Method in @MaybePresent IntStreamSubject
    @MaybePresent IntStreamSubject <init>(@MaybePresent FailureMetadata p0, @MaybePresent IntStream p1)
    is not a valid method reference for method in @MaybePresent Factory<@MaybePresent IntStreamSubject, @MaybePresent IntStream>
    @MaybePresent IntStreamSubject createSubject(@MaybePresent Factory<@MaybePresent IntStreamSubject, @MaybePresent IntStream> this, @MaybePresent FailureMetadata p0, @MaybePresent IntStream p1)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/LongStreamSubject.java:60: warning: [purity.methodref] Incompatible purity declaration
    return LongStreamSubject::new;
           ^
  Method in @MaybePresent LongStreamSubject
    @MaybePresent LongStreamSubject <init>(@MaybePresent FailureMetadata p0, @MaybePresent LongStream p1)
    is not a valid method reference for method in @MaybePresent Factory<@MaybePresent LongStreamSubject, @MaybePresent LongStream>
    @MaybePresent LongStreamSubject createSubject(@MaybePresent Factory<@MaybePresent LongStreamSubject, @MaybePresent LongStream> this, @MaybePresent FailureMetadata p0, @MaybePresent LongStream p1)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalSubject.java:30: warning: [optional.field] Don't use Optional as the type of a field.
  private final @Nullable Optional<?> actual;
                                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalSubject.java:34: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
      @Nullable Optional<?> subject,
                            ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalSubject.java:85: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    return (metadata, subject) -> new OptionalSubject(metadata, subject, "optional");
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/PathSubject.java:31: warning: [purity.methodref] Incompatible purity declaration
    return PathSubject::new;
           ^
  Method in @MaybePresent PathSubject
    @MaybePresent PathSubject <init>(@MaybePresent FailureMetadata p0, @MaybePresent Path p1)
    is not a valid method reference for method in @MaybePresent Factory<@MaybePresent PathSubject, @MaybePresent Path>
    @MaybePresent PathSubject createSubject(@MaybePresent Factory<@MaybePresent PathSubject, @MaybePresent Path> this, @MaybePresent FailureMetadata p0, @MaybePresent Path p1)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/StreamSubject.java:59: warning: [purity.methodref] Incompatible purity declaration
    return StreamSubject::new;
           ^
  Method in @MaybePresent StreamSubject
    @MaybePresent StreamSubject <init>(@MaybePresent FailureMetadata p0, @MaybePresent Stream<? extends @MaybePresent Object> p1)
    is not a valid method reference for method in @MaybePresent Factory<@MaybePresent StreamSubject, @MaybePresent Stream<? extends @MaybePresent Object>>
    @MaybePresent StreamSubject createSubject(@MaybePresent Factory<@MaybePresent StreamSubject, @MaybePresent Stream<? extends @MaybePresent Object>> this, @MaybePresent FailureMetadata p0, @MaybePresent Stream<? extends @MaybePresent Object> p1)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/Truth8.java:48: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
  public static OptionalSubject assertThat(@Nullable Optional<?> target) {
                                                                 ^
8 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-010109-xuvt5bzz/iteration0' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalDoubleSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/IntStreamSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalIntSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/LongStreamSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/PathSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalLongSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/StreamSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/Truth8.java'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/IntStreamSubject.java:60: error: [purity.methodref] Incompatible purity declaration
    return IntStreamSubject::new;
           ^
  Method in @MaybePresent IntStreamSubject
    @MaybePresent IntStreamSubject <init>(@MaybePresent FailureMetadata p0, @MaybePresent IntStream p1)
    is not a valid method reference for method in @MaybePresent Factory<@MaybePresent IntStreamSubject, @MaybePresent IntStream>
    @MaybePresent IntStreamSubject createSubject(@MaybePresent Factory<@MaybePresent IntStreamSubject, @MaybePresent IntStream> this, @MaybePresent FailureMetadata p0, @MaybePresent IntStream p1)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/LongStreamSubject.java:60: error: [purity.methodref] Incompatible purity declaration
    return LongStreamSubject::new;
           ^
  Method in @MaybePresent LongStreamSubject
    @MaybePresent LongStreamSubject <init>(@MaybePresent FailureMetadata p0, @MaybePresent LongStream p1)
    is not a valid method reference for method in @MaybePresent Factory<@MaybePresent LongStreamSubject, @MaybePresent LongStream>
    @MaybePresent LongStreamSubject createSubject(@MaybePresent Factory<@MaybePresent LongStreamSubject, @MaybePresent LongStream> this, @MaybePresent FailureMetadata p0, @MaybePresent LongStream p1)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalSubject.java:30: warning: [optional.field] Don't use Optional as the type of a field.
  private final @Nullable Optional<?> actual;
                                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalSubject.java:34: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
      @Nullable Optional<?> subject,
                            ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/OptionalSubject.java:85: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    return (metadata, subject) -> new OptionalSubject(metadata, subject, "optional");
                      ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/PathSubject.java:31: error: [purity.methodref] Incompatible purity declaration
    return PathSubject::new;
           ^
  Method in @MaybePresent PathSubject
    @MaybePresent PathSubject <init>(@MaybePresent FailureMetadata p0, @MaybePresent Path p1)
    is not a valid method reference for method in @MaybePresent Factory<@MaybePresent PathSubject, @MaybePresent Path>
    @MaybePresent PathSubject createSubject(@MaybePresent Factory<@MaybePresent PathSubject, @MaybePresent Path> this, @MaybePresent FailureMetadata p0, @MaybePresent Path p1)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/StreamSubject.java:59: error: [purity.methodref] Incompatible purity declaration
    return StreamSubject::new;
           ^
  Method in @MaybePresent StreamSubject
    @MaybePresent StreamSubject <init>(@MaybePresent FailureMetadata p0, @MaybePresent Stream<? extends @MaybePresent Object> p1)
    is not a valid method reference for method in @MaybePresent Factory<@MaybePresent StreamSubject, @MaybePresent Stream<? extends @MaybePresent Object>>
    @MaybePresent StreamSubject createSubject(@MaybePresent Factory<@MaybePresent StreamSubject, @MaybePresent Stream<? extends @MaybePresent Object>> this, @MaybePresent FailureMetadata p0, @MaybePresent Stream<? extends @MaybePresent Object> p1)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/java8/src/main/java/com/google/common/truth/Truth8.java:48: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
  public static OptionalSubject assertThat(@Nullable Optional<?> target) {
                                                                 ^
4 errors
4 warnings
Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/homes/gws/jmsy/.m2/repository/com/google/re2j/re2j/1.7/re2j-1.7.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/src/main/java/com/google/common/truth/extensions/re2j/Re2jSubjects.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/src/main/java/com/google/common/truth/extensions/re2j/Re2jSubjects.java:59: warning: [purity.not.sideeffectfree.call] call to side-effecting Re2jStringSubject not allowed in side-effect-free method
            return new Re2jStringSubject(failureMetadata, target);
                   ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/src/main/java/com/google/common/truth/extensions/re2j/Re2jSubjects.java:59: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
            return new Re2jStringSubject(failureMetadata, target);
                   ^
2 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-010128-0lp9scmq/iteration0' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/homes/gws/jmsy/.m2/repository/com/google/re2j/re2j/1.7/re2j-1.7.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/src/main/java/com/google/common/truth/extensions/re2j/Re2jSubjects.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/src/main/java/com/google/common/truth/extensions/re2j/Re2jSubjects.java:59: warning: [purity.not.sideeffectfree.call] call to side-effecting Re2jStringSubject not allowed in side-effect-free method
            return new Re2jStringSubject(failureMetadata, target);
                   ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/src/main/java/com/google/common/truth/extensions/re2j/Re2jSubjects.java:59: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
            return new Re2jStringSubject(failureMetadata, target);
                   ^
2 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-010128-0lp9scmq/iteration0' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/homes/gws/jmsy/.m2/repository/com/google/re2j/re2j/1.7/re2j-1.7.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/re2j/src/main/java/com/google/common/truth/extensions/re2j/Re2jSubjects.java'

Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/com/google/protobuf/protobuf-lite/3.0.1/protobuf-lite-3.0.1.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoTruth.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoSubject.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoSubject.java:262: warning: [purity.not.sideeffectfree.call] call to side-effecting LiteProtoSubject not allowed in side-effect-free method
      return new LiteProtoSubject(failureMetadata, messageLite);
             ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoSubject.java:262: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
      return new LiteProtoSubject(failureMetadata, messageLite);
             ^
2 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-010140-e0rumiwc/iteration0' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/com/google/protobuf/protobuf-lite/3.0.1/protobuf-lite-3.0.1.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoTruth.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoSubject.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoSubject.java:262: warning: [purity.not.sideeffectfree.call] call to side-effecting LiteProtoSubject not allowed in side-effect-free method
      return new LiteProtoSubject(failureMetadata, messageLite);
             ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoSubject.java:262: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
      return new LiteProtoSubject(failureMetadata, messageLite);
             ^
2 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-010140-e0rumiwc/iteration1' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/com/google/protobuf/protobuf-lite/3.0.1/protobuf-lite-3.0.1.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoTruth.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoSubject.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoSubject.java:262: warning: [purity.not.sideeffectfree.call] call to side-effecting LiteProtoSubject not allowed in side-effect-free method
      return new LiteProtoSubject(failureMetadata, messageLite);
             ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoSubject.java:262: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
      return new LiteProtoSubject(failureMetadata, messageLite);
             ^
2 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-010140-e0rumiwc/iteration2' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/com/google/protobuf/protobuf-lite/3.0.1/protobuf-lite-3.0.1.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoTruth.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoSubject.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoSubject.java:262: warning: [purity.not.sideeffectfree.call] call to side-effecting LiteProtoSubject not allowed in side-effect-free method
      return new LiteProtoSubject(failureMetadata, messageLite);
             ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoSubject.java:262: warning: [purity.not.deterministic.object.creation] object creation not allowed in deterministic method
      return new LiteProtoSubject(failureMetadata, messageLite);
             ^
2 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-010140-e0rumiwc/iteration2' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/com/google/protobuf/protobuf-lite/3.0.1/protobuf-lite-3.0.1.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoTruth.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/src/main/java/com/google/common/truth/extensions/proto/LiteProtoSubject.java'

Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/com/google/protobuf/protobuf-java/3.24.2/protobuf-java-3.24.2.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/SubScopeId.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/DiffResult.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MapWithProtoValuesSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MapWithProtoValuesFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MultimapWithProtoValuesFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoTruthMessageDifferencer.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/package-info.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/IterableOfProtosUsingCorrespondence.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/AnyUtils.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeResult.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MultimapWithProtoValuesSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/IterableOfProtosFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoTruth.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldDescriptorValidator.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeImpl.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/RecursableDiffEntity.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogicContainer.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogic.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeUtil.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldNumberTree.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopes.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/UnknownFieldDescriptor.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScope.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/IterableOfProtosSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogicMap.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoSubject.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogic.java:374: warning: [purity.not.sideeffectfree.call] call to side-effecting join not allowed in side-effect-free method
      return String.format("FieldScopes.allowingFields(%s)", join(fieldNumbers));
                                                                 ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogic.java:403: warning: [purity.not.sideeffectfree.call] call to side-effecting join not allowed in side-effect-free method
      return String.format("FieldScopes.allowingFieldDescriptors(%s)", join(fieldDescriptors));
                                                                           ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:390: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting FluentEqualityConfig.this.formatDiff not allowed in deterministic side-effect-free method
                return FluentEqualityConfig.this.formatDiff(actual, expected);
                                                           ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:379: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ProtoTruth.assertThat(actual).usingConfig(FluentEqualityConfig.this).testIsEqualTo not allowed in deterministic side-effect-free method
                    .testIsEqualTo(expected);
                                  ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:378: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ProtoTruth.assertThat(actual).usingConfig not allowed in deterministic side-effect-free method
                    .usingConfig(FluentEqualityConfig.this)
                                ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:377: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ProtoTruth.assertThat not allowed in deterministic side-effect-free method
                return ProtoTruth.assertThat(actual)
                                            ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
6 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-010201-w_wtbrxt/iteration0' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/com/google/protobuf/protobuf-java/3.24.2/protobuf-java-3.24.2.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/SubScopeId.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/DiffResult.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MapWithProtoValuesSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MapWithProtoValuesFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MultimapWithProtoValuesFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoTruthMessageDifferencer.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/package-info.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/IterableOfProtosUsingCorrespondence.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/AnyUtils.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeResult.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MultimapWithProtoValuesSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/IterableOfProtosFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoTruth.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldDescriptorValidator.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeImpl.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/RecursableDiffEntity.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogicContainer.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogic.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeUtil.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldNumberTree.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopes.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/UnknownFieldDescriptor.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScope.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/IterableOfProtosSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogicMap.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoSubject.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogic.java:374: warning: [purity.not.sideeffectfree.call] call to side-effecting join not allowed in side-effect-free method
      return String.format("FieldScopes.allowingFields(%s)", join(fieldNumbers));
                                                                 ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogic.java:403: warning: [purity.not.sideeffectfree.call] call to side-effecting join not allowed in side-effect-free method
      return String.format("FieldScopes.allowingFieldDescriptors(%s)", join(fieldDescriptors));
                                                                           ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:390: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting FluentEqualityConfig.this.formatDiff not allowed in deterministic side-effect-free method
                return FluentEqualityConfig.this.formatDiff(actual, expected);
                                                           ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:379: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ProtoTruth.assertThat(actual).usingConfig(FluentEqualityConfig.this).testIsEqualTo not allowed in deterministic side-effect-free method
                    .testIsEqualTo(expected);
                                  ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:378: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ProtoTruth.assertThat(actual).usingConfig not allowed in deterministic side-effect-free method
                    .usingConfig(FluentEqualityConfig.this)
                                ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:377: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ProtoTruth.assertThat not allowed in deterministic side-effect-free method
                return ProtoTruth.assertThat(actual)
                                            ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
6 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-010201-w_wtbrxt/iteration1' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/com/google/protobuf/protobuf-java/3.24.2/protobuf-java-3.24.2.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/SubScopeId.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/DiffResult.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MapWithProtoValuesSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MapWithProtoValuesFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MultimapWithProtoValuesFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoTruthMessageDifferencer.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/package-info.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/IterableOfProtosUsingCorrespondence.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/AnyUtils.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeResult.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MultimapWithProtoValuesSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/IterableOfProtosFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoTruth.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldDescriptorValidator.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeImpl.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/RecursableDiffEntity.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogicContainer.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogic.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeUtil.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldNumberTree.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopes.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/UnknownFieldDescriptor.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScope.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/IterableOfProtosSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogicMap.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoSubject.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogic.java:374: warning: [purity.not.sideeffectfree.call] call to side-effecting join not allowed in side-effect-free method
      return String.format("FieldScopes.allowingFields(%s)", join(fieldNumbers));
                                                                 ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogic.java:403: warning: [purity.not.sideeffectfree.call] call to side-effecting join not allowed in side-effect-free method
      return String.format("FieldScopes.allowingFieldDescriptors(%s)", join(fieldDescriptors));
                                                                           ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:390: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting FluentEqualityConfig.this.formatDiff not allowed in deterministic side-effect-free method
                return FluentEqualityConfig.this.formatDiff(actual, expected);
                                                           ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:379: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ProtoTruth.assertThat(actual).usingConfig(FluentEqualityConfig.this).testIsEqualTo not allowed in deterministic side-effect-free method
                    .testIsEqualTo(expected);
                                  ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:378: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ProtoTruth.assertThat(actual).usingConfig not allowed in deterministic side-effect-free method
                    .usingConfig(FluentEqualityConfig.this)
                                ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:377: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ProtoTruth.assertThat not allowed in deterministic side-effect-free method
                return ProtoTruth.assertThat(actual)
                                            ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
6 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-010201-w_wtbrxt/iteration2' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/com/google/protobuf/protobuf-java/3.24.2/protobuf-java-3.24.2.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/SubScopeId.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/DiffResult.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MapWithProtoValuesSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MapWithProtoValuesFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MultimapWithProtoValuesFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoTruthMessageDifferencer.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/package-info.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/IterableOfProtosUsingCorrespondence.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/AnyUtils.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeResult.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MultimapWithProtoValuesSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/IterableOfProtosFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoTruth.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldDescriptorValidator.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeImpl.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/RecursableDiffEntity.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogicContainer.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogic.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeUtil.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldNumberTree.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopes.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/UnknownFieldDescriptor.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScope.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/IterableOfProtosSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogicMap.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoSubject.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogic.java:374: warning: [purity.not.sideeffectfree.call] call to side-effecting join not allowed in side-effect-free method
      return String.format("FieldScopes.allowingFields(%s)", join(fieldNumbers));
                                                                 ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogic.java:403: warning: [purity.not.sideeffectfree.call] call to side-effecting join not allowed in side-effect-free method
      return String.format("FieldScopes.allowingFieldDescriptors(%s)", join(fieldDescriptors));
                                                                           ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:390: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting FluentEqualityConfig.this.formatDiff not allowed in deterministic side-effect-free method
                return FluentEqualityConfig.this.formatDiff(actual, expected);
                                                           ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:379: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ProtoTruth.assertThat(actual).usingConfig(FluentEqualityConfig.this).testIsEqualTo not allowed in deterministic side-effect-free method
                    .testIsEqualTo(expected);
                                  ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:378: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ProtoTruth.assertThat(actual).usingConfig not allowed in deterministic side-effect-free method
                    .usingConfig(FluentEqualityConfig.this)
                                ^
/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java:377: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ProtoTruth.assertThat not allowed in deterministic side-effect-free method
                return ProtoTruth.assertThat(actual)
                                            ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
6 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-Aajava=/tmp/wpi-ajava-20230927-010201-w_wtbrxt/iteration2' '-classpath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/classes:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/core/target/classes:/homes/gws/jmsy/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/homes/gws/jmsy/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/homes/gws/jmsy/.m2/repository/org/ow2/asm/asm/9.5/asm-9.5.jar:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/liteproto/target/classes:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.1.2-android/guava-32.1.2-android.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/homes/gws/jmsy/.m2/repository/com/google/auto/value/auto-value-annotations/1.10.3/auto-value-annotations-1.10.3.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/homes/gws/jmsy/.m2/repository/com/google/protobuf/protobuf-java/3.24.2/protobuf-java-3.24.2.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/classes' '-sourcepath' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java:/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/target/generated-sources/annotations' '-g' '--release' '8' '--release' '8' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/SubScopeId.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/DiffResult.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MapWithProtoValuesSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MapWithProtoValuesFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MultimapWithProtoValuesFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoTruthMessageDifferencer.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/package-info.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/IterableOfProtosUsingCorrespondence.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/AnyUtils.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeResult.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/MultimapWithProtoValuesSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/IterableOfProtosFluentAssertion.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoTruth.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldDescriptorValidator.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeImpl.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FluentEqualityConfig.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/RecursableDiffEntity.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogicContainer.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogic.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoSubjectBuilder.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeUtil.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldNumberTree.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopes.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/UnknownFieldDescriptor.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScope.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/IterableOfProtosSubject.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogicMap.java' '/scratch/jmsy/outdir/truth-49757f9e96ef6c2b570f6ba8ccee94d0485b2342/truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/ProtoSubject.java'

Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
