Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-classpath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-api/0.5.0/commons-rdf-api-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-simple/0.5.0/commons-rdf-simple-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.1-jre/guava-32.0.1-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.8.0/checker-qual-3.8.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.5.1/error_prone_annotations-2.5.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/guice/5.0.1/guice-5.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/extensions/guice-assistedinject/5.0.1/guice-assistedinject-5.0.1.jar:/homes/gws/jmsy/.m2/repository/io/github/solf/nullanno/3.0.0/nullanno-3.0.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/io/mikael/urlbuilder/2.0.9/urlbuilder-2.0.9.jar:/homes/gws/jmsy/.m2/repository/org/locationtech/proj4j/proj4j/1.1.1/proj4j-1.1.1.jar:/homes/gws/jmsy/.m2/repository/commons-codec/commons-codec/1.14/commons-codec-1.14.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.2/jackson-core-2.13.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.4.2/jackson-databind-2.13.4.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.2/jackson-annotations-2.13.2.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model/4.2.4/rdf4j-model-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-api/4.2.4/rdf4j-model-api-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-annotation/4.2.4/rdf4j-common-annotation-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-vocabulary/4.2.4/rdf4j-model-vocabulary-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-exception/4.2.4/rdf4j-common-exception-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-text/4.2.4/rdf4j-common-text-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-io/4.2.4/rdf4j-common-io-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-util/4.2.4/rdf4j-common-util-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-iterator/4.2.4/rdf4j-common-iterator-4.2.4.jar:/homes/gws/jmsy/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes' '-sourcepath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java:/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations' '-g' '--release' '11' '--release' '11' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBNonStrictEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCaseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBHashFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotYetTypedEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/CompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/LinearInclusionDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSampleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/VariableOrGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBStdevFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/EmptyQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NowSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFDatatypeStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/UnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidQueryNodeException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/NaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AttributeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RegexSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConstructionSubstitutionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/WKTLiteralValue.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonPostProcessedSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBoundaryFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRISafenessDeclarationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/QueryRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolSerializer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NonStrictEqSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UnsupportedRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeInference.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BoundSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQTreeTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/ExpressionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/TemplateParser.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalInequalityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsLiteralSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/ObjectStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DatabaseInfoSupplier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StartsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsStringEmptyFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/LeafIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractSubStrSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrBeforeOrAfterFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphism.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidOntopConfigurationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/UOM.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractNamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/IQVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderComparatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedBinaryMathOperationTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/VariableNullability.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReduciblePositiveAritySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/VariableImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/AbstractPredicateExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/LowerCaseDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRIStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/TrueNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeAncestry.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DivideSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/NonDeterministicDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FlattenNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNumberNormAsBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/CompositeIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FlattenNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTimeTzNormalizationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalAndSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/DefPushDownRequestImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ExtractLexicalTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/TriplePredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DBParameters.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDateInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofDoubleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/SimpleRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenElseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/QueryTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/DistinctNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnsatisfiableConditionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MetadataExtractionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/AbstractExpressionTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/TemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GreaterThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnSimpleBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/DefinitionPushDownRequest.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EqFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DateTruncSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OFN.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidIntermediateQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfTouchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfWithinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ZeroAryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/TriplePredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/NumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFTermTypeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/ArgumentSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeSubstitutionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBGroupConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ConstructionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/Template.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/JsonDBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypeFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/QuotedIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/IRITermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/TypeConstantDictionary.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MultitypedInputUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLangTagLikeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractBinaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/FunctionalTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoveredByFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Attribute.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/FalseOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryNumericLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/PartiallyTypedSimpleCastTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BooleanDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Nullifiers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/EmptyNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Constant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhOverlapFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/SQLStandardQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/QueryRenamerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSimilarToFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/BinaryNonCommutativeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/StandardNotationDBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImplUsingRelate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRIStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DateDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtendedProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIfDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQSyntacticContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractSimpleMultitypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MockupDBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/LanguageTag.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/PredicateConstants.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioNonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/VarianceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/NotRequiredVariableRemover.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SameTermSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfIntersectsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/RDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioArrayAccessDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractIsASPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/DistinctNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBVarianceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RDFAtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConstructionSubstitutionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EBVSPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IriSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/EmptyNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelSettings.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDefaultInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BlankNodeTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExplicitVariableProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/SliceNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBSumFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEO.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrUUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictNumericEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/AggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnMultitypedInputBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSymDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DistinctVariableOnlyDataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryStringSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/NoNullValuesEnforcerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/QueryTransformerFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimpleTypedDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFLiteralConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IndexInFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFLiteralConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/ConversionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/PartiallyTypedSimpleCastTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UUIDDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBnodeSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/ObjectTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalNonStrictEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/IDGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha384SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/StringUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullToleratingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/Predicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/CoreUtilsFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/QuadPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableExpression.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrlenSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryModifierNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QualifiedAttributeID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/Ontop.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBufferFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractUnaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha256SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEOF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/LangSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OntopInternal.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNodeVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/OfflineMetadataProviderBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/SingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryBooleanSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofIntersectionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsARDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/InjectiveSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ImmutableMetadata.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/OrderByNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalLangMatchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfOverlapsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/MetaRDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RelationIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofConvexHullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRISafenessDeclarationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/DBConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/AGG.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBTypeConversionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GroupConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrBeforeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDatetimeInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypePropagationSubstitutionHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/ChildTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ForcingFloatingDBAvgFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/Substitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangMatchesSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/QuadPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQContainmentCheckUnderLIDs.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBCountFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/FunctionalDependencyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha512SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLexicalNonStrictEqOrInequalityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/AggregationNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/DBConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/AggregationNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/RDFAtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ValuesNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDefaultEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/BNodeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/LinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RandSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBArrayObjectAccessFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryBooleanOperatorSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IRIConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SQLServerDBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDF2DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XSD.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundTermTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFTermTypeConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/LegacyVariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateMFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8DcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/R2RMLIRISafeEncoder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDistanceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/IntensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/AbstractTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DelegatingMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalOrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrAfterSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NumericBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Serializers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/GenericDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NativeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/BasicSingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/BnodeStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIRIFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBRegexMatchAsLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/CoreSingletons.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NullConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrAfterFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha1SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/TrueNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonVariableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ConcreteNumericRDFDatatypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/AttributeNotFoundException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Lens.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/ConcreteIQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNumericInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MinorOntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/InnerJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/NoNullValueEnforcer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/WrappedDBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIntegerFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TrueOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Variable.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EndsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/NotYetTypedEqualityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhMeetFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/InequalityLabel.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/VariableNonRequirement.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/CompositeQueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/OntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDateEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/BasicLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMaxFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/BNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictNEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/FunctionalDependency.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/BnodeTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IfSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/VariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ConcreteNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ForeignKeyConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofWKTFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictStringEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AreCompatibleRDFStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/UniqueConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISODenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/InjectiveSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryCastDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/FunctionalTermSimplification.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoversFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XPathFunction.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsBlankSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/OrderByNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/LeftJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/QueryNodeRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrEndsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8PoFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AggregationSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Md5SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/IntensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/StringDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReplaceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/BooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/ProjectionDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIsNullOrNotFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/NamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBAvgFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedEqualityTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RelationPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MetaRDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/IRITemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ObjectConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsIRISPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonConstantTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr3SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBTypeConversionFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DenodoDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractHashSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr2SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/DistinctNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelConfiguration.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/TermNullabilityEvaluator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CoalesceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermTypeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/EqualsTrueDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FilterNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryModifierNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DistinctVariableOnlyDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/ExpressionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LessThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEnvelopeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/CachingMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BnodeStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/HomogeneousIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISONormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AvgSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SimpleUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryNonCommutativeOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofUnionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/LexicalSpace.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/CoreSingletonsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CountSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StdevSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrBeforeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/SPARQL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDatetimeEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNonDeterministicNullaryFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryComparisonSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/FullLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/NotRequiredVariableRemoverImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/UnaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RawQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IncrementalEvaluation.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/node/HomogeneousQueryNodeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/PredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullRejectingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StringBooleanBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractArgDependentTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TemporaryDBTypeConversionToStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/RelationExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ContainsSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/ImmutableTermsSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DatatypeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/IllegalTreeUpdateException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/NativeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/VariableGeneratorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IRIConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhInsideFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStrBeforeOrAfterSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OWL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfCrossesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStringInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/RelationNotFoundInMetadataException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTree2NativeNodeGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/FunctionalDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagWithPlaceholderFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDFS.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/TermNullabilityEvaluatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/LazyRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/TrueOrNullFunctionSymbol.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java:60: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream);
	                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java:15: warning: [optional.collection] Don't use Optional to wrap a collection type.
    Optional<ImmutableList<DBConstant>> decompose(DBConstant stringConstant);
                                        ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:92: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(term + " was expected to be " +
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:111: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The evaluation was expected " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:150: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(0) + " was expected to be " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:162: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(2*i) + " was expected to be " +
                                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:219: warning: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:364: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("Was expected to find this function symbol at the indicated position"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java:32: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator);
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java:37: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        i -> Optional.<T>ofNullable(argumentMap1.get(i)).orElseGet(() -> argumentMap2.get(i))));
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    JoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java:50: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild, VariableGenerator variableGenerator);
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java:16: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java:13: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    CommutativeJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<TermType> inferOutputType(Optional<TermType> extractSingleTermType);
                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:25: warning: [purity.not.sideeffectfree.call] call to side-effecting getID not allowed in side-effect-free method
        return "CREATE VIEW " + getID() + " (\n   " +
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:28: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map(Attribute::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:27: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map not allowed in side-effect-free method
                        .map(Attribute::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:26: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream not allowed in side-effect-free method
                getAttributes().stream()
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:26: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes not allowed in side-effect-free method
                getAttributes().stream()
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:28: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java:18: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String dbVersion;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Supplier<Injector> injectorSupplier;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Injector injector;
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:139: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Boolean> testMode = Optional.empty();
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:141: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Properties> inputProperties = Optional.empty();
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:42: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode createInnerJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:46: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode createLeftJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:52: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                  Optional<Variable> indexVariable, DBTermType dbTermType);
                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java:115: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnsupportedOperationException("No @IDFactoryType annotation found"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter((o)->(o instanceof TermType)).map((o)->(TermType)o).filter not allowed in deterministic side-effect-free method
                .filter(o -> o.toString().equals(toString()))
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:74: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter((o)->(o instanceof TermType)).map not allowed in deterministic side-effect-free method
                .map(o -> (TermType) o)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:73: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter not allowed in deterministic side-effect-free method
                .filter(o -> (o instanceof TermType))
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:72: warning: [purity.not.deterministic.call] call to non-deterministic method Optional.ofNullable not allowed in deterministic method
        return Optional.ofNullable(other)
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.call] call to non-deterministic method o.toString not allowed in deterministic method
                .filter(o -> o.toString().equals(toString()))
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
                .filter(o -> o.toString().equals(toString()))
                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:86: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final IRI functionIRI;
                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:21: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:83: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> condition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:96: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                        Optional<ImmutableExpression> condition, IQTree child) {
                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:226: warning: [method.invocation] call to get() not allowed on the given receiver.
                            .map(c -> termFactory.getConjunction(condition.get(), c))
                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:68: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<OrderByNode> orderByNode;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State(ImmutableList<UnaryOperatorNode> ancestors, Optional<OrderByNode> orderByNode, IQTree child,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:87: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentOrderByAndChild(UnaryOperatorNode newParent, Optional<OrderByNode> newOrderByNode, IQTree newChild) {
                                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:19: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:90: warning: [optional.collection] Don't use Optional to wrap a collection type.
                ? Optional.of(ImmutableList.of(termFactory.getDBConstant(cst.getValue(), inputType)))
                ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java:26: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTopPropagatedNumericTypeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:84: warning: [purity.not.sideeffectfree.call] call to side-effecting ImmutableSet.of not allowed in side-effect-free method
            return ImmutableSet.of(
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:85: warning: [purity.not.sideeffectfree.call] call to side-effecting AbstractMap.SimpleImmutableEntry<> not allowed in side-effect-free method
                    new AbstractMap.SimpleImmutableEntry<>(false, forFalse),
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:86: warning: [purity.not.sideeffectfree.call] call to side-effecting AbstractMap.SimpleImmutableEntry<> not allowed in side-effect-free method
                    new AbstractMap.SimpleImmutableEntry<>(true, forTrue)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java:132: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<ArgumentMapUnifier<T>> optional;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private Optional<Substitution<T>> optionalSubstitution;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:62: warning: [method.invocation] call to get() not allowed on the given receiver.
        T term2 = operations.applyToTerm(optionalSubstitution.get(), t2);
                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:90: warning: [method.invocation] call to get() not allowed on the given receiver.
                optionalSubstitution = Optional.of(operations.compose(s, optionalSubstitution.get()));
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on(", ").withKeyValueSeparator("/").join not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on(", ").withKeyValueSeparator not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:89: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Unexpected empty disjunction"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:99: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The first argument of a IF_ELSE_NULL must be an expression"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<ImmutableExpression> leftJoinExpression,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:60: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:68: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL distinct aggregate function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:102: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:128: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:135: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            ImmutableMap<ConcreteNumericRDFDatatype, Variable> numericSubTermVarMap, Optional<Variable> optionalIncompatibleCountVariable,
                                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:136: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleSubVariable, TermFactory termFactory) {
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)))
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:155: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java:173: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    static Optional<IRI> tryExtractSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:169: warning: [method.invocation] call to get() not allowed on the given receiver.
                                                    ? extractConstantWKTLiteralValue(termFactory, subterm).get()
                                                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:33: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit name: " + name));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:40: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit iri: " + iri));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderComparatorImpl.java:35: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((OrderByNode.OrderComparator)other).getTerm not allowed in deterministic side-effect-free method
                && ((OrderByNode.OrderComparator) other).getTerm().equals(term)
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderComparatorImpl.java:36: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((OrderByNode.OrderComparator)other).isAscending not allowed in deterministic side-effect-free method
                && ((OrderByNode.OrderComparator) other).isAscending() == isAscending;
                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/VariableImpl.java:107: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting other.getName not allowed in deterministic side-effect-free method
		return name.compareTo(other.getName());
		                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:80: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:107: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The order by was expected to be kept"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java:59: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("A simplified expression was expected"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append("=").append(r).append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append("=").append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting r.getAllIDs not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:32: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
        bf.append("\n====== constraints ==========\n");
                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:34: warning: [purity.not.sideeffectfree.call] call to side-effecting r.getUniqueConstraints not allowed in side-effect-free method
            for (UniqueConstraint uc : r.getUniqueConstraints())
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:35: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(uc).append not allowed in side-effect-free method
                bf.append(uc).append(";\n");
                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:35: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
                bf.append(uc).append(";\n");
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:36: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:37: warning: [purity.not.sideeffectfree.call] call to side-effecting r.getForeignKeys not allowed in side-effect-free method
            for (ForeignKeyConstraint fk : r.getForeignKeys())
                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:38: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(fk).append not allowed in side-effect-free method
                bf.append(fk).append(";\n");
                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:38: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
                bf.append(fk).append(";\n");
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:39: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:27: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
        StringBuilder bf = new StringBuilder();
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java:115: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
        private final ImmutableExpression expression;
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:99: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(functionSymbol.toString());
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:100: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append("(");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream().map(ImmutableTerm::toString).collect not allowed in side-effect-free method
                    .collect(Collectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream().map not allowed in side-effect-free method
                    .map(ImmutableTerm::toString)
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:102: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream not allowed in side-effect-free method
            List<String> argumentStrings = terms.stream()
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                    .collect(Collectors.toList());
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:106: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(String.join(",", argumentStrings));
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:107: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(")");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:108: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = sb.toString();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:98: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
            StringBuilder sb = new StringBuilder();
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:120: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
            return toString().equals(other.toString());
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:120: warning: [purity.not.deterministic.call] call to non-deterministic method other.toString not allowed in deterministic method
            return toString().equals(other.toString());
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:127: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java:133: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("Arity > 1 was expected"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:49: warning: [purity.not.deterministic.not.sideeffectfree.assign.field] field assignment not allowed in deterministic side-effect-free method
            next = shift();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:49: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting shift not allowed in deterministic side-effect-free method
            next = shift();
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:50: warning: [purity.not.deterministic.not.sideeffectfree.assign.field] field assignment not allowed in deterministic side-effect-free method
            movedToNext = true;
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/DefPushDownRequestImpl.java:63: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting that.getNewVariable not allowed in deterministic side-effect-free method
        return Objects.equals(newVariable, that.getNewVariable()) &&
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/DefPushDownRequestImpl.java:64: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting that.getDefinitionWhenConditionSatisfied not allowed in deterministic side-effect-free method
                Objects.equals(definition, that.getDefinitionWhenConditionSatisfied()) &&
                                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/DefPushDownRequestImpl.java:65: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting that.getCondition not allowed in deterministic side-effect-free method
                Objects.equals(condition, that.getCondition());
                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:22: warning: [purity.not.sideeffectfree.call] call to side-effecting getID not allowed in side-effect-free method
        return "CREATE TABLE " + getID() + " (\n   " +
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:25: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map(Attribute::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:24: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map not allowed in side-effect-free method
                        .map(Attribute::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:23: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream not allowed in side-effect-free method
                getAttributes().stream()
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:23: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes not allowed in side-effect-free method
                getAttributes().stream()
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:25: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:108: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> ljCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:114: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                     Optional<ImmutableExpression> ljCondition,
                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:126: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       IQTree initialRightChild, Optional<ImmutableExpression> ljCondition,
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:131: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private LJNormalizationState updateConditionAndRightChild(Optional<ImmutableExpression> newLJCondition,
                                                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:141: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                UnaryOperatorNode newParent, Optional<ImmutableExpression> newLJCondition, IQTree newRightChild) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:146: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:158: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:322: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> ljCondition, Substitution<ImmutableTerm> naiveAscendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:470: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        provenanceVariable.orElseThrow(() -> new MinorOntopInternalBugException("An entry was expected")),
                                                      ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:657: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<Variable> rightProvenanceVariable, ImmutableSet<Variable> leftVariables) {
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:667: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                              Optional<Variable> defaultRightProvenanceVariable) {
                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:678: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("A default provenance variable was needed"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                         Optional<ImmutableExpression> initialJoiningCondition,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                  Optional<ImmutableExpression> newCondition,
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                      Optional<ImmutableExpression> joiningCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ConstructionNode childConstructionNode;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:153: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A lifted construction node was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:69: warning: [method.invocation] call to get() not allowed on the given receiver.
        return getOptionalFilterCondition().get();
                                               ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:201: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getFilterCondition not allowed in deterministic side-effect-free method
        return getFilterCondition().hashCode();
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:208: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getFilterCondition not allowed in deterministic side-effect-free method
                && getFilterCondition().equals(((FilterNode) o).getFilterCondition());
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:208: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((FilterNode)o).getFilterCondition not allowed in deterministic side-effect-free method
                && getFilterCondition().equals(((FilterNode) o).getFilterCondition());
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:213: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return FILTER_NODE_STR + getOptionalFilterString();
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:228: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalFilterCondition;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinOrFilterNodeImpl(Optional<ImmutableExpression> optionalFilterCondition,
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java:22: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nonRequiredVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFTermTypeConstantImpl.java:48: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((RDFTermTypeConstant)other).getRDFTermType not allowed in deterministic side-effect-free method
                && rdfTermType.equals(((RDFTermTypeConstant) other).getRDFTermType());
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFTermTypeConstantImpl.java:53: warning: [purity.not.sideeffectfree.call] call to side-effecting getValue not allowed in side-effect-free method
        return getValue();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:273: warning: [method.invocation] call to get() not allowed on the given receiver.
                        return attemptUnifying(term1, term2).get();
                                                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/QuotedIDImpl.java:83: warning: [purity.not.sideeffectfree.call] call to side-effecting getSQLRendering not allowed in side-effect-free method
        return getSQLRendering();
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:142: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:170: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:184: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:67: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:69: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:76: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:179: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent Boolean>
  required: @MaybePresent Optional<@MaybePresent Boolean>
  Consequence: method in @MaybePresent Optional<@MaybePresent Boolean>
    @MaybePresent Boolean get(@Present Optional<@MaybePresent Boolean> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean>
    @MaybePresent Boolean apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean> this, @MaybePresent Optional<@MaybePresent Boolean> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:63: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:65: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:72: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:151: warning: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .map(oe -> oe
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:53: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(variableGenerator::generateNewVariable))
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:59: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public static IQTree toIQTree(ImmutableList<? extends IQTree> extensionalNodes, Optional<ImmutableExpression> joiningConditions,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:122: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return getExtensionalDataNodes(tree.getChildren().get(0), coreSingletons);
                                          ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:125: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of((ExtensionalDataNode)tree));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:128: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of());
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:131: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of(convertIntoExtensionalDataNode((ValuesNode) node, coreSingletons)));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:135: warning: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:141: warning: [optional.collection] Don't use Optional to wrap a collection type.
        return Optional.empty();
                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
            return ((FilterNode)tree.getRootNode()).getOptionalFilterCondition().get().flattenAND()
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java:67: warning: [method.invocation] call to get() not allowed on the given receiver.
                    dbFunctionSymbolFct.apply(dbTypeFactory.getDBStringType()).get(), subLexicalTerms.get(0));
                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:134: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("groups must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:266: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("An expression was expected"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:372: warning: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> ucsPartitionedByDisjointness.get(true).stream().noneMatch(set -> set.size() == 1 && set.stream().findFirst().get().equals(v)))
                                                                                                                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:405: warning: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> fdsPartitionedByDisjointness.get(true).stream().noneMatch(entry -> entry.getKey().size() == 1 && entry.getKey().stream().findFirst().get().equals(v)))
                                                                                                                                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:510: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:663: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .flatMap(t -> t);
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:767: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new QueryNodeSubstitutionException("The descending substitution " + mergedSubstitution
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:130: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expecting " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:222: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:228: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("cannot be empty because there is at least one variable in the templates (taken together)"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:413: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern injectivePattern; // lazy initalization
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:474: warning: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java:87: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern pattern;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:51: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                          Optional<ImmutableExpression> constraint,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:133: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(ConstructionNodeImpl.EmptyTreeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:288: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        v -> getDeterminedBy(Optional.ofNullable(substitution.get(v)).orElse(v), variableNullability)
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:592: warning: [optional.field] Don't use Optional as the type of a field.
        public final Optional<ImmutableExpression> filter;
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:597: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                          Optional<ImmutableExpression> newF) {
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java:21: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ImmutableExpression simplifiedExpression;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableGenerator variableGenerator;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java:105: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java:54: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:164: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get))
                             ^
  found   : @Present Optional<@MaybePresent DefinitionPushDownRequest>
  required: @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
  Consequence: method in @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest get(@Present Optional<@MaybePresent DefinitionPushDownRequest> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest> this, @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:202: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Substitution<ImmutableFunctionalTerm> computeSubstitution(Optional<Variable> optionalNumAvgVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalNumSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:204: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleCountVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:213: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, createAggregate(xsdDecimal, optionalNumSubVariable.get(), termFactory)));
                                                                                                       ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:219: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)));
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:236: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableFunctionalTerm computeLiftableTerm(Optional<Variable> optionalNumAvgVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:238: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:253: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeLexicalTerm(Optional<Variable> optionalFloatingAggVariable,
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                             Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:275: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeTypeTerm(Optional<Variable> optionalNumAvgVariable,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:277: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                          Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private]
    private IQ iq;
               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java:64: warning: [purity.not.sideeffectfree.call] call to side-effecting getID not allowed in side-effect-free method
        return "Lens " + getID();
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:11: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<DBTermType> itemType;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:18: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ArrayDBTermType(String arrayStr, TermTypeAncestry ancestry, Optional<DBTermType> itemType, ArrayTypeFromSignature parsingFunction) {
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:65: warning: [method.invocation] call to get() not allowed on the given receiver.
        return ImmutableList.of(this.itemType.get());
                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java:25: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(t -> t.negate(termFactory))).get();
                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:120: warning: [method.invocation] call to get() not allowed on the given receiver.
                                .get(),
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:125: warning: [method.invocation] call to get() not allowed on the given receiver.
                                .get()))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java:95: warning: [method.invocation] call to get() not allowed on the given receiver.
                        e -> e.getValue().get()));
                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2056: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(() -> getDBCastFunctionSymbol(inputType, dbStringType)));
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2073: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(() -> getDBCastFunctionSymbol(dbStringType, targetDBType));
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:48: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The first term of an IF_ELSE_NULL " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:68: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Inconsistent evaluation"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The first term in ifElseNullTerms was expected " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:177: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expected an immutable expression as first term"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:200: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("was expected an ImmutableExpression as first sub-term"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:235: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("Wrong index"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> definedVariable) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:121: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<Substitution<ImmutableTerm>> substitution;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:83: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:94: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("otherTerms must be non-empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:100: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                         Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java:74: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> knownVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:40: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:116: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = printSubtree(this, "");
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:116: warning: [purity.not.sideeffectfree.call] call to side-effecting printSubtree not allowed in side-effect-free method
            string = printSubtree(this, "");
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:142: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:188: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<ImmutableExpression> normalizeConstraint(Optional<ImmutableExpression> constraint,
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:206: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                 Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator);
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QualifiedAttributeID.java:78: warning: [purity.not.sideeffectfree.call] call to side-effecting getSQLRendering not allowed in side-effect-free method
		return getSQLRendering();
		                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:39: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Long limit;
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:228: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("There should be one child"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:235: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one child expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:337: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RelationIDImpl.java:60: warning: [purity.not.sideeffectfree.call] call to side-effecting getSQLRendering not allowed in side-effect-free method
        return getSQLRendering();
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/DBConstantImpl.java:68: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((DBConstant)other).getValue not allowed in deterministic side-effect-free method
                    ((DBConstant) other).getValue().equals(this.value));
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IRIConstantImpl.java:68: warning: [purity.not.sideeffectfree.call] call to side-effecting iri.getIRIString not allowed in side-effect-free method
		return "<" + iri.getIRIString() + ">";
		                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java:61: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting otherType.getLanguageTag().filter not allowed in deterministic side-effect-free method
                    .filter(langTag::equals)
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java:60: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting otherType.getLanguageTag not allowed in deterministic side-effect-free method
            return otherType.getLanguageTag()
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java:69: warning: [purity.not.sideeffectfree.call] call to side-effecting langTag.getFullString not allowed in side-effect-free method
        return "@" + langTag.getFullString();
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java:35: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  required: @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  Consequence: method in @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> get(@Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>> this, @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nullableVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:36: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableMap<Variable, Integer> variableMap;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/IntensionalDataNodeImpl.java:106: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getProjectionAtom not allowed in deterministic side-effect-free method
        return getProjectionAtom().hashCode();
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/IntensionalDataNodeImpl.java:113: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getProjectionAtom not allowed in deterministic side-effect-free method
                && getProjectionAtom().equals(((IntensionalDataNode) obj).getProjectionAtom());
                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/IntensionalDataNodeImpl.java:113: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((IntensionalDataNode)obj).getProjectionAtom not allowed in deterministic side-effect-free method
                && getProjectionAtom().equals(((IntensionalDataNode) obj).getProjectionAtom());
                                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/IntensionalDataNodeImpl.java:118: warning: [purity.not.sideeffectfree.call] call to side-effecting getProjectionAtom not allowed in side-effect-free method
        return INTENSIONAL_DATA_NODE_STR + " " + getProjectionAtom();
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:183: warning: [purity.not.sideeffectfree.call] call to side-effecting ((NamedRelationDefinition)attributes.get(0).getRelation()).getID not allowed in side-effect-free method
        return "ALTER TABLE " + ((NamedRelationDefinition)attributes.get(0).getRelation()).getID() +
                                                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:183: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.get(0).getRelation not allowed in side-effect-free method
        return "ALTER TABLE " + ((NamedRelationDefinition)attributes.get(0).getRelation()).getID() +
                                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:189: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map(Attribute::getID).map(QuotedID::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:188: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map(Attribute::getID).map not allowed in side-effect-free method
                        .map(QuotedID::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:187: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map not allowed in side-effect-free method
                        .map(Attribute::getID)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:186: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream not allowed in side-effect-free method
                attributes.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:189: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java:28: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTermTypeOriginException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:71: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new UnknownClassException(String.format(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnknownClassException(String.format(
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:109: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> joiningCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:115: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                      Optional<ImmutableExpression> joiningCondition, VariableGenerator variableGenerator,
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:128: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        public State(ImmutableList<IQTree> children, Optional<ImmutableExpression> joiningCondition,
                                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateConditionAndChildren(Optional<ImmutableExpression> newCondition,
                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:148: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentConditionAndChildren(UnaryOperatorNode newParent, Optional<ImmutableExpression> newCondition,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> notNormalizedCondition, Substitution<ImmutableTerm> ascendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:452: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get);
                         ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:505: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<ImmutableExpression> condition;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:141: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final FilterNode sampleFilter;
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:143: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final ConstructionNode childConstructionNode;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:298: warning: [method.invocation] call to get() not allowed on the given receiver.
                    s -> newAggregationSubstitution.compose(substitutionFactory.getSubstitution(sampleVariable.get(), termFactory.getDBSample(termFactory.getDBIntegerConstant(1), termFactory.getTypeFactory().getDBTypeFactory().getDBLargeIntegerType())))
                                                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:12: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalExpression;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitutionImpl(Optional<ImmutableExpression> optionalExpression,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:48: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:52: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:56: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:60: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:64: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:147: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = determinants.stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:149: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:155: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#05 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm>
    capture#06 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:213: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  required: @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> get(@Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>> this, @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:220: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = uniqueConstraint.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:222: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:225: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.empty();
                                 ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:228: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#07 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm>
    capture#08 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:239: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:245: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> determinants = functionalDependency.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:247: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:249: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> dependents = functionalDependency.getDependents().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:251: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:258: warning: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#09 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm>
    capture#010 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:264: warning: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#011 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm>
    capture#012 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:308: warning: [purity.not.sideeffectfree.call] call to side-effecting relationDefinition.getAtomPredicate().getName not allowed in side-effect-free method
                relationDefinition.getAtomPredicate().getName(),
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:308: warning: [purity.not.sideeffectfree.call] call to side-effecting relationDefinition.getAtomPredicate not allowed in side-effect-free method
                relationDefinition.getAtomPredicate().getName(),
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:311: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream().map((e)->e.getKey() + ":" + e.getValue()).collect not allowed in side-effect-free method
                .collect(Collectors.joining(",")));
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:310: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream().map not allowed in side-effect-free method
                .map(e -> e.getKey() + ":" + e.getValue())
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:309: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream not allowed in side-effect-free method
                argumentMap.entrySet().stream()
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:311: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                .collect(Collectors.joining(",")));
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:20: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:113: warning: [method.invocation] call to get() not allowed on the given receiver.
                        otherExpressionBuilder.add(evaluation.getNewExpression().get());
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:151: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("expressions must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:255: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:333: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type to compare with was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream().map(FunctionalDependency::toString).collect not allowed in side-effect-free method
                .collect(ImmutableCollectors.toList())));
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:75: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream().map not allowed in side-effect-free method
                .map(FunctionalDependency::toString)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:74: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream not allowed in side-effect-free method
        return String.format("[%s]", String.join("; ", dependencies.stream()
                                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting ImmutableCollectors.toList not allowed in side-effect-free method
                .collect(ImmutableCollectors.toList())));
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:153: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.stream().reduce not allowed in deterministic side-effect-free method
                .reduce(0, (sum, n) -> sum ^ n.hashCode(), Integer::sum);
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:152: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.stream not allowed in deterministic side-effect-free method
        return dependencies.stream()
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:206: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream().map(Variable::toString).collect not allowed in side-effect-free method
                                    .collect(Collectors.toList())),
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:205: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream().map not allowed in side-effect-free method
                                    .map(Variable::toString)
                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:204: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream not allowed in side-effect-free method
                            String.join(", ", determinants.stream()
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:206: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                                    .collect(Collectors.toList())),
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:209: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream().map(Variable::toString).collect not allowed in side-effect-free method
                                    .collect(Collectors.toList()))
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:208: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream().map not allowed in side-effect-free method
                                    .map(Variable::toString)
                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:207: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream not allowed in side-effect-free method
                            String.join(", ", dependents.stream()
                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:209: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                                    .collect(Collectors.toList()))
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:42: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
	private final DBConstant doubleNaN;
	                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:214: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	public Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream) {
	                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:40: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<Variable> indexVariable;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:47: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                            @Assisted Optional<Variable> indexVariable,
                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:82: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<TermType> inferOutputType(Optional<TermType> flattenedVarType) {
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:131: warning: [purity.not.sideeffectfree.call] call to side-effecting indexVariable.map not allowed in side-effect-free method
                indexVariable.map(v -> ", " + v + "/indexIn(" + flattenedVariable + ")").orElse("") +
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:147: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                               Optional<ImmutableExpression> constraint, IQTree child,
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                (c, s, constraint, vGenerator) -> c.applyDescendingSubstitutionWithoutOptimizing(s, vGenerator));
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:236: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(constraint -> Stream.concat(constraint.stream(), Stream.of(indexVariable.get()))
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:406: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                     Optional<ImmutableExpression> optionalConstraint, VariableGenerator variableGenerator);
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java:124: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinLikeNodeImpl(Optional<ImmutableExpression> optionalJoinCondition,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java:107: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:29: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("BooleanDBIfElseNullFunctionSymbol was " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:69: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Was an expected an immutable expression " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:388: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:391: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:433: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A projected variable was expected as argument"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:485: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  required: @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> get(@Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>> this, @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:627: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream().map((tuple)->tuple.stream().map(String::valueOf).collect(Collectors.joining(",", " (", ")"))).collect not allowed in side-effect-free method
                .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream().map not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:626: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream().map(String::valueOf).collect not allowed in side-effect-free method
                .collect(Collectors.joining(","," (",")")))
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:625: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream().map not allowed in side-effect-free method
                .map(String::valueOf)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:626: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                .collect(Collectors.joining(","," (",")")))
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java:13: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<String> optionalSuffix;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java:74: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((LanguageTag)other).getFullString not allowed in deterministic side-effect-free method
            return fullString.equals(((LanguageTag) other).getFullString());
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable boundVariable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java:44: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<String> getSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting relation.getID().getSQLRendering not allowed in side-effect-free method
        return "ALTER TABLE " + relation.getID().getSQLRendering() +
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting relation.getID not allowed in side-effect-free method
        return "ALTER TABLE " + relation.getID().getSQLRendering() +
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:156: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map((c)->c.getAttribute().getID().toString()).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:155: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map not allowed in side-effect-free method
                        .map(c -> c.getAttribute().getID().toString())
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:154: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream not allowed in side-effect-free method
                components.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:155: warning: [purity.not.sideeffectfree.call] call to side-effecting c.getAttribute().getID not allowed in side-effect-free method
                        .map(c -> c.getAttribute().getID().toString())
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:155: warning: [purity.not.sideeffectfree.call] call to side-effecting c.getAttribute not allowed in side-effect-free method
                        .map(c -> c.getAttribute().getID().toString())
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:156: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting referencedRelation.getID().getSQLRendering not allowed in side-effect-free method
                ") REFERENCES " + referencedRelation.getID().getSQLRendering() +
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting referencedRelation.getID not allowed in side-effect-free method
                ") REFERENCES " + referencedRelation.getID().getSQLRendering() +
                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:161: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map((c)->c.getReferencedAttribute().getID().toString()).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:160: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map not allowed in side-effect-free method
                        .map(c -> c.getReferencedAttribute().getID().toString())
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:159: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream not allowed in side-effect-free method
                components.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:160: warning: [purity.not.sideeffectfree.call] call to side-effecting c.getReferencedAttribute().getID not allowed in side-effect-free method
                        .map(c -> c.getReferencedAttribute().getID().toString())
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:160: warning: [purity.not.sideeffectfree.call] call to side-effecting c.getReferencedAttribute not allowed in side-effect-free method
                        .map(c -> c.getReferencedAttribute().getID().toString())
                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:161: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
            return toString().equals(other.toString());
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method other.toString not allowed in deterministic method
            return toString().equals(other.toString());
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:87: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:97: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(predicate.toString());
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:98: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append("(");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:101: warning: [purity.not.sideeffectfree.call] call to side-effecting arguments.stream().map not allowed in side-effect-free method
                    .map(VariableOrGroundTerm::toString);
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:100: warning: [purity.not.sideeffectfree.call] call to side-effecting arguments.stream not allowed in side-effect-free method
            Stream<String> argumentStrings = arguments.stream()
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentStrings.collect not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(")");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:105: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = sb.toString();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:96: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
            StringBuilder sb = new StringBuilder();
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:50: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
            return optionalMergedTypeConstant.orElseThrow(() ->
                                                         ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:75: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:48: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private LeftJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalJoinCondition,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:100: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getOptionalFilterCondition not allowed in deterministic side-effect-free method
        return getOptionalFilterCondition().hashCode();
                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:107: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getOptionalFilterCondition not allowed in deterministic side-effect-free method
                && getOptionalFilterCondition().equals(((LeftJoinNode) obj).getOptionalFilterCondition());
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:107: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((LeftJoinNode)obj).getOptionalFilterCondition not allowed in deterministic side-effect-free method
                && getOptionalFilterCondition().equals(((LeftJoinNode) obj).getOptionalFilterCondition());
                                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:112: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return LEFT_JOIN_NODE_STR + getOptionalFilterString();
                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:243: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:363: warning: [method.invocation] call to get() not allowed on the given receiver.
                        optionalFilterCondition.get(), nullableGroups, rightVariables))
                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:428: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private IQTree propagateDownCondition(Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:435: warning: [method.invocation] call to get() not allowed on the given receiver.
                    .propagateDownConstraint(constraint.get(), variableGenerator);
                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:43: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:102: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(UnsatisfiableConditionException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:130: warning: [method.invocation] call to get() not allowed on the given receiver.
                groundFunctionalSubstitution.get().apply(partiallySimplifiedExpression.get()),
                                                                                          ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:57: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:64: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:38: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Substitution<NonVariableTerm>> possibleVariableDefinitions;
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:44: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:47: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private FunctionalDependencies functionalDependencies;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:50: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final TermType termType;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable variable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:56: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getTermType not allowed in deterministic side-effect-free method
                && getTermType().equals(((TermTypeInference) o).getTermType());
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:56: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((TermTypeInference)o).getTermType not allowed in deterministic side-effect-free method
                && getTermType().equals(((TermTypeInference) o).getTermType());
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:61: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getTermType not allowed in deterministic side-effect-free method
        return getTermType().hashCode();
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> topSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> subSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected InnerJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalFilterCondition,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:118: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:124: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getOptionalFilterCondition not allowed in deterministic side-effect-free method
        return getOptionalFilterCondition().hashCode();
                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:131: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getOptionalFilterCondition not allowed in deterministic side-effect-free method
                && getOptionalFilterCondition().equals(((InnerJoinNode) obj).getOptionalFilterCondition());
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:131: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((InnerJoinNode)obj).getOptionalFilterCondition not allowed in deterministic side-effect-free method
                && getOptionalFilterCondition().equals(((InnerJoinNode) obj).getOptionalFilterCondition());
                                                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:136: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return JOIN_NODE_STR + getOptionalFilterString();
                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:149: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
478 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-173348-w74vst6l/iteration0' '-classpath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-api/0.5.0/commons-rdf-api-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-simple/0.5.0/commons-rdf-simple-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.1-jre/guava-32.0.1-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.8.0/checker-qual-3.8.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.5.1/error_prone_annotations-2.5.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/guice/5.0.1/guice-5.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/extensions/guice-assistedinject/5.0.1/guice-assistedinject-5.0.1.jar:/homes/gws/jmsy/.m2/repository/io/github/solf/nullanno/3.0.0/nullanno-3.0.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/io/mikael/urlbuilder/2.0.9/urlbuilder-2.0.9.jar:/homes/gws/jmsy/.m2/repository/org/locationtech/proj4j/proj4j/1.1.1/proj4j-1.1.1.jar:/homes/gws/jmsy/.m2/repository/commons-codec/commons-codec/1.14/commons-codec-1.14.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.2/jackson-core-2.13.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.4.2/jackson-databind-2.13.4.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.2/jackson-annotations-2.13.2.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model/4.2.4/rdf4j-model-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-api/4.2.4/rdf4j-model-api-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-annotation/4.2.4/rdf4j-common-annotation-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-vocabulary/4.2.4/rdf4j-model-vocabulary-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-exception/4.2.4/rdf4j-common-exception-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-text/4.2.4/rdf4j-common-text-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-io/4.2.4/rdf4j-common-io-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-util/4.2.4/rdf4j-common-util-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-iterator/4.2.4/rdf4j-common-iterator-4.2.4.jar:/homes/gws/jmsy/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes' '-sourcepath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java:/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations' '-g' '--release' '11' '--release' '11' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBNonStrictEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCaseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBHashFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotYetTypedEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/CompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/LinearInclusionDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSampleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/VariableOrGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBStdevFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/EmptyQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NowSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFDatatypeStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/UnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidQueryNodeException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/NaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AttributeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RegexSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConstructionSubstitutionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/WKTLiteralValue.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonPostProcessedSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBoundaryFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRISafenessDeclarationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/QueryRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolSerializer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NonStrictEqSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UnsupportedRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeInference.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BoundSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQTreeTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/ExpressionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/TemplateParser.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalInequalityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsLiteralSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/ObjectStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DatabaseInfoSupplier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StartsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsStringEmptyFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/LeafIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractSubStrSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrBeforeOrAfterFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphism.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidOntopConfigurationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/UOM.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractNamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/IQVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderComparatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedBinaryMathOperationTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/VariableNullability.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReduciblePositiveAritySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/VariableImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/AbstractPredicateExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/LowerCaseDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRIStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/TrueNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeAncestry.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DivideSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/NonDeterministicDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FlattenNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNumberNormAsBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/CompositeIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FlattenNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTimeTzNormalizationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalAndSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/DefPushDownRequestImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ExtractLexicalTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/TriplePredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DBParameters.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDateInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofDoubleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/SimpleRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenElseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/QueryTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/DistinctNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnsatisfiableConditionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MetadataExtractionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/AbstractExpressionTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/TemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GreaterThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnSimpleBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/DefinitionPushDownRequest.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EqFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DateTruncSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OFN.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidIntermediateQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfTouchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfWithinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ZeroAryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/TriplePredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/NumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFTermTypeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/ArgumentSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeSubstitutionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBGroupConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ConstructionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/Template.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/JsonDBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypeFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/QuotedIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/IRITermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/TypeConstantDictionary.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MultitypedInputUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLangTagLikeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractBinaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/FunctionalTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoveredByFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Attribute.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/FalseOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryNumericLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/PartiallyTypedSimpleCastTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BooleanDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Nullifiers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/EmptyNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Constant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhOverlapFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/SQLStandardQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/QueryRenamerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSimilarToFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/BinaryNonCommutativeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/StandardNotationDBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImplUsingRelate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRIStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DateDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtendedProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIfDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQSyntacticContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractSimpleMultitypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MockupDBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/LanguageTag.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/PredicateConstants.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioNonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/VarianceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/NotRequiredVariableRemover.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SameTermSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfIntersectsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/RDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioArrayAccessDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractIsASPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/DistinctNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBVarianceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RDFAtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConstructionSubstitutionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EBVSPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IriSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/EmptyNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelSettings.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDefaultInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BlankNodeTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExplicitVariableProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/SliceNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBSumFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEO.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrUUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictNumericEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/AggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnMultitypedInputBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSymDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DistinctVariableOnlyDataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryStringSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/NoNullValuesEnforcerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/QueryTransformerFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimpleTypedDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFLiteralConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IndexInFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFLiteralConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/ConversionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/PartiallyTypedSimpleCastTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UUIDDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBnodeSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/ObjectTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalNonStrictEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/IDGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha384SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/StringUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullToleratingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/Predicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/CoreUtilsFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/QuadPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableExpression.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrlenSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryModifierNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QualifiedAttributeID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/Ontop.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBufferFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractUnaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha256SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEOF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/LangSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OntopInternal.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNodeVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/OfflineMetadataProviderBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/SingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryBooleanSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofIntersectionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsARDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/InjectiveSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ImmutableMetadata.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/OrderByNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalLangMatchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfOverlapsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/MetaRDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RelationIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofConvexHullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRISafenessDeclarationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/DBConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/AGG.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBTypeConversionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GroupConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrBeforeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDatetimeInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypePropagationSubstitutionHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/ChildTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ForcingFloatingDBAvgFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/Substitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangMatchesSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/QuadPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQContainmentCheckUnderLIDs.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBCountFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/FunctionalDependencyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha512SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLexicalNonStrictEqOrInequalityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/AggregationNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/DBConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/AggregationNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/RDFAtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ValuesNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDefaultEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/BNodeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/LinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RandSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBArrayObjectAccessFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryBooleanOperatorSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IRIConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SQLServerDBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDF2DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XSD.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundTermTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFTermTypeConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/LegacyVariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateMFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8DcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/R2RMLIRISafeEncoder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDistanceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/IntensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/AbstractTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DelegatingMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalOrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrAfterSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NumericBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Serializers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/GenericDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NativeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/BasicSingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/BnodeStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIRIFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBRegexMatchAsLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/CoreSingletons.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NullConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrAfterFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha1SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/TrueNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonVariableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ConcreteNumericRDFDatatypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/AttributeNotFoundException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Lens.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/ConcreteIQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNumericInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MinorOntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/InnerJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/NoNullValueEnforcer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/WrappedDBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIntegerFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TrueOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Variable.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EndsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/NotYetTypedEqualityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhMeetFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/InequalityLabel.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/VariableNonRequirement.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/CompositeQueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/OntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDateEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/BasicLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMaxFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/BNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictNEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/FunctionalDependency.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/BnodeTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IfSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/VariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ConcreteNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ForeignKeyConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofWKTFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictStringEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AreCompatibleRDFStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/UniqueConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISODenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/InjectiveSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryCastDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/FunctionalTermSimplification.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoversFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XPathFunction.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsBlankSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/OrderByNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/LeftJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/QueryNodeRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrEndsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8PoFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AggregationSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Md5SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/IntensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/StringDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReplaceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/BooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/ProjectionDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIsNullOrNotFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/NamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBAvgFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedEqualityTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RelationPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MetaRDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/IRITemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ObjectConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsIRISPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonConstantTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr3SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBTypeConversionFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DenodoDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractHashSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr2SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/DistinctNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelConfiguration.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/TermNullabilityEvaluator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CoalesceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermTypeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/EqualsTrueDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FilterNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryModifierNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DistinctVariableOnlyDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/ExpressionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LessThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEnvelopeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/CachingMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BnodeStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/HomogeneousIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISONormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AvgSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SimpleUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryNonCommutativeOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofUnionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/LexicalSpace.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/CoreSingletonsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CountSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StdevSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrBeforeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/SPARQL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDatetimeEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNonDeterministicNullaryFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryComparisonSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/FullLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/NotRequiredVariableRemoverImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/UnaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RawQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IncrementalEvaluation.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/node/HomogeneousQueryNodeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/PredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullRejectingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StringBooleanBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractArgDependentTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TemporaryDBTypeConversionToStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/RelationExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ContainsSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/ImmutableTermsSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DatatypeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/IllegalTreeUpdateException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/NativeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/VariableGeneratorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IRIConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhInsideFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStrBeforeOrAfterSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OWL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfCrossesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStringInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/RelationNotFoundInMetadataException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTree2NativeNodeGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/FunctionalDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagWithPlaceholderFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDFS.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/TermNullabilityEvaluatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/LazyRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/TrueOrNullFunctionSymbol.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java:60: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream);
	                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java:15: warning: [optional.collection] Don't use Optional to wrap a collection type.
    Optional<ImmutableList<DBConstant>> decompose(DBConstant stringConstant);
                                        ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:92: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(term + " was expected to be " +
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:111: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The evaluation was expected " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:150: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(0) + " was expected to be " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:162: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(2*i) + " was expected to be " +
                                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:219: warning: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:364: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("Was expected to find this function symbol at the indicated position"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java:32: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator);
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java:37: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        i -> Optional.<T>ofNullable(argumentMap1.get(i)).orElseGet(() -> argumentMap2.get(i))));
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    JoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java:50: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild, VariableGenerator variableGenerator);
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java:16: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java:13: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    CommutativeJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<TermType> inferOutputType(Optional<TermType> extractSingleTermType);
                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:28: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map(Attribute::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:27: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map not allowed in side-effect-free method
                        .map(Attribute::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:26: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream not allowed in side-effect-free method
                getAttributes().stream()
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:28: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java:18: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String dbVersion;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Supplier<Injector> injectorSupplier;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Injector injector;
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:139: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Boolean> testMode = Optional.empty();
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:141: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Properties> inputProperties = Optional.empty();
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:42: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode createInnerJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:46: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode createLeftJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:52: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                  Optional<Variable> indexVariable, DBTermType dbTermType);
                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java:115: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnsupportedOperationException("No @IDFactoryType annotation found"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter((o)->(o instanceof TermType)).map((o)->(TermType)o).filter not allowed in deterministic side-effect-free method
                .filter(o -> o.toString().equals(toString()))
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:74: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter((o)->(o instanceof TermType)).map not allowed in deterministic side-effect-free method
                .map(o -> (TermType) o)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:73: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter not allowed in deterministic side-effect-free method
                .filter(o -> (o instanceof TermType))
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:72: warning: [purity.not.deterministic.call] call to non-deterministic method Optional.ofNullable not allowed in deterministic method
        return Optional.ofNullable(other)
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.call] call to non-deterministic method o.toString not allowed in deterministic method
                .filter(o -> o.toString().equals(toString()))
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
                .filter(o -> o.toString().equals(toString()))
                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:86: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final IRI functionIRI;
                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:21: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:83: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> condition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:96: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                        Optional<ImmutableExpression> condition, IQTree child) {
                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:226: warning: [method.invocation] call to get() not allowed on the given receiver.
                            .map(c -> termFactory.getConjunction(condition.get(), c))
                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:68: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<OrderByNode> orderByNode;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State(ImmutableList<UnaryOperatorNode> ancestors, Optional<OrderByNode> orderByNode, IQTree child,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:87: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentOrderByAndChild(UnaryOperatorNode newParent, Optional<OrderByNode> newOrderByNode, IQTree newChild) {
                                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:19: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:90: warning: [optional.collection] Don't use Optional to wrap a collection type.
                ? Optional.of(ImmutableList.of(termFactory.getDBConstant(cst.getValue(), inputType)))
                ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java:26: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTopPropagatedNumericTypeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:84: warning: [purity.not.sideeffectfree.call] call to side-effecting ImmutableSet.of not allowed in side-effect-free method
            return ImmutableSet.of(
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:85: warning: [purity.not.sideeffectfree.call] call to side-effecting AbstractMap.SimpleImmutableEntry<> not allowed in side-effect-free method
                    new AbstractMap.SimpleImmutableEntry<>(false, forFalse),
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:86: warning: [purity.not.sideeffectfree.call] call to side-effecting AbstractMap.SimpleImmutableEntry<> not allowed in side-effect-free method
                    new AbstractMap.SimpleImmutableEntry<>(true, forTrue)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java:132: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<ArgumentMapUnifier<T>> optional;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private Optional<Substitution<T>> optionalSubstitution;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:62: warning: [method.invocation] call to get() not allowed on the given receiver.
        T term2 = operations.applyToTerm(optionalSubstitution.get(), t2);
                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:90: warning: [method.invocation] call to get() not allowed on the given receiver.
                optionalSubstitution = Optional.of(operations.compose(s, optionalSubstitution.get()));
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on(", ").withKeyValueSeparator("/").join not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on(", ").withKeyValueSeparator not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:89: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Unexpected empty disjunction"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:99: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The first argument of a IF_ELSE_NULL must be an expression"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<ImmutableExpression> leftJoinExpression,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:60: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:68: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL distinct aggregate function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:102: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:128: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:135: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            ImmutableMap<ConcreteNumericRDFDatatype, Variable> numericSubTermVarMap, Optional<Variable> optionalIncompatibleCountVariable,
                                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:136: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleSubVariable, TermFactory termFactory) {
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)))
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:155: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java:173: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    static Optional<IRI> tryExtractSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:169: warning: [method.invocation] call to get() not allowed on the given receiver.
                                                    ? extractConstantWKTLiteralValue(termFactory, subterm).get()
                                                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:33: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit name: " + name));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:40: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit iri: " + iri));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:80: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:107: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The order by was expected to be kept"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java:59: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("A simplified expression was expected"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append("=").append(r).append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append("=").append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:32: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
        bf.append("\n====== constraints ==========\n");
                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:34: warning: [purity.not.sideeffectfree.call] call to side-effecting r.getUniqueConstraints not allowed in side-effect-free method
            for (UniqueConstraint uc : r.getUniqueConstraints())
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:35: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(uc).append not allowed in side-effect-free method
                bf.append(uc).append(";\n");
                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:35: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
                bf.append(uc).append(";\n");
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:36: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:37: warning: [purity.not.sideeffectfree.call] call to side-effecting r.getForeignKeys not allowed in side-effect-free method
            for (ForeignKeyConstraint fk : r.getForeignKeys())
                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:38: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(fk).append not allowed in side-effect-free method
                bf.append(fk).append(";\n");
                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:38: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
                bf.append(fk).append(";\n");
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:39: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:27: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
        StringBuilder bf = new StringBuilder();
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java:115: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
        private final ImmutableExpression expression;
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:99: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(functionSymbol.toString());
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:100: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append("(");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream().map(ImmutableTerm::toString).collect not allowed in side-effect-free method
                    .collect(Collectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream().map not allowed in side-effect-free method
                    .map(ImmutableTerm::toString)
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:102: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream not allowed in side-effect-free method
            List<String> argumentStrings = terms.stream()
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                    .collect(Collectors.toList());
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:106: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(String.join(",", argumentStrings));
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:107: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(")");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:108: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = sb.toString();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:98: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
            StringBuilder sb = new StringBuilder();
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:120: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
            return toString().equals(other.toString());
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:120: warning: [purity.not.deterministic.call] call to non-deterministic method other.toString not allowed in deterministic method
            return toString().equals(other.toString());
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:127: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java:133: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("Arity > 1 was expected"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:49: warning: [purity.not.deterministic.not.sideeffectfree.assign.field] field assignment not allowed in deterministic side-effect-free method
            next = shift();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:49: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting shift not allowed in deterministic side-effect-free method
            next = shift();
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:50: warning: [purity.not.deterministic.not.sideeffectfree.assign.field] field assignment not allowed in deterministic side-effect-free method
            movedToNext = true;
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:25: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map(Attribute::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:24: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map not allowed in side-effect-free method
                        .map(Attribute::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:23: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream not allowed in side-effect-free method
                getAttributes().stream()
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:25: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:108: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> ljCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:114: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                     Optional<ImmutableExpression> ljCondition,
                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:126: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       IQTree initialRightChild, Optional<ImmutableExpression> ljCondition,
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:131: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private LJNormalizationState updateConditionAndRightChild(Optional<ImmutableExpression> newLJCondition,
                                                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:141: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                UnaryOperatorNode newParent, Optional<ImmutableExpression> newLJCondition, IQTree newRightChild) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:146: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:158: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:208: warning: [purity.methodref] Incompatible purity declaration
                        childVariableNullability, this::applyLeftChildBindingLift)
                                                  ^
  Method in @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState
    @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState applyLeftChildBindingLift(@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
    is not a valid method reference for method in @MaybePresent BindingLiftConverter<@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState>
    @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState convert(@MaybePresent BindingLiftConverter<@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState> this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:322: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> ljCondition, Substitution<ImmutableTerm> naiveAscendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:470: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        provenanceVariable.orElseThrow(() -> new MinorOntopInternalBugException("An entry was expected")),
                                                      ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:657: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<Variable> rightProvenanceVariable, ImmutableSet<Variable> leftVariables) {
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:667: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                              Optional<Variable> defaultRightProvenanceVariable) {
                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:678: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("A default provenance variable was needed"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                         Optional<ImmutableExpression> initialJoiningCondition,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                  Optional<ImmutableExpression> newCondition,
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                      Optional<ImmutableExpression> joiningCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ConstructionNode childConstructionNode;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:153: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A lifted construction node was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:69: warning: [method.invocation] call to get() not allowed on the given receiver.
        return getOptionalFilterCondition().get();
                                               ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:201: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getFilterCondition not allowed in deterministic side-effect-free method
        return getFilterCondition().hashCode();
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:208: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting getFilterCondition not allowed in deterministic side-effect-free method
                && getFilterCondition().equals(((FilterNode) o).getFilterCondition());
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:208: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((FilterNode)o).getFilterCondition not allowed in deterministic side-effect-free method
                && getFilterCondition().equals(((FilterNode) o).getFilterCondition());
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:213: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return FILTER_NODE_STR + getOptionalFilterString();
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:228: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalFilterCondition;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinOrFilterNodeImpl(Optional<ImmutableExpression> optionalFilterCondition,
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java:22: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nonRequiredVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:124: warning: [purity.methodref] Incompatible purity declaration
                variableMapper, termMapper, ImmutableMap.Builder::put, this::createSubstitution);
                                            ^
  Method in @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>
    @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> put(@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> this, @MaybePresent Variable p0, T extends @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>, @MaybePresent Variable, T extends @MaybePresent ImmutableTerm>
    void put(@MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>, @MaybePresent Variable, T extends @MaybePresent ImmutableTerm> this, @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> p0, @MaybePresent Variable p1, T extends @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:146: warning: [purity.methodref] Incompatible purity declaration
                v -> v, variableGenerator::generateNewVariableFromVar, ImmutableMap.Builder::put, m -> createSubstitution(m).injective());
                                                                       ^
  Method in @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>
    @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> put(@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> this, @MaybePresent Variable p0, @MaybePresent Variable p1)
    is not a valid method reference for method in @MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>, @MaybePresent Variable, @MaybePresent Variable>
    void put(@MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>, @MaybePresent Variable, @MaybePresent Variable> this, @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> p0, @MaybePresent Variable p1, @MaybePresent Variable p2)
  found   : []
  required: [SIDE_EFFECT_FREE]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:273: warning: [method.invocation] call to get() not allowed on the given receiver.
                        return attemptUnifying(term1, term2).get();
                                                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:142: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:170: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:184: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:67: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:69: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:76: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:179: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent Boolean>
  required: @MaybePresent Optional<@MaybePresent Boolean>
  Consequence: method in @MaybePresent Optional<@MaybePresent Boolean>
    @MaybePresent Boolean get(@Present Optional<@MaybePresent Boolean> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean>
    @MaybePresent Boolean apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean> this, @MaybePresent Optional<@MaybePresent Boolean> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:63: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:65: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:72: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:151: warning: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .map(oe -> oe
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:53: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(variableGenerator::generateNewVariable))
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:59: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public static IQTree toIQTree(ImmutableList<? extends IQTree> extensionalNodes, Optional<ImmutableExpression> joiningConditions,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:122: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return getExtensionalDataNodes(tree.getChildren().get(0), coreSingletons);
                                          ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:125: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of((ExtensionalDataNode)tree));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:128: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of());
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:131: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of(convertIntoExtensionalDataNode((ValuesNode) node, coreSingletons)));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:135: warning: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:141: warning: [optional.collection] Don't use Optional to wrap a collection type.
        return Optional.empty();
                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
            return ((FilterNode)tree.getRootNode()).getOptionalFilterCondition().get().flattenAND()
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java:67: warning: [method.invocation] call to get() not allowed on the given receiver.
                    dbFunctionSymbolFct.apply(dbTypeFactory.getDBStringType()).get(), subLexicalTerms.get(0));
                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:134: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("groups must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:266: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("An expression was expected"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:372: warning: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> ucsPartitionedByDisjointness.get(true).stream().noneMatch(set -> set.size() == 1 && set.stream().findFirst().get().equals(v)))
                                                                                                                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:405: warning: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> fdsPartitionedByDisjointness.get(true).stream().noneMatch(entry -> entry.getKey().size() == 1 && entry.getKey().stream().findFirst().get().equals(v)))
                                                                                                                                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:510: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:663: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .flatMap(t -> t);
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:767: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new QueryNodeSubstitutionException("The descending substitution " + mergedSubstitution
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:130: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expecting " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:222: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:228: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("cannot be empty because there is at least one variable in the templates (taken together)"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:413: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern injectivePattern; // lazy initalization
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:474: warning: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java:87: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern pattern;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:51: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                          Optional<ImmutableExpression> constraint,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:133: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(ConstructionNodeImpl.EmptyTreeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:288: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        v -> getDeterminedBy(Optional.ofNullable(substitution.get(v)).orElse(v), variableNullability)
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:592: warning: [optional.field] Don't use Optional as the type of a field.
        public final Optional<ImmutableExpression> filter;
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:597: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                          Optional<ImmutableExpression> newF) {
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java:21: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ImmutableExpression simplifiedExpression;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableGenerator variableGenerator;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java:105: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java:54: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:164: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get))
                             ^
  found   : @Present Optional<@MaybePresent DefinitionPushDownRequest>
  required: @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
  Consequence: method in @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest get(@Present Optional<@MaybePresent DefinitionPushDownRequest> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest> this, @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:202: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Substitution<ImmutableFunctionalTerm> computeSubstitution(Optional<Variable> optionalNumAvgVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalNumSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:204: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleCountVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:213: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, createAggregate(xsdDecimal, optionalNumSubVariable.get(), termFactory)));
                                                                                                       ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:219: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)));
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:236: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableFunctionalTerm computeLiftableTerm(Optional<Variable> optionalNumAvgVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:238: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:253: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeLexicalTerm(Optional<Variable> optionalFloatingAggVariable,
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                             Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:275: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeTypeTerm(Optional<Variable> optionalNumAvgVariable,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:277: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                          Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private]
    private IQ iq;
               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:11: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<DBTermType> itemType;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:18: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ArrayDBTermType(String arrayStr, TermTypeAncestry ancestry, Optional<DBTermType> itemType, ArrayTypeFromSignature parsingFunction) {
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:65: warning: [method.invocation] call to get() not allowed on the given receiver.
        return ImmutableList.of(this.itemType.get());
                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java:25: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(t -> t.negate(termFactory))).get();
                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:120: warning: [method.invocation] call to get() not allowed on the given receiver.
                                .get(),
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:125: warning: [method.invocation] call to get() not allowed on the given receiver.
                                .get()))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java:95: warning: [method.invocation] call to get() not allowed on the given receiver.
                        e -> e.getValue().get()));
                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2056: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(() -> getDBCastFunctionSymbol(inputType, dbStringType)));
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2073: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(() -> getDBCastFunctionSymbol(dbStringType, targetDBType));
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:48: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The first term of an IF_ELSE_NULL " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:68: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Inconsistent evaluation"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The first term in ifElseNullTerms was expected " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:177: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expected an immutable expression as first term"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:200: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("was expected an ImmutableExpression as first sub-term"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:235: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("Wrong index"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> definedVariable) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:64: warning: [argument] incompatible argument for parameter definedVariable of ProjectionDecomposerImpl.decomposeDefinition.
                        .map(t -> decomposeDefinition(t, variableGenerator, Optional.empty()))
                                                                                          ^
  found   : @MaybePresent Optional<@MaybePresent Variable>
  required: @Present Optional<@MaybePresent Variable>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:121: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<Substitution<ImmutableTerm>> substitution;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:83: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:94: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("otherTerms must be non-empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:100: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                         Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java:74: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> knownVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:40: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:116: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = printSubtree(this, "");
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:116: warning: [purity.not.sideeffectfree.call] call to side-effecting printSubtree not allowed in side-effect-free method
            string = printSubtree(this, "");
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:142: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:188: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<ImmutableExpression> normalizeConstraint(Optional<ImmutableExpression> constraint,
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:206: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                 Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator);
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QualifiedAttributeID.java:78: warning: [purity.not.sideeffectfree.call] call to side-effecting getSQLRendering not allowed in side-effect-free method
		return getSQLRendering();
		                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:39: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Long limit;
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:228: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("There should be one child"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:235: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one child expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:337: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RelationIDImpl.java:60: warning: [purity.not.sideeffectfree.call] call to side-effecting getSQLRendering not allowed in side-effect-free method
        return getSQLRendering();
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/DBConstantImpl.java:68: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((DBConstant)other).getValue not allowed in deterministic side-effect-free method
                    ((DBConstant) other).getValue().equals(this.value));
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IRIConstantImpl.java:68: warning: [purity.not.sideeffectfree.call] call to side-effecting iri.getIRIString not allowed in side-effect-free method
		return "<" + iri.getIRIString() + ">";
		                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java:61: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting otherType.getLanguageTag().filter not allowed in deterministic side-effect-free method
                    .filter(langTag::equals)
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java:60: warning: [purity.not.deterministic.call] call to non-deterministic method otherType.getLanguageTag not allowed in deterministic method
            return otherType.getLanguageTag()
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java:35: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  required: @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  Consequence: method in @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> get(@Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>> this, @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:349: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBHoursBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBHoursBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:351: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBMinutesBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBMinutesBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:353: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBSecondsBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBSecondsBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:355: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBMillisBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBMillisBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nullableVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:36: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableMap<Variable, Integer> variableMap;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:189: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map(Attribute::getID).map(QuotedID::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:188: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map(Attribute::getID).map not allowed in side-effect-free method
                        .map(QuotedID::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:187: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map not allowed in side-effect-free method
                        .map(Attribute::getID)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:186: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream not allowed in side-effect-free method
                attributes.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:189: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java:28: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTermTypeOriginException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:71: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new UnknownClassException(String.format(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnknownClassException(String.format(
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:17: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::everything;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> everything(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : [SIDE_EFFECT_FREE]
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:19: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidInteger;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidInteger(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:21: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidDecimal;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @MaybePresent Optional<@MaybePresent Boolean> isValidDecimal(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:23: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidDouble;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidDouble(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:25: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidUUID;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidUUID(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:30: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::unknown;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @MaybePresent Optional<@MaybePresent Boolean> unknown(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : [SIDE_EFFECT_FREE]
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:109: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> joiningCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:115: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                      Optional<ImmutableExpression> joiningCondition, VariableGenerator variableGenerator,
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:128: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        public State(ImmutableList<IQTree> children, Optional<ImmutableExpression> joiningCondition,
                                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateConditionAndChildren(Optional<ImmutableExpression> newCondition,
                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:148: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentConditionAndChildren(UnaryOperatorNode newParent, Optional<ImmutableExpression> newCondition,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:245: warning: [purity.methodref] Incompatible purity declaration
                        newChildrenVariableNullability, this::convertIntoState);
                                                        ^
  Method in @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State
    @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State convertIntoState(@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
    is not a valid method reference for method in @MaybePresent BindingLiftConverter<@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State>
    @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State convert(@MaybePresent BindingLiftConverter<@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State> this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> notNormalizedCondition, Substitution<ImmutableTerm> ascendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:452: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get);
                         ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:505: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<ImmutableExpression> condition;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:141: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final FilterNode sampleFilter;
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:143: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final ConstructionNode childConstructionNode;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:298: warning: [method.invocation] call to get() not allowed on the given receiver.
                    s -> newAggregationSubstitution.compose(substitutionFactory.getSubstitution(sampleVariable.get(), termFactory.getDBSample(termFactory.getDBIntegerConstant(1), termFactory.getTypeFactory().getDBTypeFactory().getDBLargeIntegerType())))
                                                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:12: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalExpression;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitutionImpl(Optional<ImmutableExpression> optionalExpression,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:48: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:52: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:56: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:60: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:64: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:147: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = determinants.stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:149: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:155: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#05 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm>
    capture#06 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:213: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  required: @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> get(@Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>> this, @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:220: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = uniqueConstraint.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:222: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:225: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.empty();
                                 ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:228: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#07 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm>
    capture#08 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:239: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:245: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> determinants = functionalDependency.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:247: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:249: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> dependents = functionalDependency.getDependents().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:251: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:258: warning: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#09 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm>
    capture#010 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:264: warning: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#011 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm>
    capture#012 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:311: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream().map((e)->e.getKey() + ":" + e.getValue()).collect not allowed in side-effect-free method
                .collect(Collectors.joining(",")));
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:310: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream().map not allowed in side-effect-free method
                .map(e -> e.getKey() + ":" + e.getValue())
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:309: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream not allowed in side-effect-free method
                argumentMap.entrySet().stream()
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:311: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                .collect(Collectors.joining(",")));
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:20: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:113: warning: [method.invocation] call to get() not allowed on the given receiver.
                        otherExpressionBuilder.add(evaluation.getNewExpression().get());
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:151: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("expressions must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:255: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:333: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type to compare with was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream().map(FunctionalDependency::toString).collect not allowed in side-effect-free method
                .collect(ImmutableCollectors.toList())));
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:75: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream().map not allowed in side-effect-free method
                .map(FunctionalDependency::toString)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:74: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream not allowed in side-effect-free method
        return String.format("[%s]", String.join("; ", dependencies.stream()
                                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting ImmutableCollectors.toList not allowed in side-effect-free method
                .collect(ImmutableCollectors.toList())));
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:153: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.stream().reduce not allowed in deterministic side-effect-free method
                .reduce(0, (sum, n) -> sum ^ n.hashCode(), Integer::sum);
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:152: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.stream not allowed in deterministic side-effect-free method
        return dependencies.stream()
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:206: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream().map(Variable::toString).collect not allowed in side-effect-free method
                                    .collect(Collectors.toList())),
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:205: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream().map not allowed in side-effect-free method
                                    .map(Variable::toString)
                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:204: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream not allowed in side-effect-free method
                            String.join(", ", determinants.stream()
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:206: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                                    .collect(Collectors.toList())),
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:209: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream().map(Variable::toString).collect not allowed in side-effect-free method
                                    .collect(Collectors.toList()))
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:208: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream().map not allowed in side-effect-free method
                                    .map(Variable::toString)
                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:207: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream not allowed in side-effect-free method
                            String.join(", ", dependents.stream()
                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:209: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                                    .collect(Collectors.toList()))
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:42: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
	private final DBConstant doubleNaN;
	                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:214: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	public Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream) {
	                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:40: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<Variable> indexVariable;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:47: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                            @Assisted Optional<Variable> indexVariable,
                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:82: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<TermType> inferOutputType(Optional<TermType> flattenedVarType) {
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:131: warning: [purity.not.sideeffectfree.call] call to side-effecting indexVariable.map not allowed in side-effect-free method
                indexVariable.map(v -> ", " + v + "/indexIn(" + flattenedVariable + ")").orElse("") +
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:147: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:150: warning: [purity.methodref] Incompatible purity declaration
                IQTree::applyDescendingSubstitution);
                ^
  Method in @MaybePresent IQTree
    @MaybePresent IQTree applyDescendingSubstitution(@MaybePresent IQTree this, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p0, @MaybePresent Optional<@MaybePresent ImmutableExpression> p1, @MaybePresent VariableGenerator p2)
    is not a valid method reference for method in @MaybePresent PropagateToChild
    @MaybePresent IQTree apply(@MaybePresent PropagateToChild this, @MaybePresent IQTree p0, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p1, @MaybePresent Optional<@MaybePresent ImmutableExpression> p2, @MaybePresent VariableGenerator p3)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                               Optional<ImmutableExpression> constraint, IQTree child,
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                (c, s, constraint, vGenerator) -> c.applyDescendingSubstitutionWithoutOptimizing(s, vGenerator));
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:236: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(constraint -> Stream.concat(constraint.stream(), Stream.of(indexVariable.get()))
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:406: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                     Optional<ImmutableExpression> optionalConstraint, VariableGenerator variableGenerator);
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java:124: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinLikeNodeImpl(Optional<ImmutableExpression> optionalJoinCondition,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java:107: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:29: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("BooleanDBIfElseNullFunctionSymbol was " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:69: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Was an expected an immutable expression " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:388: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:391: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:433: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A projected variable was expected as argument"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:485: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  required: @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> get(@Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>> this, @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:627: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream().map((tuple)->tuple.stream().map(String::valueOf).collect(Collectors.joining(",", " (", ")"))).collect not allowed in side-effect-free method
                .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream().map not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:626: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream().map(String::valueOf).collect not allowed in side-effect-free method
                .collect(Collectors.joining(","," (",")")))
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:625: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream().map not allowed in side-effect-free method
                .map(String::valueOf)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:626: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                .collect(Collectors.joining(","," (",")")))
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java:13: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<String> optionalSuffix;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable boundVariable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java:44: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<String> getSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting relation.getID().getSQLRendering not allowed in side-effect-free method
        return "ALTER TABLE " + relation.getID().getSQLRendering() +
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:156: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map((c)->c.getAttribute().getID().toString()).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:155: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map not allowed in side-effect-free method
                        .map(c -> c.getAttribute().getID().toString())
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:154: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream not allowed in side-effect-free method
                components.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:156: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting referencedRelation.getID().getSQLRendering not allowed in side-effect-free method
                ") REFERENCES " + referencedRelation.getID().getSQLRendering() +
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:161: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map((c)->c.getReferencedAttribute().getID().toString()).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:160: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map not allowed in side-effect-free method
                        .map(c -> c.getReferencedAttribute().getID().toString())
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:159: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream not allowed in side-effect-free method
                components.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:161: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
            return toString().equals(other.toString());
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method other.toString not allowed in deterministic method
            return toString().equals(other.toString());
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:87: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:97: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(predicate.toString());
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:98: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append("(");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:101: warning: [purity.not.sideeffectfree.call] call to side-effecting arguments.stream().map not allowed in side-effect-free method
                    .map(VariableOrGroundTerm::toString);
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:100: warning: [purity.not.sideeffectfree.call] call to side-effecting arguments.stream not allowed in side-effect-free method
            Stream<String> argumentStrings = arguments.stream()
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentStrings.collect not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(")");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:105: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = sb.toString();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:96: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
            StringBuilder sb = new StringBuilder();
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:50: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
            return optionalMergedTypeConstant.orElseThrow(() ->
                                                         ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:75: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:48: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private LeftJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalJoinCondition,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:112: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return LEFT_JOIN_NODE_STR + getOptionalFilterString();
                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:243: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:363: warning: [method.invocation] call to get() not allowed on the given receiver.
                        optionalFilterCondition.get(), nullableGroups, rightVariables))
                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:428: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private IQTree propagateDownCondition(Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:43: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:102: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(UnsatisfiableConditionException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:130: warning: [method.invocation] call to get() not allowed on the given receiver.
                groundFunctionalSubstitution.get().apply(partiallySimplifiedExpression.get()),
                                                                                          ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:57: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:64: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:38: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Substitution<NonVariableTerm>> possibleVariableDefinitions;
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:44: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:47: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private FunctionalDependencies functionalDependencies;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:50: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final TermType termType;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable variable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:56: warning: [purity.not.deterministic.call] call to non-deterministic method getTermType not allowed in deterministic method
                && getTermType().equals(((TermTypeInference) o).getTermType());
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:56: warning: [purity.not.deterministic.call] call to non-deterministic method ((TermTypeInference)o).getTermType not allowed in deterministic method
                && getTermType().equals(((TermTypeInference) o).getTermType());
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:61: warning: [purity.not.deterministic.call] call to non-deterministic method getTermType not allowed in deterministic method
        return getTermType().hashCode();
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> topSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> subSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected InnerJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalFilterCondition,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:118: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:136: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return JOIN_NODE_STR + getOptionalFilterString();
                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:149: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
456 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-173348-w74vst6l/iteration1' '-classpath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-api/0.5.0/commons-rdf-api-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-simple/0.5.0/commons-rdf-simple-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.1-jre/guava-32.0.1-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.8.0/checker-qual-3.8.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.5.1/error_prone_annotations-2.5.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/guice/5.0.1/guice-5.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/extensions/guice-assistedinject/5.0.1/guice-assistedinject-5.0.1.jar:/homes/gws/jmsy/.m2/repository/io/github/solf/nullanno/3.0.0/nullanno-3.0.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/io/mikael/urlbuilder/2.0.9/urlbuilder-2.0.9.jar:/homes/gws/jmsy/.m2/repository/org/locationtech/proj4j/proj4j/1.1.1/proj4j-1.1.1.jar:/homes/gws/jmsy/.m2/repository/commons-codec/commons-codec/1.14/commons-codec-1.14.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.2/jackson-core-2.13.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.4.2/jackson-databind-2.13.4.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.2/jackson-annotations-2.13.2.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model/4.2.4/rdf4j-model-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-api/4.2.4/rdf4j-model-api-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-annotation/4.2.4/rdf4j-common-annotation-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-vocabulary/4.2.4/rdf4j-model-vocabulary-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-exception/4.2.4/rdf4j-common-exception-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-text/4.2.4/rdf4j-common-text-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-io/4.2.4/rdf4j-common-io-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-util/4.2.4/rdf4j-common-util-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-iterator/4.2.4/rdf4j-common-iterator-4.2.4.jar:/homes/gws/jmsy/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes' '-sourcepath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java:/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations' '-g' '--release' '11' '--release' '11' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBNonStrictEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCaseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBHashFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotYetTypedEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/CompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/LinearInclusionDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSampleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/VariableOrGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBStdevFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/EmptyQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NowSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFDatatypeStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/UnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidQueryNodeException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/NaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AttributeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RegexSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConstructionSubstitutionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/WKTLiteralValue.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonPostProcessedSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBoundaryFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRISafenessDeclarationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/QueryRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolSerializer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NonStrictEqSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UnsupportedRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeInference.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BoundSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQTreeTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/ExpressionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/TemplateParser.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalInequalityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsLiteralSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/ObjectStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DatabaseInfoSupplier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StartsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsStringEmptyFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/LeafIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractSubStrSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrBeforeOrAfterFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphism.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidOntopConfigurationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/UOM.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractNamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/IQVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderComparatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedBinaryMathOperationTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/VariableNullability.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReduciblePositiveAritySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/VariableImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/AbstractPredicateExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/LowerCaseDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRIStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/TrueNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeAncestry.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DivideSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/NonDeterministicDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FlattenNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNumberNormAsBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/CompositeIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FlattenNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTimeTzNormalizationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalAndSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/DefPushDownRequestImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ExtractLexicalTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/TriplePredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DBParameters.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDateInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofDoubleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/SimpleRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenElseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/QueryTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/DistinctNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnsatisfiableConditionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MetadataExtractionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/AbstractExpressionTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/TemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GreaterThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnSimpleBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/DefinitionPushDownRequest.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EqFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DateTruncSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OFN.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidIntermediateQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfTouchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfWithinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ZeroAryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/TriplePredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/NumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFTermTypeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/ArgumentSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeSubstitutionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBGroupConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ConstructionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/Template.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/JsonDBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypeFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/QuotedIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/IRITermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/TypeConstantDictionary.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MultitypedInputUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLangTagLikeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractBinaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/FunctionalTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoveredByFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Attribute.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/FalseOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryNumericLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/PartiallyTypedSimpleCastTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BooleanDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Nullifiers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/EmptyNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Constant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhOverlapFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/SQLStandardQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/QueryRenamerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSimilarToFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/BinaryNonCommutativeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/StandardNotationDBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImplUsingRelate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRIStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DateDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtendedProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIfDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQSyntacticContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractSimpleMultitypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MockupDBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/LanguageTag.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/PredicateConstants.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioNonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/VarianceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/NotRequiredVariableRemover.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SameTermSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfIntersectsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/RDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioArrayAccessDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractIsASPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/DistinctNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBVarianceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RDFAtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConstructionSubstitutionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EBVSPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IriSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/EmptyNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelSettings.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDefaultInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BlankNodeTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExplicitVariableProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/SliceNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBSumFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEO.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrUUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictNumericEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/AggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnMultitypedInputBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSymDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DistinctVariableOnlyDataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryStringSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/NoNullValuesEnforcerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/QueryTransformerFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimpleTypedDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFLiteralConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IndexInFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFLiteralConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/ConversionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/PartiallyTypedSimpleCastTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UUIDDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBnodeSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/ObjectTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalNonStrictEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/IDGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha384SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/StringUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullToleratingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/Predicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/CoreUtilsFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/QuadPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableExpression.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrlenSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryModifierNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QualifiedAttributeID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/Ontop.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBufferFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractUnaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha256SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEOF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/LangSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OntopInternal.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNodeVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/OfflineMetadataProviderBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/SingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryBooleanSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofIntersectionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsARDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/InjectiveSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ImmutableMetadata.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/OrderByNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalLangMatchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfOverlapsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/MetaRDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RelationIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofConvexHullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRISafenessDeclarationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/DBConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/AGG.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBTypeConversionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GroupConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrBeforeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDatetimeInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypePropagationSubstitutionHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/ChildTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ForcingFloatingDBAvgFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/Substitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangMatchesSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/QuadPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQContainmentCheckUnderLIDs.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBCountFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/FunctionalDependencyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha512SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLexicalNonStrictEqOrInequalityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/AggregationNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/DBConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/AggregationNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/RDFAtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ValuesNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDefaultEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/BNodeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/LinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RandSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBArrayObjectAccessFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryBooleanOperatorSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IRIConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SQLServerDBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDF2DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XSD.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundTermTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFTermTypeConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/LegacyVariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateMFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8DcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/R2RMLIRISafeEncoder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDistanceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/IntensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/AbstractTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DelegatingMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalOrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrAfterSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NumericBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Serializers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/GenericDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NativeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/BasicSingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/BnodeStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIRIFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBRegexMatchAsLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/CoreSingletons.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NullConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrAfterFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha1SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/TrueNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonVariableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ConcreteNumericRDFDatatypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/AttributeNotFoundException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Lens.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/ConcreteIQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNumericInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MinorOntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/InnerJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/NoNullValueEnforcer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/WrappedDBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIntegerFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TrueOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Variable.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EndsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/NotYetTypedEqualityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhMeetFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/InequalityLabel.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/VariableNonRequirement.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/CompositeQueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/OntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDateEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/BasicLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMaxFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/BNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictNEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/FunctionalDependency.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/BnodeTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IfSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/VariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ConcreteNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ForeignKeyConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofWKTFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictStringEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AreCompatibleRDFStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/UniqueConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISODenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/InjectiveSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryCastDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/FunctionalTermSimplification.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoversFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XPathFunction.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsBlankSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/OrderByNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/LeftJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/QueryNodeRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrEndsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8PoFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AggregationSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Md5SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/IntensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/StringDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReplaceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/BooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/ProjectionDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIsNullOrNotFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/NamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBAvgFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedEqualityTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RelationPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MetaRDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/IRITemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ObjectConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsIRISPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonConstantTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr3SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBTypeConversionFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DenodoDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractHashSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr2SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/DistinctNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelConfiguration.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/TermNullabilityEvaluator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CoalesceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermTypeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/EqualsTrueDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FilterNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryModifierNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DistinctVariableOnlyDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/ExpressionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LessThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEnvelopeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/CachingMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BnodeStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/HomogeneousIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISONormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AvgSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SimpleUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryNonCommutativeOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofUnionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/LexicalSpace.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/CoreSingletonsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CountSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StdevSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrBeforeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/SPARQL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDatetimeEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNonDeterministicNullaryFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryComparisonSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/FullLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/NotRequiredVariableRemoverImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/UnaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RawQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IncrementalEvaluation.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/node/HomogeneousQueryNodeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/PredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullRejectingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StringBooleanBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractArgDependentTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TemporaryDBTypeConversionToStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/RelationExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ContainsSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/ImmutableTermsSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DatatypeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/IllegalTreeUpdateException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/NativeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/VariableGeneratorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IRIConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhInsideFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStrBeforeOrAfterSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OWL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfCrossesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStringInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/RelationNotFoundInMetadataException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTree2NativeNodeGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/FunctionalDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagWithPlaceholderFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDFS.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/TermNullabilityEvaluatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/LazyRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/TrueOrNullFunctionSymbol.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java:60: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream);
	                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java:15: warning: [optional.collection] Don't use Optional to wrap a collection type.
    Optional<ImmutableList<DBConstant>> decompose(DBConstant stringConstant);
                                        ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:92: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(term + " was expected to be " +
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:111: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The evaluation was expected " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:150: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(0) + " was expected to be " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:162: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(2*i) + " was expected to be " +
                                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:219: warning: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:364: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("Was expected to find this function symbol at the indicated position"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java:32: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator);
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java:37: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        i -> Optional.<T>ofNullable(argumentMap1.get(i)).orElseGet(() -> argumentMap2.get(i))));
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    JoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java:50: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild, VariableGenerator variableGenerator);
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java:16: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java:13: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    CommutativeJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<TermType> inferOutputType(Optional<TermType> extractSingleTermType);
                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:28: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map(Attribute::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:27: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map not allowed in side-effect-free method
                        .map(Attribute::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:26: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream not allowed in side-effect-free method
                getAttributes().stream()
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:28: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java:18: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String dbVersion;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Supplier<Injector> injectorSupplier;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Injector injector;
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:139: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Boolean> testMode = Optional.empty();
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:141: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Properties> inputProperties = Optional.empty();
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:42: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode createInnerJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:46: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode createLeftJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:52: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                  Optional<Variable> indexVariable, DBTermType dbTermType);
                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java:115: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnsupportedOperationException("No @IDFactoryType annotation found"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter((o)->(o instanceof TermType)).map((o)->(TermType)o).filter not allowed in deterministic side-effect-free method
                .filter(o -> o.toString().equals(toString()))
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:74: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter((o)->(o instanceof TermType)).map not allowed in deterministic side-effect-free method
                .map(o -> (TermType) o)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:73: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter not allowed in deterministic side-effect-free method
                .filter(o -> (o instanceof TermType))
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:72: warning: [purity.not.deterministic.call] call to non-deterministic method Optional.ofNullable not allowed in deterministic method
        return Optional.ofNullable(other)
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.call] call to non-deterministic method o.toString not allowed in deterministic method
                .filter(o -> o.toString().equals(toString()))
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final IRI functionIRI;
                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:21: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:52: warning: [contracts.precondition] precondition of new State(initialFilterNode, initialChild).normalizeChild is not satisfied.
                .normalizeChild(variableGenerator);
                               ^
  found   : "new State(initialFilterNode, initia...".condition is @MaybePresent
  required: "new State(initialFilterNode, initia...".condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:56: warning: [contracts.precondition] precondition of state.liftBindingsAndDistinct().mergeWithChild is not satisfied.
                    .mergeWithChild();
                                   ^
  found   : state.liftBindingsAndDistinct().condition is @MaybePresent
  required: state.liftBindingsAndDistinct().condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:55: warning: [contracts.precondition] precondition of state.liftBindingsAndDistinct is not satisfied.
            State stateBeforeSimplification = state.liftBindingsAndDistinct()
                                                                           ^
  found   : state.condition is @MaybePresent
  required: state.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:59: warning: [contracts.precondition] precondition of stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).normalizeChild is not satisfied.
                    .normalizeChild(variableGenerator);
                                   ^
  found   : stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).condition is @MaybePresent
  required: stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:58: warning: [contracts.precondition] precondition of stateBeforeSimplification.simplifyAndPropagateDownConstraint is not satisfied.
            State newState = stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator)
                                                                                         ^
  found   : stateBeforeSimplification.condition is @MaybePresent
  required: stateBeforeSimplification.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:63: warning: [contracts.precondition] precondition of newState.createNormalizedTree is not satisfied.
                return newState.createNormalizedTree(variableGenerator, treeCache);
                                                    ^
  found   : newState.condition is @MaybePresent
  required: newState.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:83: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> condition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:96: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                        Optional<ImmutableExpression> condition, IQTree child) {
                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:183: warning: [contracts.precondition] precondition of liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).liftBindingsAndDistinct is not satisfied.
                        .liftBindingsAndDistinct();
                                                ^
  found   : this.liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).condition is @MaybePresent
  required: this.liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:188: warning: [contracts.precondition] precondition of liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).liftBindingsAndDistinct is not satisfied.
                        .liftBindingsAndDistinct();
                                                ^
  found   : this.liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).condition is @MaybePresent
  required: this.liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:226: warning: [method.invocation] call to get() not allowed on the given receiver.
                            .map(c -> termFactory.getConjunction(condition.get(), c))
                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:68: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<OrderByNode> orderByNode;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State(ImmutableList<UnaryOperatorNode> ancestors, Optional<OrderByNode> orderByNode, IQTree child,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:87: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentOrderByAndChild(UnaryOperatorNode newParent, Optional<OrderByNode> newOrderByNode, IQTree newChild) {
                                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:19: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:90: warning: [optional.collection] Don't use Optional to wrap a collection type.
                ? Optional.of(ImmutableList.of(termFactory.getDBConstant(cst.getValue(), inputType)))
                ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java:26: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTopPropagatedNumericTypeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:84: warning: [purity.not.sideeffectfree.call] call to side-effecting ImmutableSet.of not allowed in side-effect-free method
            return ImmutableSet.of(
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:85: warning: [purity.not.sideeffectfree.call] call to side-effecting AbstractMap.SimpleImmutableEntry<> not allowed in side-effect-free method
                    new AbstractMap.SimpleImmutableEntry<>(false, forFalse),
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:86: warning: [purity.not.sideeffectfree.call] call to side-effecting AbstractMap.SimpleImmutableEntry<> not allowed in side-effect-free method
                    new AbstractMap.SimpleImmutableEntry<>(true, forTrue)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java:132: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<ArgumentMapUnifier<T>> optional;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private Optional<Substitution<T>> optionalSubstitution;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:62: warning: [method.invocation] call to get() not allowed on the given receiver.
        T term2 = operations.applyToTerm(optionalSubstitution.get(), t2);
                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:90: warning: [method.invocation] call to get() not allowed on the given receiver.
                optionalSubstitution = Optional.of(operations.compose(s, optionalSubstitution.get()));
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on(", ").withKeyValueSeparator("/").join not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on(", ").withKeyValueSeparator not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:89: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Unexpected empty disjunction"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:99: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The first argument of a IF_ELSE_NULL must be an expression"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<ImmutableExpression> leftJoinExpression,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:60: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:68: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL distinct aggregate function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:102: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:128: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:135: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            ImmutableMap<ConcreteNumericRDFDatatype, Variable> numericSubTermVarMap, Optional<Variable> optionalIncompatibleCountVariable,
                                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:136: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleSubVariable, TermFactory termFactory) {
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)))
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:155: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java:173: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    static Optional<IRI> tryExtractSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:169: warning: [method.invocation] call to get() not allowed on the given receiver.
                                                    ? extractConstantWKTLiteralValue(termFactory, subterm).get()
                                                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:33: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit name: " + name));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:40: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit iri: " + iri));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:80: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:107: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The order by was expected to be kept"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java:59: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("A simplified expression was expected"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append("=").append(r).append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append("=").append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:32: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
        bf.append("\n====== constraints ==========\n");
                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:34: warning: [purity.not.sideeffectfree.call] call to side-effecting r.getUniqueConstraints not allowed in side-effect-free method
            for (UniqueConstraint uc : r.getUniqueConstraints())
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:35: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(uc).append not allowed in side-effect-free method
                bf.append(uc).append(";\n");
                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:35: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
                bf.append(uc).append(";\n");
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:36: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:37: warning: [purity.not.sideeffectfree.call] call to side-effecting r.getForeignKeys not allowed in side-effect-free method
            for (ForeignKeyConstraint fk : r.getForeignKeys())
                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:38: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(fk).append not allowed in side-effect-free method
                bf.append(fk).append(";\n");
                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:38: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
                bf.append(fk).append(";\n");
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:39: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:27: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
        StringBuilder bf = new StringBuilder();
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java:115: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
        private final ImmutableExpression expression;
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:99: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(functionSymbol.toString());
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:100: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append("(");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream().map(ImmutableTerm::toString).collect not allowed in side-effect-free method
                    .collect(Collectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream().map not allowed in side-effect-free method
                    .map(ImmutableTerm::toString)
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:102: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream not allowed in side-effect-free method
            List<String> argumentStrings = terms.stream()
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                    .collect(Collectors.toList());
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:106: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(String.join(",", argumentStrings));
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:107: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(")");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:108: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = sb.toString();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:98: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
            StringBuilder sb = new StringBuilder();
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:120: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
            return toString().equals(other.toString());
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:120: warning: [purity.not.deterministic.call] call to non-deterministic method other.toString not allowed in deterministic method
            return toString().equals(other.toString());
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:127: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java:133: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("Arity > 1 was expected"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:49: warning: [purity.not.deterministic.not.sideeffectfree.assign.field] field assignment not allowed in deterministic side-effect-free method
            next = shift();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:49: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting shift not allowed in deterministic side-effect-free method
            next = shift();
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:50: warning: [purity.not.deterministic.not.sideeffectfree.assign.field] field assignment not allowed in deterministic side-effect-free method
            movedToNext = true;
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:25: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map(Attribute::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:24: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map not allowed in side-effect-free method
                        .map(Attribute::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:23: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream not allowed in side-effect-free method
                getAttributes().stream()
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:25: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:108: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> ljCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:114: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                     Optional<ImmutableExpression> ljCondition,
                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:126: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       IQTree initialRightChild, Optional<ImmutableExpression> ljCondition,
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:131: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private LJNormalizationState updateConditionAndRightChild(Optional<ImmutableExpression> newLJCondition,
                                                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:141: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                UnaryOperatorNode newParent, Optional<ImmutableExpression> newLJCondition, IQTree newRightChild) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:146: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:158: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:208: warning: [purity.methodref] Incompatible purity declaration
                        childVariableNullability, this::applyLeftChildBindingLift)
                                                  ^
  Method in @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState
    @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState applyLeftChildBindingLift(@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
    is not a valid method reference for method in @MaybePresent BindingLiftConverter<@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState>
    @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState convert(@MaybePresent BindingLiftConverter<@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState> this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:322: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> ljCondition, Substitution<ImmutableTerm> naiveAscendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:470: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        provenanceVariable.orElseThrow(() -> new MinorOntopInternalBugException("An entry was expected")),
                                                      ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:657: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<Variable> rightProvenanceVariable, ImmutableSet<Variable> leftVariables) {
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:667: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                              Optional<Variable> defaultRightProvenanceVariable) {
                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:678: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("A default provenance variable was needed"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                         Optional<ImmutableExpression> initialJoiningCondition,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                  Optional<ImmutableExpression> newCondition,
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                      Optional<ImmutableExpression> joiningCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ConstructionNode childConstructionNode;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:153: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A lifted construction node was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:69: warning: [method.invocation] call to get() not allowed on the given receiver.
        return getOptionalFilterCondition().get();
                                               ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:213: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return FILTER_NODE_STR + getOptionalFilterString();
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:228: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalFilterCondition;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinOrFilterNodeImpl(Optional<ImmutableExpression> optionalFilterCondition,
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java:22: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nonRequiredVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:124: warning: [purity.methodref] Incompatible purity declaration
                variableMapper, termMapper, ImmutableMap.Builder::put, this::createSubstitution);
                                            ^
  Method in @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>
    @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> put(@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> this, @MaybePresent Variable p0, T extends @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>, @MaybePresent Variable, T extends @MaybePresent ImmutableTerm>
    void put(@MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>, @MaybePresent Variable, T extends @MaybePresent ImmutableTerm> this, @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> p0, @MaybePresent Variable p1, T extends @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:146: warning: [purity.methodref] Incompatible purity declaration
                v -> v, variableGenerator::generateNewVariableFromVar, ImmutableMap.Builder::put, m -> createSubstitution(m).injective());
                                                                       ^
  Method in @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>
    @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> put(@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> this, @MaybePresent Variable p0, @MaybePresent Variable p1)
    is not a valid method reference for method in @MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>, @MaybePresent Variable, @MaybePresent Variable>
    void put(@MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>, @MaybePresent Variable, @MaybePresent Variable> this, @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> p0, @MaybePresent Variable p1, @MaybePresent Variable p2)
  found   : []
  required: [SIDE_EFFECT_FREE]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:273: warning: [method.invocation] call to get() not allowed on the given receiver.
                        return attemptUnifying(term1, term2).get();
                                                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:142: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:170: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:184: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:67: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:69: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:76: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:179: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent Boolean>
  required: @MaybePresent Optional<@MaybePresent Boolean>
  Consequence: method in @MaybePresent Optional<@MaybePresent Boolean>
    @MaybePresent Boolean get(@Present Optional<@MaybePresent Boolean> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean>
    @MaybePresent Boolean apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean> this, @MaybePresent Optional<@MaybePresent Boolean> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:63: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:65: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:72: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:151: warning: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .map(oe -> oe
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:53: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(variableGenerator::generateNewVariable))
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:59: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public static IQTree toIQTree(ImmutableList<? extends IQTree> extensionalNodes, Optional<ImmutableExpression> joiningConditions,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:122: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return getExtensionalDataNodes(tree.getChildren().get(0), coreSingletons);
                                          ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:125: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of((ExtensionalDataNode)tree));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:128: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of());
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:131: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of(convertIntoExtensionalDataNode((ValuesNode) node, coreSingletons)));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:135: warning: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:141: warning: [optional.collection] Don't use Optional to wrap a collection type.
        return Optional.empty();
                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
            return ((FilterNode)tree.getRootNode()).getOptionalFilterCondition().get().flattenAND()
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java:67: warning: [method.invocation] call to get() not allowed on the given receiver.
                    dbFunctionSymbolFct.apply(dbTypeFactory.getDBStringType()).get(), subLexicalTerms.get(0));
                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:134: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("groups must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:266: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("An expression was expected"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:372: warning: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> ucsPartitionedByDisjointness.get(true).stream().noneMatch(set -> set.size() == 1 && set.stream().findFirst().get().equals(v)))
                                                                                                                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:405: warning: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> fdsPartitionedByDisjointness.get(true).stream().noneMatch(entry -> entry.getKey().size() == 1 && entry.getKey().stream().findFirst().get().equals(v)))
                                                                                                                                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:510: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:663: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .flatMap(t -> t);
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:767: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new QueryNodeSubstitutionException("The descending substitution " + mergedSubstitution
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:130: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expecting " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:222: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:228: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("cannot be empty because there is at least one variable in the templates (taken together)"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:413: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern injectivePattern; // lazy initalization
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:474: warning: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java:87: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern pattern;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:51: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                          Optional<ImmutableExpression> constraint,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:133: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(ConstructionNodeImpl.EmptyTreeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:288: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        v -> getDeterminedBy(Optional.ofNullable(substitution.get(v)).orElse(v), variableNullability)
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:592: warning: [optional.field] Don't use Optional as the type of a field.
        public final Optional<ImmutableExpression> filter;
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:597: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                          Optional<ImmutableExpression> newF) {
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java:21: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ImmutableExpression simplifiedExpression;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableGenerator variableGenerator;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java:105: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java:54: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:164: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get))
                             ^
  found   : @Present Optional<@MaybePresent DefinitionPushDownRequest>
  required: @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
  Consequence: method in @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest get(@Present Optional<@MaybePresent DefinitionPushDownRequest> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest> this, @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:202: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Substitution<ImmutableFunctionalTerm> computeSubstitution(Optional<Variable> optionalNumAvgVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalNumSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:204: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleCountVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:213: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, createAggregate(xsdDecimal, optionalNumSubVariable.get(), termFactory)));
                                                                                                       ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:219: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)));
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:236: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableFunctionalTerm computeLiftableTerm(Optional<Variable> optionalNumAvgVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:238: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:253: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeLexicalTerm(Optional<Variable> optionalFloatingAggVariable,
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                             Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:275: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeTypeTerm(Optional<Variable> optionalNumAvgVariable,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:277: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                          Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private]
    private IQ iq;
               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:11: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<DBTermType> itemType;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:18: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ArrayDBTermType(String arrayStr, TermTypeAncestry ancestry, Optional<DBTermType> itemType, ArrayTypeFromSignature parsingFunction) {
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:65: warning: [method.invocation] call to get() not allowed on the given receiver.
        return ImmutableList.of(this.itemType.get());
                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java:25: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(t -> t.negate(termFactory))).get();
                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:120: warning: [method.invocation] call to get() not allowed on the given receiver.
                                .get(),
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:125: warning: [method.invocation] call to get() not allowed on the given receiver.
                                .get()))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java:95: warning: [method.invocation] call to get() not allowed on the given receiver.
                        e -> e.getValue().get()));
                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2056: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(() -> getDBCastFunctionSymbol(inputType, dbStringType)));
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2073: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(() -> getDBCastFunctionSymbol(dbStringType, targetDBType));
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:48: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The first term of an IF_ELSE_NULL " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:68: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Inconsistent evaluation"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The first term in ifElseNullTerms was expected " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:177: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expected an immutable expression as first term"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:200: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("was expected an ImmutableExpression as first sub-term"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:235: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("Wrong index"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> definedVariable) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:64: warning: [argument] incompatible argument for parameter definedVariable of ProjectionDecomposerImpl.decomposeDefinition.
                        .map(t -> decomposeDefinition(t, variableGenerator, Optional.empty()))
                                                                                          ^
  found   : @MaybePresent Optional<@MaybePresent Variable>
  required: @Present Optional<@MaybePresent Variable>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:121: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<Substitution<ImmutableTerm>> substitution;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:83: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:94: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("otherTerms must be non-empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:100: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                         Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java:74: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> knownVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:40: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:116: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = printSubtree(this, "");
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:116: warning: [purity.not.sideeffectfree.call] call to side-effecting printSubtree not allowed in side-effect-free method
            string = printSubtree(this, "");
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:142: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:188: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<ImmutableExpression> normalizeConstraint(Optional<ImmutableExpression> constraint,
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:206: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                 Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator);
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QualifiedAttributeID.java:78: warning: [purity.not.sideeffectfree.call] call to side-effecting getSQLRendering not allowed in side-effect-free method
		return getSQLRendering();
		                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:39: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Long limit;
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:228: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("There should be one child"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:235: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one child expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:337: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RelationIDImpl.java:60: warning: [purity.not.sideeffectfree.call] call to side-effecting getSQLRendering not allowed in side-effect-free method
        return getSQLRendering();
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/DBConstantImpl.java:68: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((DBConstant)other).getValue not allowed in deterministic side-effect-free method
                    ((DBConstant) other).getValue().equals(this.value));
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IRIConstantImpl.java:68: warning: [purity.not.sideeffectfree.call] call to side-effecting iri.getIRIString not allowed in side-effect-free method
		return "<" + iri.getIRIString() + ">";
		                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java:61: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting otherType.getLanguageTag().filter not allowed in deterministic side-effect-free method
                    .filter(langTag::equals)
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java:60: warning: [purity.not.deterministic.call] call to non-deterministic method otherType.getLanguageTag not allowed in deterministic method
            return otherType.getLanguageTag()
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java:35: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  required: @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  Consequence: method in @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> get(@Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>> this, @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:349: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBHoursBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBHoursBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:351: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBMinutesBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBMinutesBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:353: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBSecondsBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBSecondsBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:355: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBMillisBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBMillisBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nullableVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:36: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableMap<Variable, Integer> variableMap;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:189: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map(Attribute::getID).map(QuotedID::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:188: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map(Attribute::getID).map not allowed in side-effect-free method
                        .map(QuotedID::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:187: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map not allowed in side-effect-free method
                        .map(Attribute::getID)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:186: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream not allowed in side-effect-free method
                attributes.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:189: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java:28: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTermTypeOriginException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:71: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new UnknownClassException(String.format(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnknownClassException(String.format(
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:17: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::everything;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> everything(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : [SIDE_EFFECT_FREE]
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:19: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidInteger;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidInteger(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:21: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidDecimal;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @MaybePresent Optional<@MaybePresent Boolean> isValidDecimal(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:23: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidDouble;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidDouble(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:25: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidUUID;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidUUID(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:30: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::unknown;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @MaybePresent Optional<@MaybePresent Boolean> unknown(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : [SIDE_EFFECT_FREE]
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:109: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> joiningCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:115: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                      Optional<ImmutableExpression> joiningCondition, VariableGenerator variableGenerator,
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:128: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        public State(ImmutableList<IQTree> children, Optional<ImmutableExpression> joiningCondition,
                                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateConditionAndChildren(Optional<ImmutableExpression> newCondition,
                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:148: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentConditionAndChildren(UnaryOperatorNode newParent, Optional<ImmutableExpression> newCondition,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:245: warning: [purity.methodref] Incompatible purity declaration
                        newChildrenVariableNullability, this::convertIntoState);
                                                        ^
  Method in @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State
    @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State convertIntoState(@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
    is not a valid method reference for method in @MaybePresent BindingLiftConverter<@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State>
    @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State convert(@MaybePresent BindingLiftConverter<@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State> this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> notNormalizedCondition, Substitution<ImmutableTerm> ascendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:452: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get);
                         ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:505: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<ImmutableExpression> condition;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:141: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final FilterNode sampleFilter;
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:143: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final ConstructionNode childConstructionNode;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:298: warning: [method.invocation] call to get() not allowed on the given receiver.
                    s -> newAggregationSubstitution.compose(substitutionFactory.getSubstitution(sampleVariable.get(), termFactory.getDBSample(termFactory.getDBIntegerConstant(1), termFactory.getTypeFactory().getDBTypeFactory().getDBLargeIntegerType())))
                                                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:12: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalExpression;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitutionImpl(Optional<ImmutableExpression> optionalExpression,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:48: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:52: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:56: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:60: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:64: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:147: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = determinants.stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:149: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:155: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#05 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm>
    capture#06 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:213: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  required: @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> get(@Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>> this, @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:220: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = uniqueConstraint.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:222: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:225: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.empty();
                                 ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:228: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#07 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm>
    capture#08 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:239: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:245: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> determinants = functionalDependency.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:247: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:249: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> dependents = functionalDependency.getDependents().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:251: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:258: warning: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#09 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm>
    capture#010 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:264: warning: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#011 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm>
    capture#012 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:311: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream().map((e)->e.getKey() + ":" + e.getValue()).collect not allowed in side-effect-free method
                .collect(Collectors.joining(",")));
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:310: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream().map not allowed in side-effect-free method
                .map(e -> e.getKey() + ":" + e.getValue())
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:309: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream not allowed in side-effect-free method
                argumentMap.entrySet().stream()
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:311: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                .collect(Collectors.joining(",")));
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:20: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:33: warning: [contracts.postcondition.override] Subclass postcondition is weaker for 'this.inputType' in checkValueValidityForDecomposition.
    protected boolean checkValueValidityForDecomposition(String value) {
                      ^
    In superclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultSimpleDBCastFunctionSymbol: @MaybePresent
    In subclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultCastIntegerToStringFunctionSymbol: no information
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:40: warning: [contracts.postcondition.override] Subclass postcondition is weaker for 'this.inputType' in evaluateStrictEqWithNonNullConstant.
    protected IncrementalEvaluation evaluateStrictEqWithNonNullConstant(ImmutableList<? extends ImmutableTerm> terms,
                                    ^
    In superclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultSimpleDBCastFunctionSymbol: @MaybePresent
    In subclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultCastIntegerToStringFunctionSymbol: no information
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:113: warning: [method.invocation] call to get() not allowed on the given receiver.
                        otherExpressionBuilder.add(evaluation.getNewExpression().get());
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:151: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("expressions must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:255: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:333: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type to compare with was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream().map(FunctionalDependency::toString).collect not allowed in side-effect-free method
                .collect(ImmutableCollectors.toList())));
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:75: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream().map not allowed in side-effect-free method
                .map(FunctionalDependency::toString)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:74: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream not allowed in side-effect-free method
        return String.format("[%s]", String.join("; ", dependencies.stream()
                                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting ImmutableCollectors.toList not allowed in side-effect-free method
                .collect(ImmutableCollectors.toList())));
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:153: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.stream().reduce not allowed in deterministic side-effect-free method
                .reduce(0, (sum, n) -> sum ^ n.hashCode(), Integer::sum);
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:152: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.stream not allowed in deterministic side-effect-free method
        return dependencies.stream()
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:206: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream().map(Variable::toString).collect not allowed in side-effect-free method
                                    .collect(Collectors.toList())),
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:205: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream().map not allowed in side-effect-free method
                                    .map(Variable::toString)
                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:204: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream not allowed in side-effect-free method
                            String.join(", ", determinants.stream()
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:206: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                                    .collect(Collectors.toList())),
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:209: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream().map(Variable::toString).collect not allowed in side-effect-free method
                                    .collect(Collectors.toList()))
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:208: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream().map not allowed in side-effect-free method
                                    .map(Variable::toString)
                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:207: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream not allowed in side-effect-free method
                            String.join(", ", dependents.stream()
                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:209: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                                    .collect(Collectors.toList()))
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:42: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
	private final DBConstant doubleNaN;
	                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:214: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	public Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream) {
	                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:40: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<Variable> indexVariable;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:47: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                            @Assisted Optional<Variable> indexVariable,
                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:82: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<TermType> inferOutputType(Optional<TermType> flattenedVarType) {
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:131: warning: [purity.not.sideeffectfree.call] call to side-effecting indexVariable.map not allowed in side-effect-free method
                indexVariable.map(v -> ", " + v + "/indexIn(" + flattenedVariable + ")").orElse("") +
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:147: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:150: warning: [purity.methodref] Incompatible purity declaration
                IQTree::applyDescendingSubstitution);
                ^
  Method in @MaybePresent IQTree
    @MaybePresent IQTree applyDescendingSubstitution(@MaybePresent IQTree this, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p0, @MaybePresent Optional<@MaybePresent ImmutableExpression> p1, @MaybePresent VariableGenerator p2)
    is not a valid method reference for method in @MaybePresent PropagateToChild
    @MaybePresent IQTree apply(@MaybePresent PropagateToChild this, @MaybePresent IQTree p0, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p1, @MaybePresent Optional<@MaybePresent ImmutableExpression> p2, @MaybePresent VariableGenerator p3)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                               Optional<ImmutableExpression> constraint, IQTree child,
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                (c, s, constraint, vGenerator) -> c.applyDescendingSubstitutionWithoutOptimizing(s, vGenerator));
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:236: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(constraint -> Stream.concat(constraint.stream(), Stream.of(indexVariable.get()))
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:406: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                     Optional<ImmutableExpression> optionalConstraint, VariableGenerator variableGenerator);
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java:124: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinLikeNodeImpl(Optional<ImmutableExpression> optionalJoinCondition,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java:107: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:29: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("BooleanDBIfElseNullFunctionSymbol was " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:69: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Was an expected an immutable expression " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:388: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:391: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:433: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A projected variable was expected as argument"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:485: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  required: @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> get(@Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>> this, @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:627: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream().map((tuple)->tuple.stream().map(String::valueOf).collect(Collectors.joining(",", " (", ")"))).collect not allowed in side-effect-free method
                .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream().map not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:626: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream().map(String::valueOf).collect not allowed in side-effect-free method
                .collect(Collectors.joining(","," (",")")))
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:625: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream().map not allowed in side-effect-free method
                .map(String::valueOf)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:626: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                .collect(Collectors.joining(","," (",")")))
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java:13: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<String> optionalSuffix;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable boundVariable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java:44: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<String> getSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting relation.getID().getSQLRendering not allowed in side-effect-free method
        return "ALTER TABLE " + relation.getID().getSQLRendering() +
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:156: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map((c)->c.getAttribute().getID().toString()).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:155: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map not allowed in side-effect-free method
                        .map(c -> c.getAttribute().getID().toString())
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:154: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream not allowed in side-effect-free method
                components.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:156: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting referencedRelation.getID().getSQLRendering not allowed in side-effect-free method
                ") REFERENCES " + referencedRelation.getID().getSQLRendering() +
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:161: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map((c)->c.getReferencedAttribute().getID().toString()).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:160: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map not allowed in side-effect-free method
                        .map(c -> c.getReferencedAttribute().getID().toString())
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:159: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream not allowed in side-effect-free method
                components.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:161: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
            return toString().equals(other.toString());
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method other.toString not allowed in deterministic method
            return toString().equals(other.toString());
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:87: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:97: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(predicate.toString());
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:98: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append("(");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:101: warning: [purity.not.sideeffectfree.call] call to side-effecting arguments.stream().map not allowed in side-effect-free method
                    .map(VariableOrGroundTerm::toString);
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:100: warning: [purity.not.sideeffectfree.call] call to side-effecting arguments.stream not allowed in side-effect-free method
            Stream<String> argumentStrings = arguments.stream()
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentStrings.collect not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(")");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:105: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = sb.toString();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:96: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
            StringBuilder sb = new StringBuilder();
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:50: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
            return optionalMergedTypeConstant.orElseThrow(() ->
                                                         ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:75: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:48: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private LeftJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalJoinCondition,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:112: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return LEFT_JOIN_NODE_STR + getOptionalFilterString();
                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:243: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:363: warning: [method.invocation] call to get() not allowed on the given receiver.
                        optionalFilterCondition.get(), nullableGroups, rightVariables))
                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:428: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private IQTree propagateDownCondition(Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:43: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:102: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(UnsatisfiableConditionException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:130: warning: [method.invocation] call to get() not allowed on the given receiver.
                groundFunctionalSubstitution.get().apply(partiallySimplifiedExpression.get()),
                                                                                          ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:57: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:64: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:38: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Substitution<NonVariableTerm>> possibleVariableDefinitions;
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:44: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:47: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private FunctionalDependencies functionalDependencies;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:50: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final TermType termType;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable variable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:56: warning: [purity.not.deterministic.call] call to non-deterministic method getTermType not allowed in deterministic method
                && getTermType().equals(((TermTypeInference) o).getTermType());
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:56: warning: [purity.not.deterministic.call] call to non-deterministic method ((TermTypeInference)o).getTermType not allowed in deterministic method
                && getTermType().equals(((TermTypeInference) o).getTermType());
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:61: warning: [purity.not.deterministic.call] call to non-deterministic method getTermType not allowed in deterministic method
        return getTermType().hashCode();
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> topSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> subSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected InnerJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalFilterCondition,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:118: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:136: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return JOIN_NODE_STR + getOptionalFilterString();
                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:149: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
461 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-173348-w74vst6l/iteration2' '-classpath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-api/0.5.0/commons-rdf-api-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-simple/0.5.0/commons-rdf-simple-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.1-jre/guava-32.0.1-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.8.0/checker-qual-3.8.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.5.1/error_prone_annotations-2.5.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/guice/5.0.1/guice-5.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/extensions/guice-assistedinject/5.0.1/guice-assistedinject-5.0.1.jar:/homes/gws/jmsy/.m2/repository/io/github/solf/nullanno/3.0.0/nullanno-3.0.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/io/mikael/urlbuilder/2.0.9/urlbuilder-2.0.9.jar:/homes/gws/jmsy/.m2/repository/org/locationtech/proj4j/proj4j/1.1.1/proj4j-1.1.1.jar:/homes/gws/jmsy/.m2/repository/commons-codec/commons-codec/1.14/commons-codec-1.14.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.2/jackson-core-2.13.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.4.2/jackson-databind-2.13.4.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.2/jackson-annotations-2.13.2.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model/4.2.4/rdf4j-model-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-api/4.2.4/rdf4j-model-api-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-annotation/4.2.4/rdf4j-common-annotation-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-vocabulary/4.2.4/rdf4j-model-vocabulary-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-exception/4.2.4/rdf4j-common-exception-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-text/4.2.4/rdf4j-common-text-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-io/4.2.4/rdf4j-common-io-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-util/4.2.4/rdf4j-common-util-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-iterator/4.2.4/rdf4j-common-iterator-4.2.4.jar:/homes/gws/jmsy/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes' '-sourcepath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java:/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations' '-g' '--release' '11' '--release' '11' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBNonStrictEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCaseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBHashFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotYetTypedEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/CompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/LinearInclusionDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSampleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/VariableOrGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBStdevFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/EmptyQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NowSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFDatatypeStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/UnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidQueryNodeException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/NaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AttributeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RegexSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConstructionSubstitutionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/WKTLiteralValue.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonPostProcessedSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBoundaryFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRISafenessDeclarationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/QueryRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolSerializer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NonStrictEqSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UnsupportedRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeInference.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BoundSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQTreeTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/ExpressionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/TemplateParser.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalInequalityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsLiteralSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/ObjectStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DatabaseInfoSupplier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StartsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsStringEmptyFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/LeafIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractSubStrSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrBeforeOrAfterFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphism.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidOntopConfigurationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/UOM.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractNamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/IQVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderComparatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedBinaryMathOperationTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/VariableNullability.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReduciblePositiveAritySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/VariableImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/AbstractPredicateExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/LowerCaseDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRIStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/TrueNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeAncestry.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DivideSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/NonDeterministicDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FlattenNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNumberNormAsBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/CompositeIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FlattenNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTimeTzNormalizationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalAndSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/DefPushDownRequestImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ExtractLexicalTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/TriplePredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DBParameters.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDateInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofDoubleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/SimpleRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenElseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/QueryTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/DistinctNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnsatisfiableConditionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MetadataExtractionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/AbstractExpressionTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/TemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GreaterThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnSimpleBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/DefinitionPushDownRequest.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EqFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DateTruncSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OFN.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidIntermediateQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfTouchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfWithinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ZeroAryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/TriplePredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/NumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFTermTypeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/ArgumentSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeSubstitutionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBGroupConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ConstructionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/Template.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/JsonDBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypeFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/QuotedIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/IRITermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/TypeConstantDictionary.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MultitypedInputUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLangTagLikeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractBinaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/FunctionalTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoveredByFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Attribute.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/FalseOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryNumericLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/PartiallyTypedSimpleCastTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BooleanDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Nullifiers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/EmptyNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Constant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhOverlapFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/SQLStandardQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/QueryRenamerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSimilarToFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/BinaryNonCommutativeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/StandardNotationDBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImplUsingRelate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRIStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DateDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtendedProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIfDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQSyntacticContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractSimpleMultitypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MockupDBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/LanguageTag.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/PredicateConstants.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioNonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/VarianceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/NotRequiredVariableRemover.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SameTermSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfIntersectsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/RDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioArrayAccessDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractIsASPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/DistinctNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBVarianceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RDFAtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConstructionSubstitutionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EBVSPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IriSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/EmptyNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelSettings.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDefaultInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BlankNodeTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExplicitVariableProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/SliceNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBSumFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEO.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrUUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictNumericEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/AggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnMultitypedInputBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSymDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DistinctVariableOnlyDataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryStringSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/NoNullValuesEnforcerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/QueryTransformerFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimpleTypedDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFLiteralConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IndexInFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFLiteralConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/ConversionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/PartiallyTypedSimpleCastTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UUIDDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBnodeSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/ObjectTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalNonStrictEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/IDGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha384SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/StringUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullToleratingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/Predicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/CoreUtilsFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/QuadPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableExpression.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrlenSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryModifierNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QualifiedAttributeID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/Ontop.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBufferFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractUnaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha256SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEOF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/LangSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OntopInternal.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNodeVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/OfflineMetadataProviderBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/SingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryBooleanSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofIntersectionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsARDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/InjectiveSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ImmutableMetadata.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/OrderByNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalLangMatchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfOverlapsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/MetaRDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RelationIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofConvexHullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRISafenessDeclarationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/DBConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/AGG.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBTypeConversionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GroupConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrBeforeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDatetimeInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypePropagationSubstitutionHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/ChildTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ForcingFloatingDBAvgFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/Substitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangMatchesSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/QuadPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQContainmentCheckUnderLIDs.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBCountFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/FunctionalDependencyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha512SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLexicalNonStrictEqOrInequalityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/AggregationNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/DBConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/AggregationNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/RDFAtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ValuesNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDefaultEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/BNodeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/LinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RandSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBArrayObjectAccessFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryBooleanOperatorSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IRIConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SQLServerDBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDF2DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XSD.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundTermTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFTermTypeConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/LegacyVariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateMFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8DcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/R2RMLIRISafeEncoder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDistanceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/IntensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/AbstractTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DelegatingMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalOrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrAfterSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NumericBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Serializers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/GenericDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NativeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/BasicSingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/BnodeStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIRIFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBRegexMatchAsLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/CoreSingletons.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NullConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrAfterFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha1SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/TrueNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonVariableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ConcreteNumericRDFDatatypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/AttributeNotFoundException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Lens.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/ConcreteIQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNumericInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MinorOntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/InnerJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/NoNullValueEnforcer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/WrappedDBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIntegerFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TrueOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Variable.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EndsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/NotYetTypedEqualityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhMeetFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/InequalityLabel.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/VariableNonRequirement.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/CompositeQueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/OntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDateEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/BasicLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMaxFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/BNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictNEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/FunctionalDependency.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/BnodeTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IfSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/VariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ConcreteNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ForeignKeyConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofWKTFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictStringEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AreCompatibleRDFStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/UniqueConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISODenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/InjectiveSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryCastDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/FunctionalTermSimplification.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoversFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XPathFunction.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsBlankSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/OrderByNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/LeftJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/QueryNodeRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrEndsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8PoFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AggregationSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Md5SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/IntensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/StringDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReplaceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/BooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/ProjectionDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIsNullOrNotFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/NamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBAvgFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedEqualityTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RelationPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MetaRDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/IRITemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ObjectConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsIRISPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonConstantTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr3SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBTypeConversionFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DenodoDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractHashSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr2SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/DistinctNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelConfiguration.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/TermNullabilityEvaluator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CoalesceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermTypeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/EqualsTrueDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FilterNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryModifierNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DistinctVariableOnlyDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/ExpressionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LessThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEnvelopeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/CachingMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BnodeStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/HomogeneousIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISONormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AvgSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SimpleUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryNonCommutativeOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofUnionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/LexicalSpace.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/CoreSingletonsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CountSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StdevSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrBeforeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/SPARQL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDatetimeEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNonDeterministicNullaryFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryComparisonSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/FullLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/NotRequiredVariableRemoverImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/UnaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RawQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IncrementalEvaluation.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/node/HomogeneousQueryNodeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/PredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullRejectingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StringBooleanBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractArgDependentTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TemporaryDBTypeConversionToStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/RelationExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ContainsSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/ImmutableTermsSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DatatypeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/IllegalTreeUpdateException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/NativeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/VariableGeneratorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IRIConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhInsideFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStrBeforeOrAfterSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OWL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfCrossesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStringInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/RelationNotFoundInMetadataException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTree2NativeNodeGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/FunctionalDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagWithPlaceholderFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDFS.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/TermNullabilityEvaluatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/LazyRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/TrueOrNullFunctionSymbol.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java:60: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream);
	                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java:15: warning: [optional.collection] Don't use Optional to wrap a collection type.
    Optional<ImmutableList<DBConstant>> decompose(DBConstant stringConstant);
                                        ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:92: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(term + " was expected to be " +
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:111: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The evaluation was expected " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:150: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(0) + " was expected to be " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:162: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(2*i) + " was expected to be " +
                                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:219: warning: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:364: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("Was expected to find this function symbol at the indicated position"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java:32: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator);
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java:37: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        i -> Optional.<T>ofNullable(argumentMap1.get(i)).orElseGet(() -> argumentMap2.get(i))));
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    JoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java:50: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild, VariableGenerator variableGenerator);
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java:16: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java:13: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    CommutativeJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<TermType> inferOutputType(Optional<TermType> extractSingleTermType);
                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:28: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map(Attribute::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:27: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map not allowed in side-effect-free method
                        .map(Attribute::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:26: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream not allowed in side-effect-free method
                getAttributes().stream()
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:28: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java:18: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String dbVersion;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Supplier<Injector> injectorSupplier;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Injector injector;
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:139: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Boolean> testMode = Optional.empty();
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:141: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Properties> inputProperties = Optional.empty();
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:42: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode createInnerJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:46: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode createLeftJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:52: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                  Optional<Variable> indexVariable, DBTermType dbTermType);
                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java:115: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnsupportedOperationException("No @IDFactoryType annotation found"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter((o)->(o instanceof TermType)).map((o)->(TermType)o).filter not allowed in deterministic side-effect-free method
                .filter(o -> o.toString().equals(toString()))
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:74: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter((o)->(o instanceof TermType)).map not allowed in deterministic side-effect-free method
                .map(o -> (TermType) o)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:73: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter not allowed in deterministic side-effect-free method
                .filter(o -> (o instanceof TermType))
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:72: warning: [purity.not.deterministic.call] call to non-deterministic method Optional.ofNullable not allowed in deterministic method
        return Optional.ofNullable(other)
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.call] call to non-deterministic method o.toString not allowed in deterministic method
                .filter(o -> o.toString().equals(toString()))
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final IRI functionIRI;
                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:21: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:52: warning: [contracts.precondition] precondition of new State(initialFilterNode, initialChild).normalizeChild is not satisfied.
                .normalizeChild(variableGenerator);
                               ^
  found   : "new State(initialFilterNode, initia...".condition is @MaybePresent
  required: "new State(initialFilterNode, initia...".condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:56: warning: [contracts.precondition] precondition of state.liftBindingsAndDistinct().mergeWithChild is not satisfied.
                    .mergeWithChild();
                                   ^
  found   : state.liftBindingsAndDistinct().condition is @MaybePresent
  required: state.liftBindingsAndDistinct().condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:55: warning: [contracts.precondition] precondition of state.liftBindingsAndDistinct is not satisfied.
            State stateBeforeSimplification = state.liftBindingsAndDistinct()
                                                                           ^
  found   : state.condition is @MaybePresent
  required: state.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:59: warning: [contracts.precondition] precondition of stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).normalizeChild is not satisfied.
                    .normalizeChild(variableGenerator);
                                   ^
  found   : stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).condition is @MaybePresent
  required: stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:58: warning: [contracts.precondition] precondition of stateBeforeSimplification.simplifyAndPropagateDownConstraint is not satisfied.
            State newState = stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator)
                                                                                         ^
  found   : stateBeforeSimplification.condition is @MaybePresent
  required: stateBeforeSimplification.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:63: warning: [contracts.precondition] precondition of newState.createNormalizedTree is not satisfied.
                return newState.createNormalizedTree(variableGenerator, treeCache);
                                                    ^
  found   : newState.condition is @MaybePresent
  required: newState.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:83: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> condition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:96: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                        Optional<ImmutableExpression> condition, IQTree child) {
                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:183: warning: [contracts.precondition] precondition of liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).liftBindingsAndDistinct is not satisfied.
                        .liftBindingsAndDistinct();
                                                ^
  found   : this.liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).condition is @MaybePresent
  required: this.liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:188: warning: [contracts.precondition] precondition of liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).liftBindingsAndDistinct is not satisfied.
                        .liftBindingsAndDistinct();
                                                ^
  found   : this.liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).condition is @MaybePresent
  required: this.liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:226: warning: [method.invocation] call to get() not allowed on the given receiver.
                            .map(c -> termFactory.getConjunction(condition.get(), c))
                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:68: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<OrderByNode> orderByNode;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State(ImmutableList<UnaryOperatorNode> ancestors, Optional<OrderByNode> orderByNode, IQTree child,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:87: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentOrderByAndChild(UnaryOperatorNode newParent, Optional<OrderByNode> newOrderByNode, IQTree newChild) {
                                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:19: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:90: warning: [optional.collection] Don't use Optional to wrap a collection type.
                ? Optional.of(ImmutableList.of(termFactory.getDBConstant(cst.getValue(), inputType)))
                ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java:26: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTopPropagatedNumericTypeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:84: warning: [purity.not.sideeffectfree.call] call to side-effecting ImmutableSet.of not allowed in side-effect-free method
            return ImmutableSet.of(
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:85: warning: [purity.not.sideeffectfree.call] call to side-effecting AbstractMap.SimpleImmutableEntry<> not allowed in side-effect-free method
                    new AbstractMap.SimpleImmutableEntry<>(false, forFalse),
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:86: warning: [purity.not.sideeffectfree.call] call to side-effecting AbstractMap.SimpleImmutableEntry<> not allowed in side-effect-free method
                    new AbstractMap.SimpleImmutableEntry<>(true, forTrue)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java:132: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<ArgumentMapUnifier<T>> optional;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private Optional<Substitution<T>> optionalSubstitution;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:62: warning: [method.invocation] call to get() not allowed on the given receiver.
        T term2 = operations.applyToTerm(optionalSubstitution.get(), t2);
                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:90: warning: [method.invocation] call to get() not allowed on the given receiver.
                optionalSubstitution = Optional.of(operations.compose(s, optionalSubstitution.get()));
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on(", ").withKeyValueSeparator("/").join not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on(", ").withKeyValueSeparator not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:89: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Unexpected empty disjunction"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:99: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The first argument of a IF_ELSE_NULL must be an expression"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<ImmutableExpression> leftJoinExpression,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:60: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:68: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL distinct aggregate function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:102: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:128: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:135: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            ImmutableMap<ConcreteNumericRDFDatatype, Variable> numericSubTermVarMap, Optional<Variable> optionalIncompatibleCountVariable,
                                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:136: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleSubVariable, TermFactory termFactory) {
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)))
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:155: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java:173: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    static Optional<IRI> tryExtractSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:169: warning: [method.invocation] call to get() not allowed on the given receiver.
                                                    ? extractConstantWKTLiteralValue(termFactory, subterm).get()
                                                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:33: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit name: " + name));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:40: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit iri: " + iri));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:80: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:107: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The order by was expected to be kept"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java:59: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("A simplified expression was expected"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append("=").append(r).append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append("=").append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:32: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
        bf.append("\n====== constraints ==========\n");
                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:34: warning: [purity.not.sideeffectfree.call] call to side-effecting r.getUniqueConstraints not allowed in side-effect-free method
            for (UniqueConstraint uc : r.getUniqueConstraints())
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:35: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(uc).append not allowed in side-effect-free method
                bf.append(uc).append(";\n");
                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:35: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
                bf.append(uc).append(";\n");
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:36: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:37: warning: [purity.not.sideeffectfree.call] call to side-effecting r.getForeignKeys not allowed in side-effect-free method
            for (ForeignKeyConstraint fk : r.getForeignKeys())
                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:38: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(fk).append not allowed in side-effect-free method
                bf.append(fk).append(";\n");
                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:38: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
                bf.append(fk).append(";\n");
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:39: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:27: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
        StringBuilder bf = new StringBuilder();
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java:115: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
        private final ImmutableExpression expression;
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:99: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(functionSymbol.toString());
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:100: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append("(");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream().map(ImmutableTerm::toString).collect not allowed in side-effect-free method
                    .collect(Collectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream().map not allowed in side-effect-free method
                    .map(ImmutableTerm::toString)
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:102: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream not allowed in side-effect-free method
            List<String> argumentStrings = terms.stream()
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                    .collect(Collectors.toList());
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:106: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(String.join(",", argumentStrings));
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:107: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(")");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:108: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = sb.toString();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:98: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
            StringBuilder sb = new StringBuilder();
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:120: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
            return toString().equals(other.toString());
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:120: warning: [purity.not.deterministic.call] call to non-deterministic method other.toString not allowed in deterministic method
            return toString().equals(other.toString());
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:127: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java:133: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("Arity > 1 was expected"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:49: warning: [purity.not.deterministic.not.sideeffectfree.assign.field] field assignment not allowed in deterministic side-effect-free method
            next = shift();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:49: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting shift not allowed in deterministic side-effect-free method
            next = shift();
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:50: warning: [purity.not.deterministic.not.sideeffectfree.assign.field] field assignment not allowed in deterministic side-effect-free method
            movedToNext = true;
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:25: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map(Attribute::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:24: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map not allowed in side-effect-free method
                        .map(Attribute::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:23: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream not allowed in side-effect-free method
                getAttributes().stream()
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:25: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:108: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> ljCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:114: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                     Optional<ImmutableExpression> ljCondition,
                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:126: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       IQTree initialRightChild, Optional<ImmutableExpression> ljCondition,
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:131: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private LJNormalizationState updateConditionAndRightChild(Optional<ImmutableExpression> newLJCondition,
                                                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:141: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                UnaryOperatorNode newParent, Optional<ImmutableExpression> newLJCondition, IQTree newRightChild) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:146: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:158: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:208: warning: [purity.methodref] Incompatible purity declaration
                        childVariableNullability, this::applyLeftChildBindingLift)
                                                  ^
  Method in @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState
    @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState applyLeftChildBindingLift(@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
    is not a valid method reference for method in @MaybePresent BindingLiftConverter<@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState>
    @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState convert(@MaybePresent BindingLiftConverter<@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState> this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:322: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> ljCondition, Substitution<ImmutableTerm> naiveAscendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:470: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        provenanceVariable.orElseThrow(() -> new MinorOntopInternalBugException("An entry was expected")),
                                                      ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:657: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<Variable> rightProvenanceVariable, ImmutableSet<Variable> leftVariables) {
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:667: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                              Optional<Variable> defaultRightProvenanceVariable) {
                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:678: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("A default provenance variable was needed"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                         Optional<ImmutableExpression> initialJoiningCondition,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                  Optional<ImmutableExpression> newCondition,
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                      Optional<ImmutableExpression> joiningCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ConstructionNode childConstructionNode;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:153: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A lifted construction node was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:69: warning: [method.invocation] call to get() not allowed on the given receiver.
        return getOptionalFilterCondition().get();
                                               ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:213: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return FILTER_NODE_STR + getOptionalFilterString();
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:228: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalFilterCondition;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinOrFilterNodeImpl(Optional<ImmutableExpression> optionalFilterCondition,
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java:22: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nonRequiredVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:124: warning: [purity.methodref] Incompatible purity declaration
                variableMapper, termMapper, ImmutableMap.Builder::put, this::createSubstitution);
                                            ^
  Method in @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>
    @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> put(@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> this, @MaybePresent Variable p0, T extends @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>, @MaybePresent Variable, T extends @MaybePresent ImmutableTerm>
    void put(@MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>, @MaybePresent Variable, T extends @MaybePresent ImmutableTerm> this, @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> p0, @MaybePresent Variable p1, T extends @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:146: warning: [purity.methodref] Incompatible purity declaration
                v -> v, variableGenerator::generateNewVariableFromVar, ImmutableMap.Builder::put, m -> createSubstitution(m).injective());
                                                                       ^
  Method in @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>
    @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> put(@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> this, @MaybePresent Variable p0, @MaybePresent Variable p1)
    is not a valid method reference for method in @MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>, @MaybePresent Variable, @MaybePresent Variable>
    void put(@MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>, @MaybePresent Variable, @MaybePresent Variable> this, @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> p0, @MaybePresent Variable p1, @MaybePresent Variable p2)
  found   : []
  required: [SIDE_EFFECT_FREE]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:273: warning: [method.invocation] call to get() not allowed on the given receiver.
                        return attemptUnifying(term1, term2).get();
                                                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:142: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:170: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:184: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:67: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:69: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:76: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:179: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent Boolean>
  required: @MaybePresent Optional<@MaybePresent Boolean>
  Consequence: method in @MaybePresent Optional<@MaybePresent Boolean>
    @MaybePresent Boolean get(@Present Optional<@MaybePresent Boolean> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean>
    @MaybePresent Boolean apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean> this, @MaybePresent Optional<@MaybePresent Boolean> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:63: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:65: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:72: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:151: warning: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .map(oe -> oe
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:53: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(variableGenerator::generateNewVariable))
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:59: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public static IQTree toIQTree(ImmutableList<? extends IQTree> extensionalNodes, Optional<ImmutableExpression> joiningConditions,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:122: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return getExtensionalDataNodes(tree.getChildren().get(0), coreSingletons);
                                          ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:125: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of((ExtensionalDataNode)tree));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:128: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of());
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:131: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of(convertIntoExtensionalDataNode((ValuesNode) node, coreSingletons)));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:135: warning: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:141: warning: [optional.collection] Don't use Optional to wrap a collection type.
        return Optional.empty();
                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
            return ((FilterNode)tree.getRootNode()).getOptionalFilterCondition().get().flattenAND()
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java:67: warning: [method.invocation] call to get() not allowed on the given receiver.
                    dbFunctionSymbolFct.apply(dbTypeFactory.getDBStringType()).get(), subLexicalTerms.get(0));
                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:134: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("groups must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:266: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("An expression was expected"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:372: warning: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> ucsPartitionedByDisjointness.get(true).stream().noneMatch(set -> set.size() == 1 && set.stream().findFirst().get().equals(v)))
                                                                                                                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:405: warning: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> fdsPartitionedByDisjointness.get(true).stream().noneMatch(entry -> entry.getKey().size() == 1 && entry.getKey().stream().findFirst().get().equals(v)))
                                                                                                                                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:510: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:663: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .flatMap(t -> t);
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:767: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new QueryNodeSubstitutionException("The descending substitution " + mergedSubstitution
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:130: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expecting " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:222: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:228: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("cannot be empty because there is at least one variable in the templates (taken together)"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:413: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern injectivePattern; // lazy initalization
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:474: warning: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java:87: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern pattern;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:51: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                          Optional<ImmutableExpression> constraint,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:133: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(ConstructionNodeImpl.EmptyTreeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:288: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        v -> getDeterminedBy(Optional.ofNullable(substitution.get(v)).orElse(v), variableNullability)
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:592: warning: [optional.field] Don't use Optional as the type of a field.
        public final Optional<ImmutableExpression> filter;
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:597: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                          Optional<ImmutableExpression> newF) {
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java:21: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ImmutableExpression simplifiedExpression;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableGenerator variableGenerator;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java:105: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java:54: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:164: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get))
                             ^
  found   : @Present Optional<@MaybePresent DefinitionPushDownRequest>
  required: @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
  Consequence: method in @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest get(@Present Optional<@MaybePresent DefinitionPushDownRequest> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest> this, @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:202: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Substitution<ImmutableFunctionalTerm> computeSubstitution(Optional<Variable> optionalNumAvgVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalNumSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:204: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleCountVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:213: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, createAggregate(xsdDecimal, optionalNumSubVariable.get(), termFactory)));
                                                                                                       ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:219: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)));
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:236: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableFunctionalTerm computeLiftableTerm(Optional<Variable> optionalNumAvgVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:238: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:253: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeLexicalTerm(Optional<Variable> optionalFloatingAggVariable,
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                             Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:275: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeTypeTerm(Optional<Variable> optionalNumAvgVariable,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:277: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                          Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private]
    private IQ iq;
               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:11: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<DBTermType> itemType;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:18: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ArrayDBTermType(String arrayStr, TermTypeAncestry ancestry, Optional<DBTermType> itemType, ArrayTypeFromSignature parsingFunction) {
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:65: warning: [method.invocation] call to get() not allowed on the given receiver.
        return ImmutableList.of(this.itemType.get());
                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java:25: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(t -> t.negate(termFactory))).get();
                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:120: warning: [method.invocation] call to get() not allowed on the given receiver.
                                .get(),
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:125: warning: [method.invocation] call to get() not allowed on the given receiver.
                                .get()))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java:95: warning: [method.invocation] call to get() not allowed on the given receiver.
                        e -> e.getValue().get()));
                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2056: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(() -> getDBCastFunctionSymbol(inputType, dbStringType)));
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2073: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(() -> getDBCastFunctionSymbol(dbStringType, targetDBType));
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:48: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The first term of an IF_ELSE_NULL " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:68: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Inconsistent evaluation"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The first term in ifElseNullTerms was expected " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:177: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expected an immutable expression as first term"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:200: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("was expected an ImmutableExpression as first sub-term"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:235: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("Wrong index"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> definedVariable) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:64: warning: [argument] incompatible argument for parameter definedVariable of ProjectionDecomposerImpl.decomposeDefinition.
                        .map(t -> decomposeDefinition(t, variableGenerator, Optional.empty()))
                                                                                          ^
  found   : @MaybePresent Optional<@MaybePresent Variable>
  required: @Present Optional<@MaybePresent Variable>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:121: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<Substitution<ImmutableTerm>> substitution;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:83: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:94: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("otherTerms must be non-empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:100: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                         Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java:74: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> knownVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:40: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:116: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = printSubtree(this, "");
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:116: warning: [purity.not.sideeffectfree.call] call to side-effecting printSubtree not allowed in side-effect-free method
            string = printSubtree(this, "");
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:142: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:188: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<ImmutableExpression> normalizeConstraint(Optional<ImmutableExpression> constraint,
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:206: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                 Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator);
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QualifiedAttributeID.java:78: warning: [purity.not.sideeffectfree.call] call to side-effecting getSQLRendering not allowed in side-effect-free method
		return getSQLRendering();
		                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:39: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Long limit;
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:228: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("There should be one child"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:235: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one child expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:337: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RelationIDImpl.java:60: warning: [purity.not.sideeffectfree.call] call to side-effecting getSQLRendering not allowed in side-effect-free method
        return getSQLRendering();
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/DBConstantImpl.java:68: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((DBConstant)other).getValue not allowed in deterministic side-effect-free method
                    ((DBConstant) other).getValue().equals(this.value));
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IRIConstantImpl.java:68: warning: [purity.not.sideeffectfree.call] call to side-effecting iri.getIRIString not allowed in side-effect-free method
		return "<" + iri.getIRIString() + ">";
		                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java:61: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting otherType.getLanguageTag().filter not allowed in deterministic side-effect-free method
                    .filter(langTag::equals)
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java:60: warning: [purity.not.deterministic.call] call to non-deterministic method otherType.getLanguageTag not allowed in deterministic method
            return otherType.getLanguageTag()
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java:35: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  required: @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  Consequence: method in @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> get(@Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>> this, @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:349: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBHoursBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBHoursBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:351: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBMinutesBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBMinutesBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:353: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBSecondsBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBSecondsBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:355: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBMillisBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBMillisBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nullableVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:36: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableMap<Variable, Integer> variableMap;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:189: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map(Attribute::getID).map(QuotedID::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:188: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map(Attribute::getID).map not allowed in side-effect-free method
                        .map(QuotedID::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:187: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map not allowed in side-effect-free method
                        .map(Attribute::getID)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:186: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream not allowed in side-effect-free method
                attributes.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:189: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java:28: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTermTypeOriginException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:71: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new UnknownClassException(String.format(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnknownClassException(String.format(
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:17: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::everything;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> everything(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : [SIDE_EFFECT_FREE]
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:19: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidInteger;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidInteger(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:21: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidDecimal;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @MaybePresent Optional<@MaybePresent Boolean> isValidDecimal(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:23: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidDouble;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidDouble(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:25: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidUUID;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidUUID(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:30: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::unknown;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @MaybePresent Optional<@MaybePresent Boolean> unknown(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : [SIDE_EFFECT_FREE]
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:109: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> joiningCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:115: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                      Optional<ImmutableExpression> joiningCondition, VariableGenerator variableGenerator,
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:128: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        public State(ImmutableList<IQTree> children, Optional<ImmutableExpression> joiningCondition,
                                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateConditionAndChildren(Optional<ImmutableExpression> newCondition,
                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:148: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentConditionAndChildren(UnaryOperatorNode newParent, Optional<ImmutableExpression> newCondition,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:245: warning: [purity.methodref] Incompatible purity declaration
                        newChildrenVariableNullability, this::convertIntoState);
                                                        ^
  Method in @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State
    @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State convertIntoState(@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
    is not a valid method reference for method in @MaybePresent BindingLiftConverter<@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State>
    @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State convert(@MaybePresent BindingLiftConverter<@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State> this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> notNormalizedCondition, Substitution<ImmutableTerm> ascendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:452: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get);
                         ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:505: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<ImmutableExpression> condition;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:141: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final FilterNode sampleFilter;
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:143: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final ConstructionNode childConstructionNode;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:298: warning: [method.invocation] call to get() not allowed on the given receiver.
                    s -> newAggregationSubstitution.compose(substitutionFactory.getSubstitution(sampleVariable.get(), termFactory.getDBSample(termFactory.getDBIntegerConstant(1), termFactory.getTypeFactory().getDBTypeFactory().getDBLargeIntegerType())))
                                                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:12: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalExpression;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitutionImpl(Optional<ImmutableExpression> optionalExpression,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:48: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:52: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:56: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:60: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:64: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:147: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = determinants.stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:149: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:155: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#05 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm>
    capture#06 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:213: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  required: @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> get(@Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>> this, @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:220: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = uniqueConstraint.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:222: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:225: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.empty();
                                 ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:228: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#07 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm>
    capture#08 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:239: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:245: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> determinants = functionalDependency.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:247: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:249: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> dependents = functionalDependency.getDependents().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:251: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:258: warning: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#09 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm>
    capture#010 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:264: warning: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#011 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm>
    capture#012 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:311: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream().map((e)->e.getKey() + ":" + e.getValue()).collect not allowed in side-effect-free method
                .collect(Collectors.joining(",")));
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:310: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream().map not allowed in side-effect-free method
                .map(e -> e.getKey() + ":" + e.getValue())
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:309: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream not allowed in side-effect-free method
                argumentMap.entrySet().stream()
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:311: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                .collect(Collectors.joining(",")));
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:20: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:33: warning: [contracts.postcondition.override] Subclass postcondition is weaker for 'this.inputType' in checkValueValidityForDecomposition.
    protected boolean checkValueValidityForDecomposition(String value) {
                      ^
    In superclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultSimpleDBCastFunctionSymbol: @MaybePresent
    In subclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultCastIntegerToStringFunctionSymbol: no information
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:40: warning: [contracts.postcondition.override] Subclass postcondition is weaker for 'this.inputType' in evaluateStrictEqWithNonNullConstant.
    protected IncrementalEvaluation evaluateStrictEqWithNonNullConstant(ImmutableList<? extends ImmutableTerm> terms,
                                    ^
    In superclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultSimpleDBCastFunctionSymbol: @MaybePresent
    In subclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultCastIntegerToStringFunctionSymbol: no information
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:113: warning: [method.invocation] call to get() not allowed on the given receiver.
                        otherExpressionBuilder.add(evaluation.getNewExpression().get());
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:151: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("expressions must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:255: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:333: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type to compare with was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream().map(FunctionalDependency::toString).collect not allowed in side-effect-free method
                .collect(ImmutableCollectors.toList())));
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:75: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream().map not allowed in side-effect-free method
                .map(FunctionalDependency::toString)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:74: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream not allowed in side-effect-free method
        return String.format("[%s]", String.join("; ", dependencies.stream()
                                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting ImmutableCollectors.toList not allowed in side-effect-free method
                .collect(ImmutableCollectors.toList())));
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:153: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.stream().reduce not allowed in deterministic side-effect-free method
                .reduce(0, (sum, n) -> sum ^ n.hashCode(), Integer::sum);
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:152: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.stream not allowed in deterministic side-effect-free method
        return dependencies.stream()
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:206: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream().map(Variable::toString).collect not allowed in side-effect-free method
                                    .collect(Collectors.toList())),
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:205: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream().map not allowed in side-effect-free method
                                    .map(Variable::toString)
                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:204: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream not allowed in side-effect-free method
                            String.join(", ", determinants.stream()
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:206: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                                    .collect(Collectors.toList())),
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:209: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream().map(Variable::toString).collect not allowed in side-effect-free method
                                    .collect(Collectors.toList()))
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:208: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream().map not allowed in side-effect-free method
                                    .map(Variable::toString)
                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:207: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream not allowed in side-effect-free method
                            String.join(", ", dependents.stream()
                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:209: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                                    .collect(Collectors.toList()))
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:42: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
	private final DBConstant doubleNaN;
	                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:214: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	public Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream) {
	                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:40: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<Variable> indexVariable;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:47: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                            @Assisted Optional<Variable> indexVariable,
                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:82: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<TermType> inferOutputType(Optional<TermType> flattenedVarType) {
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:131: warning: [purity.not.sideeffectfree.call] call to side-effecting indexVariable.map not allowed in side-effect-free method
                indexVariable.map(v -> ", " + v + "/indexIn(" + flattenedVariable + ")").orElse("") +
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:147: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:150: warning: [purity.methodref] Incompatible purity declaration
                IQTree::applyDescendingSubstitution);
                ^
  Method in @MaybePresent IQTree
    @MaybePresent IQTree applyDescendingSubstitution(@MaybePresent IQTree this, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p0, @MaybePresent Optional<@MaybePresent ImmutableExpression> p1, @MaybePresent VariableGenerator p2)
    is not a valid method reference for method in @MaybePresent PropagateToChild
    @MaybePresent IQTree apply(@MaybePresent PropagateToChild this, @MaybePresent IQTree p0, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p1, @MaybePresent Optional<@MaybePresent ImmutableExpression> p2, @MaybePresent VariableGenerator p3)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                               Optional<ImmutableExpression> constraint, IQTree child,
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                (c, s, constraint, vGenerator) -> c.applyDescendingSubstitutionWithoutOptimizing(s, vGenerator));
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:236: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(constraint -> Stream.concat(constraint.stream(), Stream.of(indexVariable.get()))
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:406: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                     Optional<ImmutableExpression> optionalConstraint, VariableGenerator variableGenerator);
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java:124: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinLikeNodeImpl(Optional<ImmutableExpression> optionalJoinCondition,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java:107: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:29: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("BooleanDBIfElseNullFunctionSymbol was " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:69: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Was an expected an immutable expression " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:388: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:391: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:433: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A projected variable was expected as argument"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:485: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  required: @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> get(@Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>> this, @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:627: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream().map((tuple)->tuple.stream().map(String::valueOf).collect(Collectors.joining(",", " (", ")"))).collect not allowed in side-effect-free method
                .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream().map not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:626: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream().map(String::valueOf).collect not allowed in side-effect-free method
                .collect(Collectors.joining(","," (",")")))
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:625: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream().map not allowed in side-effect-free method
                .map(String::valueOf)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:626: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                .collect(Collectors.joining(","," (",")")))
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java:13: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<String> optionalSuffix;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable boundVariable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java:44: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<String> getSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting relation.getID().getSQLRendering not allowed in side-effect-free method
        return "ALTER TABLE " + relation.getID().getSQLRendering() +
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:156: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map((c)->c.getAttribute().getID().toString()).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:155: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map not allowed in side-effect-free method
                        .map(c -> c.getAttribute().getID().toString())
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:154: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream not allowed in side-effect-free method
                components.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:156: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting referencedRelation.getID().getSQLRendering not allowed in side-effect-free method
                ") REFERENCES " + referencedRelation.getID().getSQLRendering() +
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:161: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map((c)->c.getReferencedAttribute().getID().toString()).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:160: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map not allowed in side-effect-free method
                        .map(c -> c.getReferencedAttribute().getID().toString())
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:159: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream not allowed in side-effect-free method
                components.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:161: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
            return toString().equals(other.toString());
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method other.toString not allowed in deterministic method
            return toString().equals(other.toString());
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:87: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:97: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(predicate.toString());
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:98: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append("(");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:101: warning: [purity.not.sideeffectfree.call] call to side-effecting arguments.stream().map not allowed in side-effect-free method
                    .map(VariableOrGroundTerm::toString);
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:100: warning: [purity.not.sideeffectfree.call] call to side-effecting arguments.stream not allowed in side-effect-free method
            Stream<String> argumentStrings = arguments.stream()
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentStrings.collect not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(")");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:105: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = sb.toString();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:96: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
            StringBuilder sb = new StringBuilder();
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:50: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
            return optionalMergedTypeConstant.orElseThrow(() ->
                                                         ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:75: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:48: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private LeftJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalJoinCondition,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:112: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return LEFT_JOIN_NODE_STR + getOptionalFilterString();
                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:243: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:363: warning: [method.invocation] call to get() not allowed on the given receiver.
                        optionalFilterCondition.get(), nullableGroups, rightVariables))
                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:428: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private IQTree propagateDownCondition(Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:43: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:102: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(UnsatisfiableConditionException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:130: warning: [method.invocation] call to get() not allowed on the given receiver.
                groundFunctionalSubstitution.get().apply(partiallySimplifiedExpression.get()),
                                                                                          ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:57: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:64: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:38: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Substitution<NonVariableTerm>> possibleVariableDefinitions;
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:44: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:47: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private FunctionalDependencies functionalDependencies;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:50: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final TermType termType;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable variable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:56: warning: [purity.not.deterministic.call] call to non-deterministic method getTermType not allowed in deterministic method
                && getTermType().equals(((TermTypeInference) o).getTermType());
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:56: warning: [purity.not.deterministic.call] call to non-deterministic method ((TermTypeInference)o).getTermType not allowed in deterministic method
                && getTermType().equals(((TermTypeInference) o).getTermType());
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:61: warning: [purity.not.deterministic.call] call to non-deterministic method getTermType not allowed in deterministic method
        return getTermType().hashCode();
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> topSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> subSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected InnerJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalFilterCondition,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:118: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:136: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return JOIN_NODE_STR + getOptionalFilterString();
                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:149: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
461 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-173348-w74vst6l/iteration3' '-classpath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-api/0.5.0/commons-rdf-api-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-simple/0.5.0/commons-rdf-simple-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.1-jre/guava-32.0.1-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.8.0/checker-qual-3.8.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.5.1/error_prone_annotations-2.5.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/guice/5.0.1/guice-5.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/extensions/guice-assistedinject/5.0.1/guice-assistedinject-5.0.1.jar:/homes/gws/jmsy/.m2/repository/io/github/solf/nullanno/3.0.0/nullanno-3.0.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/io/mikael/urlbuilder/2.0.9/urlbuilder-2.0.9.jar:/homes/gws/jmsy/.m2/repository/org/locationtech/proj4j/proj4j/1.1.1/proj4j-1.1.1.jar:/homes/gws/jmsy/.m2/repository/commons-codec/commons-codec/1.14/commons-codec-1.14.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.2/jackson-core-2.13.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.4.2/jackson-databind-2.13.4.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.2/jackson-annotations-2.13.2.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model/4.2.4/rdf4j-model-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-api/4.2.4/rdf4j-model-api-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-annotation/4.2.4/rdf4j-common-annotation-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-vocabulary/4.2.4/rdf4j-model-vocabulary-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-exception/4.2.4/rdf4j-common-exception-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-text/4.2.4/rdf4j-common-text-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-io/4.2.4/rdf4j-common-io-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-util/4.2.4/rdf4j-common-util-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-iterator/4.2.4/rdf4j-common-iterator-4.2.4.jar:/homes/gws/jmsy/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes' '-sourcepath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java:/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations' '-g' '--release' '11' '--release' '11' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBNonStrictEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCaseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBHashFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotYetTypedEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/CompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/LinearInclusionDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSampleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/VariableOrGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBStdevFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/EmptyQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NowSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFDatatypeStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/UnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidQueryNodeException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/NaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AttributeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RegexSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConstructionSubstitutionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/WKTLiteralValue.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonPostProcessedSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBoundaryFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRISafenessDeclarationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/QueryRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolSerializer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NonStrictEqSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UnsupportedRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeInference.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BoundSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQTreeTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/ExpressionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/TemplateParser.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalInequalityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsLiteralSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/ObjectStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DatabaseInfoSupplier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StartsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsStringEmptyFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/LeafIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractSubStrSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrBeforeOrAfterFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphism.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidOntopConfigurationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/UOM.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractNamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/IQVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderComparatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedBinaryMathOperationTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/VariableNullability.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReduciblePositiveAritySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/VariableImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/AbstractPredicateExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/LowerCaseDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRIStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/TrueNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeAncestry.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DivideSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/NonDeterministicDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FlattenNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNumberNormAsBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/CompositeIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FlattenNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTimeTzNormalizationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalAndSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/DefPushDownRequestImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ExtractLexicalTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/TriplePredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DBParameters.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDateInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofDoubleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/SimpleRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenElseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/QueryTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/DistinctNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnsatisfiableConditionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MetadataExtractionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/AbstractExpressionTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/TemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GreaterThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnSimpleBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/DefinitionPushDownRequest.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EqFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DateTruncSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OFN.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidIntermediateQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfTouchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfWithinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ZeroAryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/TriplePredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/NumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFTermTypeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/ArgumentSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeSubstitutionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBGroupConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ConstructionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/Template.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/JsonDBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypeFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/QuotedIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/IRITermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/TypeConstantDictionary.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MultitypedInputUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLangTagLikeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractBinaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/FunctionalTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoveredByFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Attribute.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/FalseOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryNumericLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/PartiallyTypedSimpleCastTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BooleanDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Nullifiers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/EmptyNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Constant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhOverlapFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/SQLStandardQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/QueryRenamerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSimilarToFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/BinaryNonCommutativeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/StandardNotationDBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImplUsingRelate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRIStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DateDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtendedProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIfDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQSyntacticContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractSimpleMultitypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MockupDBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/LanguageTag.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/PredicateConstants.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioNonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/VarianceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/NotRequiredVariableRemover.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SameTermSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfIntersectsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/RDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioArrayAccessDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractIsASPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/DistinctNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBVarianceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RDFAtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConstructionSubstitutionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EBVSPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IriSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/EmptyNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelSettings.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDefaultInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BlankNodeTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExplicitVariableProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/SliceNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBSumFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEO.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrUUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictNumericEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/AggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnMultitypedInputBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSymDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DistinctVariableOnlyDataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryStringSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/NoNullValuesEnforcerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/QueryTransformerFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimpleTypedDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFLiteralConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IndexInFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFLiteralConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/ConversionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/PartiallyTypedSimpleCastTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UUIDDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBnodeSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/ObjectTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalNonStrictEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/IDGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha384SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/StringUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullToleratingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/Predicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/CoreUtilsFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/QuadPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableExpression.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrlenSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryModifierNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QualifiedAttributeID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/Ontop.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBufferFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractUnaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha256SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEOF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/LangSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OntopInternal.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNodeVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/OfflineMetadataProviderBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/SingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryBooleanSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofIntersectionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsARDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/InjectiveSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ImmutableMetadata.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/OrderByNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalLangMatchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfOverlapsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/MetaRDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RelationIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofConvexHullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRISafenessDeclarationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/DBConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/AGG.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBTypeConversionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GroupConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrBeforeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDatetimeInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypePropagationSubstitutionHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/ChildTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ForcingFloatingDBAvgFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/Substitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangMatchesSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/QuadPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQContainmentCheckUnderLIDs.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBCountFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/FunctionalDependencyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha512SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLexicalNonStrictEqOrInequalityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/AggregationNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/DBConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/AggregationNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/RDFAtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ValuesNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDefaultEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/BNodeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/LinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RandSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBArrayObjectAccessFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryBooleanOperatorSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IRIConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SQLServerDBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDF2DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XSD.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundTermTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFTermTypeConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/LegacyVariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateMFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8DcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/R2RMLIRISafeEncoder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDistanceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/IntensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/AbstractTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DelegatingMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalOrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrAfterSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NumericBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Serializers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/GenericDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NativeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/BasicSingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/BnodeStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIRIFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBRegexMatchAsLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/CoreSingletons.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NullConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrAfterFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha1SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/TrueNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonVariableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ConcreteNumericRDFDatatypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/AttributeNotFoundException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Lens.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/ConcreteIQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNumericInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MinorOntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/InnerJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/NoNullValueEnforcer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/WrappedDBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIntegerFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TrueOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Variable.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EndsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/NotYetTypedEqualityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhMeetFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/InequalityLabel.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/VariableNonRequirement.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/CompositeQueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/OntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDateEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/BasicLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMaxFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/BNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictNEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/FunctionalDependency.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/BnodeTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IfSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/VariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ConcreteNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ForeignKeyConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofWKTFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictStringEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AreCompatibleRDFStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/UniqueConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISODenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/InjectiveSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryCastDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/FunctionalTermSimplification.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoversFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XPathFunction.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsBlankSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/OrderByNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/LeftJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/QueryNodeRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrEndsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8PoFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AggregationSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Md5SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/IntensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/StringDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReplaceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/BooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/ProjectionDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIsNullOrNotFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/NamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBAvgFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedEqualityTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RelationPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MetaRDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/IRITemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ObjectConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsIRISPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonConstantTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr3SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBTypeConversionFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DenodoDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractHashSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr2SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/DistinctNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelConfiguration.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/TermNullabilityEvaluator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CoalesceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermTypeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/EqualsTrueDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FilterNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryModifierNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DistinctVariableOnlyDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/ExpressionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LessThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEnvelopeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/CachingMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BnodeStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/HomogeneousIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISONormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AvgSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SimpleUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryNonCommutativeOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofUnionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/LexicalSpace.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/CoreSingletonsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CountSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StdevSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrBeforeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/SPARQL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDatetimeEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNonDeterministicNullaryFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryComparisonSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/FullLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/NotRequiredVariableRemoverImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/UnaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RawQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IncrementalEvaluation.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/node/HomogeneousQueryNodeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/PredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullRejectingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StringBooleanBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractArgDependentTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TemporaryDBTypeConversionToStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/RelationExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ContainsSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/ImmutableTermsSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DatatypeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/IllegalTreeUpdateException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/NativeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/VariableGeneratorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IRIConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhInsideFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStrBeforeOrAfterSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OWL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfCrossesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStringInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/RelationNotFoundInMetadataException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTree2NativeNodeGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/FunctionalDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagWithPlaceholderFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDFS.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/TermNullabilityEvaluatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/LazyRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/TrueOrNullFunctionSymbol.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java:60: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream);
	                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java:15: warning: [optional.collection] Don't use Optional to wrap a collection type.
    Optional<ImmutableList<DBConstant>> decompose(DBConstant stringConstant);
                                        ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:92: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(term + " was expected to be " +
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:111: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The evaluation was expected " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:150: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(0) + " was expected to be " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:162: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(2*i) + " was expected to be " +
                                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:219: warning: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:364: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("Was expected to find this function symbol at the indicated position"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java:32: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator);
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java:37: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        i -> Optional.<T>ofNullable(argumentMap1.get(i)).orElseGet(() -> argumentMap2.get(i))));
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    JoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java:50: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild, VariableGenerator variableGenerator);
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java:16: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java:13: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    CommutativeJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<TermType> inferOutputType(Optional<TermType> extractSingleTermType);
                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:28: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map(Attribute::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:27: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map not allowed in side-effect-free method
                        .map(Attribute::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:26: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream not allowed in side-effect-free method
                getAttributes().stream()
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:28: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java:18: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String dbVersion;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Supplier<Injector> injectorSupplier;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Injector injector;
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:139: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Boolean> testMode = Optional.empty();
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:141: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Properties> inputProperties = Optional.empty();
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:42: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode createInnerJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:46: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode createLeftJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:52: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                  Optional<Variable> indexVariable, DBTermType dbTermType);
                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java:115: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnsupportedOperationException("No @IDFactoryType annotation found"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter((o)->(o instanceof TermType)).map((o)->(TermType)o).filter not allowed in deterministic side-effect-free method
                .filter(o -> o.toString().equals(toString()))
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:74: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter((o)->(o instanceof TermType)).map not allowed in deterministic side-effect-free method
                .map(o -> (TermType) o)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:73: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter not allowed in deterministic side-effect-free method
                .filter(o -> (o instanceof TermType))
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:72: warning: [purity.not.deterministic.call] call to non-deterministic method Optional.ofNullable not allowed in deterministic method
        return Optional.ofNullable(other)
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.call] call to non-deterministic method o.toString not allowed in deterministic method
                .filter(o -> o.toString().equals(toString()))
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final IRI functionIRI;
                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:21: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:52: warning: [contracts.precondition] precondition of new State(initialFilterNode, initialChild).normalizeChild is not satisfied.
                .normalizeChild(variableGenerator);
                               ^
  found   : "new State(initialFilterNode, initia...".condition is @MaybePresent
  required: "new State(initialFilterNode, initia...".condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:56: warning: [contracts.precondition] precondition of state.liftBindingsAndDistinct().mergeWithChild is not satisfied.
                    .mergeWithChild();
                                   ^
  found   : state.liftBindingsAndDistinct().condition is @MaybePresent
  required: state.liftBindingsAndDistinct().condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:55: warning: [contracts.precondition] precondition of state.liftBindingsAndDistinct is not satisfied.
            State stateBeforeSimplification = state.liftBindingsAndDistinct()
                                                                           ^
  found   : state.condition is @MaybePresent
  required: state.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:59: warning: [contracts.precondition] precondition of stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).normalizeChild is not satisfied.
                    .normalizeChild(variableGenerator);
                                   ^
  found   : stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).condition is @MaybePresent
  required: stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:58: warning: [contracts.precondition] precondition of stateBeforeSimplification.simplifyAndPropagateDownConstraint is not satisfied.
            State newState = stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator)
                                                                                         ^
  found   : stateBeforeSimplification.condition is @MaybePresent
  required: stateBeforeSimplification.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:63: warning: [contracts.precondition] precondition of newState.createNormalizedTree is not satisfied.
                return newState.createNormalizedTree(variableGenerator, treeCache);
                                                    ^
  found   : newState.condition is @MaybePresent
  required: newState.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:83: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> condition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:96: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                        Optional<ImmutableExpression> condition, IQTree child) {
                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:183: warning: [contracts.precondition] precondition of liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).liftBindingsAndDistinct is not satisfied.
                        .liftBindingsAndDistinct();
                                                ^
  found   : this.liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).condition is @MaybePresent
  required: this.liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:188: warning: [contracts.precondition] precondition of liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).liftBindingsAndDistinct is not satisfied.
                        .liftBindingsAndDistinct();
                                                ^
  found   : this.liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).condition is @MaybePresent
  required: this.liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:226: warning: [method.invocation] call to get() not allowed on the given receiver.
                            .map(c -> termFactory.getConjunction(condition.get(), c))
                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:68: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<OrderByNode> orderByNode;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State(ImmutableList<UnaryOperatorNode> ancestors, Optional<OrderByNode> orderByNode, IQTree child,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:87: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentOrderByAndChild(UnaryOperatorNode newParent, Optional<OrderByNode> newOrderByNode, IQTree newChild) {
                                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:19: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:90: warning: [optional.collection] Don't use Optional to wrap a collection type.
                ? Optional.of(ImmutableList.of(termFactory.getDBConstant(cst.getValue(), inputType)))
                ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java:26: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTopPropagatedNumericTypeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:84: warning: [purity.not.sideeffectfree.call] call to side-effecting ImmutableSet.of not allowed in side-effect-free method
            return ImmutableSet.of(
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:85: warning: [purity.not.sideeffectfree.call] call to side-effecting AbstractMap.SimpleImmutableEntry<> not allowed in side-effect-free method
                    new AbstractMap.SimpleImmutableEntry<>(false, forFalse),
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:86: warning: [purity.not.sideeffectfree.call] call to side-effecting AbstractMap.SimpleImmutableEntry<> not allowed in side-effect-free method
                    new AbstractMap.SimpleImmutableEntry<>(true, forTrue)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java:132: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<ArgumentMapUnifier<T>> optional;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private Optional<Substitution<T>> optionalSubstitution;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:62: warning: [method.invocation] call to get() not allowed on the given receiver.
        T term2 = operations.applyToTerm(optionalSubstitution.get(), t2);
                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:90: warning: [method.invocation] call to get() not allowed on the given receiver.
                optionalSubstitution = Optional.of(operations.compose(s, optionalSubstitution.get()));
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on(", ").withKeyValueSeparator("/").join not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on(", ").withKeyValueSeparator not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:89: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Unexpected empty disjunction"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:99: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The first argument of a IF_ELSE_NULL must be an expression"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<ImmutableExpression> leftJoinExpression,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:60: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:68: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL distinct aggregate function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:102: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:128: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:135: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            ImmutableMap<ConcreteNumericRDFDatatype, Variable> numericSubTermVarMap, Optional<Variable> optionalIncompatibleCountVariable,
                                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:136: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleSubVariable, TermFactory termFactory) {
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)))
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:155: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java:173: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    static Optional<IRI> tryExtractSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:169: warning: [method.invocation] call to get() not allowed on the given receiver.
                                                    ? extractConstantWKTLiteralValue(termFactory, subterm).get()
                                                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:33: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit name: " + name));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:40: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit iri: " + iri));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:80: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:107: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The order by was expected to be kept"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java:59: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("A simplified expression was expected"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append("=").append(r).append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append("=").append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:32: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
        bf.append("\n====== constraints ==========\n");
                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:34: warning: [purity.not.sideeffectfree.call] call to side-effecting r.getUniqueConstraints not allowed in side-effect-free method
            for (UniqueConstraint uc : r.getUniqueConstraints())
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:35: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(uc).append not allowed in side-effect-free method
                bf.append(uc).append(";\n");
                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:35: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
                bf.append(uc).append(";\n");
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:36: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:37: warning: [purity.not.sideeffectfree.call] call to side-effecting r.getForeignKeys not allowed in side-effect-free method
            for (ForeignKeyConstraint fk : r.getForeignKeys())
                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:38: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(fk).append not allowed in side-effect-free method
                bf.append(fk).append(";\n");
                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:38: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
                bf.append(fk).append(";\n");
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:39: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:27: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
        StringBuilder bf = new StringBuilder();
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java:115: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
        private final ImmutableExpression expression;
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:99: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(functionSymbol.toString());
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:100: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append("(");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream().map(ImmutableTerm::toString).collect not allowed in side-effect-free method
                    .collect(Collectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream().map not allowed in side-effect-free method
                    .map(ImmutableTerm::toString)
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:102: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream not allowed in side-effect-free method
            List<String> argumentStrings = terms.stream()
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                    .collect(Collectors.toList());
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:106: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(String.join(",", argumentStrings));
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:107: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(")");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:108: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = sb.toString();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:98: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
            StringBuilder sb = new StringBuilder();
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:120: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
            return toString().equals(other.toString());
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:120: warning: [purity.not.deterministic.call] call to non-deterministic method other.toString not allowed in deterministic method
            return toString().equals(other.toString());
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:127: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java:133: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("Arity > 1 was expected"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:49: warning: [purity.not.deterministic.not.sideeffectfree.assign.field] field assignment not allowed in deterministic side-effect-free method
            next = shift();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:49: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting shift not allowed in deterministic side-effect-free method
            next = shift();
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:50: warning: [purity.not.deterministic.not.sideeffectfree.assign.field] field assignment not allowed in deterministic side-effect-free method
            movedToNext = true;
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:25: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map(Attribute::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:24: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map not allowed in side-effect-free method
                        .map(Attribute::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:23: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream not allowed in side-effect-free method
                getAttributes().stream()
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:25: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:108: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> ljCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:114: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                     Optional<ImmutableExpression> ljCondition,
                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:126: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       IQTree initialRightChild, Optional<ImmutableExpression> ljCondition,
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:131: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private LJNormalizationState updateConditionAndRightChild(Optional<ImmutableExpression> newLJCondition,
                                                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:141: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                UnaryOperatorNode newParent, Optional<ImmutableExpression> newLJCondition, IQTree newRightChild) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:146: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:158: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:208: warning: [purity.methodref] Incompatible purity declaration
                        childVariableNullability, this::applyLeftChildBindingLift)
                                                  ^
  Method in @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState
    @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState applyLeftChildBindingLift(@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
    is not a valid method reference for method in @MaybePresent BindingLiftConverter<@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState>
    @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState convert(@MaybePresent BindingLiftConverter<@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState> this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:322: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> ljCondition, Substitution<ImmutableTerm> naiveAscendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:470: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        provenanceVariable.orElseThrow(() -> new MinorOntopInternalBugException("An entry was expected")),
                                                      ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:657: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<Variable> rightProvenanceVariable, ImmutableSet<Variable> leftVariables) {
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:667: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                              Optional<Variable> defaultRightProvenanceVariable) {
                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:678: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("A default provenance variable was needed"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                         Optional<ImmutableExpression> initialJoiningCondition,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                  Optional<ImmutableExpression> newCondition,
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                      Optional<ImmutableExpression> joiningCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ConstructionNode childConstructionNode;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:153: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A lifted construction node was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:69: warning: [method.invocation] call to get() not allowed on the given receiver.
        return getOptionalFilterCondition().get();
                                               ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:213: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return FILTER_NODE_STR + getOptionalFilterString();
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:228: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalFilterCondition;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinOrFilterNodeImpl(Optional<ImmutableExpression> optionalFilterCondition,
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java:22: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nonRequiredVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:124: warning: [purity.methodref] Incompatible purity declaration
                variableMapper, termMapper, ImmutableMap.Builder::put, this::createSubstitution);
                                            ^
  Method in @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>
    @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> put(@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> this, @MaybePresent Variable p0, T extends @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>, @MaybePresent Variable, T extends @MaybePresent ImmutableTerm>
    void put(@MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>, @MaybePresent Variable, T extends @MaybePresent ImmutableTerm> this, @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> p0, @MaybePresent Variable p1, T extends @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:146: warning: [purity.methodref] Incompatible purity declaration
                v -> v, variableGenerator::generateNewVariableFromVar, ImmutableMap.Builder::put, m -> createSubstitution(m).injective());
                                                                       ^
  Method in @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>
    @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> put(@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> this, @MaybePresent Variable p0, @MaybePresent Variable p1)
    is not a valid method reference for method in @MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>, @MaybePresent Variable, @MaybePresent Variable>
    void put(@MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>, @MaybePresent Variable, @MaybePresent Variable> this, @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> p0, @MaybePresent Variable p1, @MaybePresent Variable p2)
  found   : []
  required: [SIDE_EFFECT_FREE]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:273: warning: [method.invocation] call to get() not allowed on the given receiver.
                        return attemptUnifying(term1, term2).get();
                                                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:142: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:170: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:184: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:67: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:69: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:76: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:179: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent Boolean>
  required: @MaybePresent Optional<@MaybePresent Boolean>
  Consequence: method in @MaybePresent Optional<@MaybePresent Boolean>
    @MaybePresent Boolean get(@Present Optional<@MaybePresent Boolean> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean>
    @MaybePresent Boolean apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean> this, @MaybePresent Optional<@MaybePresent Boolean> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:63: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:65: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:72: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:151: warning: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .map(oe -> oe
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:53: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(variableGenerator::generateNewVariable))
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:59: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public static IQTree toIQTree(ImmutableList<? extends IQTree> extensionalNodes, Optional<ImmutableExpression> joiningConditions,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:122: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return getExtensionalDataNodes(tree.getChildren().get(0), coreSingletons);
                                          ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:125: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of((ExtensionalDataNode)tree));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:128: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of());
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:131: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of(convertIntoExtensionalDataNode((ValuesNode) node, coreSingletons)));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:135: warning: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:141: warning: [optional.collection] Don't use Optional to wrap a collection type.
        return Optional.empty();
                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
            return ((FilterNode)tree.getRootNode()).getOptionalFilterCondition().get().flattenAND()
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java:67: warning: [method.invocation] call to get() not allowed on the given receiver.
                    dbFunctionSymbolFct.apply(dbTypeFactory.getDBStringType()).get(), subLexicalTerms.get(0));
                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:134: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("groups must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:266: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("An expression was expected"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:372: warning: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> ucsPartitionedByDisjointness.get(true).stream().noneMatch(set -> set.size() == 1 && set.stream().findFirst().get().equals(v)))
                                                                                                                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:405: warning: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> fdsPartitionedByDisjointness.get(true).stream().noneMatch(entry -> entry.getKey().size() == 1 && entry.getKey().stream().findFirst().get().equals(v)))
                                                                                                                                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:510: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:663: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .flatMap(t -> t);
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:767: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new QueryNodeSubstitutionException("The descending substitution " + mergedSubstitution
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:130: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expecting " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:222: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:228: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("cannot be empty because there is at least one variable in the templates (taken together)"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:413: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern injectivePattern; // lazy initalization
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:474: warning: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java:87: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern pattern;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:51: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                          Optional<ImmutableExpression> constraint,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:133: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(ConstructionNodeImpl.EmptyTreeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:288: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        v -> getDeterminedBy(Optional.ofNullable(substitution.get(v)).orElse(v), variableNullability)
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:592: warning: [optional.field] Don't use Optional as the type of a field.
        public final Optional<ImmutableExpression> filter;
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:597: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                          Optional<ImmutableExpression> newF) {
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java:21: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ImmutableExpression simplifiedExpression;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableGenerator variableGenerator;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java:105: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java:54: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:164: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get))
                             ^
  found   : @Present Optional<@MaybePresent DefinitionPushDownRequest>
  required: @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
  Consequence: method in @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest get(@Present Optional<@MaybePresent DefinitionPushDownRequest> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest> this, @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:202: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Substitution<ImmutableFunctionalTerm> computeSubstitution(Optional<Variable> optionalNumAvgVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalNumSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:204: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleCountVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:213: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, createAggregate(xsdDecimal, optionalNumSubVariable.get(), termFactory)));
                                                                                                       ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:219: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)));
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:236: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableFunctionalTerm computeLiftableTerm(Optional<Variable> optionalNumAvgVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:238: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:253: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeLexicalTerm(Optional<Variable> optionalFloatingAggVariable,
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                             Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:275: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeTypeTerm(Optional<Variable> optionalNumAvgVariable,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:277: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                          Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private]
    private IQ iq;
               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:11: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<DBTermType> itemType;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:18: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ArrayDBTermType(String arrayStr, TermTypeAncestry ancestry, Optional<DBTermType> itemType, ArrayTypeFromSignature parsingFunction) {
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:65: warning: [method.invocation] call to get() not allowed on the given receiver.
        return ImmutableList.of(this.itemType.get());
                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java:25: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(t -> t.negate(termFactory))).get();
                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:120: warning: [method.invocation] call to get() not allowed on the given receiver.
                                .get(),
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:125: warning: [method.invocation] call to get() not allowed on the given receiver.
                                .get()))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java:95: warning: [method.invocation] call to get() not allowed on the given receiver.
                        e -> e.getValue().get()));
                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2056: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(() -> getDBCastFunctionSymbol(inputType, dbStringType)));
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2073: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(() -> getDBCastFunctionSymbol(dbStringType, targetDBType));
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:48: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The first term of an IF_ELSE_NULL " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:68: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Inconsistent evaluation"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The first term in ifElseNullTerms was expected " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:177: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expected an immutable expression as first term"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:200: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("was expected an ImmutableExpression as first sub-term"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:235: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("Wrong index"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> definedVariable) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:64: warning: [argument] incompatible argument for parameter definedVariable of ProjectionDecomposerImpl.decomposeDefinition.
                        .map(t -> decomposeDefinition(t, variableGenerator, Optional.empty()))
                                                                                          ^
  found   : @MaybePresent Optional<@MaybePresent Variable>
  required: @Present Optional<@MaybePresent Variable>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:121: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<Substitution<ImmutableTerm>> substitution;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:83: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:94: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("otherTerms must be non-empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:100: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                         Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java:74: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> knownVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:40: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:116: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = printSubtree(this, "");
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:116: warning: [purity.not.sideeffectfree.call] call to side-effecting printSubtree not allowed in side-effect-free method
            string = printSubtree(this, "");
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:142: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:188: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<ImmutableExpression> normalizeConstraint(Optional<ImmutableExpression> constraint,
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:206: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                 Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator);
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QualifiedAttributeID.java:78: warning: [purity.not.sideeffectfree.call] call to side-effecting getSQLRendering not allowed in side-effect-free method
		return getSQLRendering();
		                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:39: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Long limit;
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:228: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("There should be one child"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:235: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one child expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:337: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RelationIDImpl.java:60: warning: [purity.not.sideeffectfree.call] call to side-effecting getSQLRendering not allowed in side-effect-free method
        return getSQLRendering();
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/DBConstantImpl.java:68: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((DBConstant)other).getValue not allowed in deterministic side-effect-free method
                    ((DBConstant) other).getValue().equals(this.value));
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IRIConstantImpl.java:68: warning: [purity.not.sideeffectfree.call] call to side-effecting iri.getIRIString not allowed in side-effect-free method
		return "<" + iri.getIRIString() + ">";
		                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java:61: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting otherType.getLanguageTag().filter not allowed in deterministic side-effect-free method
                    .filter(langTag::equals)
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java:60: warning: [purity.not.deterministic.call] call to non-deterministic method otherType.getLanguageTag not allowed in deterministic method
            return otherType.getLanguageTag()
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java:35: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  required: @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  Consequence: method in @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> get(@Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>> this, @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:349: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBHoursBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBHoursBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:351: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBMinutesBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBMinutesBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:353: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBSecondsBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBSecondsBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:355: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBMillisBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBMillisBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nullableVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:36: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableMap<Variable, Integer> variableMap;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:189: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map(Attribute::getID).map(QuotedID::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:188: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map(Attribute::getID).map not allowed in side-effect-free method
                        .map(QuotedID::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:187: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map not allowed in side-effect-free method
                        .map(Attribute::getID)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:186: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream not allowed in side-effect-free method
                attributes.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:189: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java:28: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTermTypeOriginException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:71: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new UnknownClassException(String.format(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnknownClassException(String.format(
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:17: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::everything;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> everything(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : [SIDE_EFFECT_FREE]
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:19: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidInteger;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidInteger(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:21: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidDecimal;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @MaybePresent Optional<@MaybePresent Boolean> isValidDecimal(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:23: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidDouble;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidDouble(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:25: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidUUID;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidUUID(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:30: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::unknown;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @MaybePresent Optional<@MaybePresent Boolean> unknown(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : [SIDE_EFFECT_FREE]
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:109: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> joiningCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:115: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                      Optional<ImmutableExpression> joiningCondition, VariableGenerator variableGenerator,
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:128: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        public State(ImmutableList<IQTree> children, Optional<ImmutableExpression> joiningCondition,
                                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateConditionAndChildren(Optional<ImmutableExpression> newCondition,
                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:148: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentConditionAndChildren(UnaryOperatorNode newParent, Optional<ImmutableExpression> newCondition,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:245: warning: [purity.methodref] Incompatible purity declaration
                        newChildrenVariableNullability, this::convertIntoState);
                                                        ^
  Method in @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State
    @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State convertIntoState(@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
    is not a valid method reference for method in @MaybePresent BindingLiftConverter<@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State>
    @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State convert(@MaybePresent BindingLiftConverter<@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State> this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> notNormalizedCondition, Substitution<ImmutableTerm> ascendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:452: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get);
                         ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:505: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<ImmutableExpression> condition;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:141: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final FilterNode sampleFilter;
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:143: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final ConstructionNode childConstructionNode;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:298: warning: [method.invocation] call to get() not allowed on the given receiver.
                    s -> newAggregationSubstitution.compose(substitutionFactory.getSubstitution(sampleVariable.get(), termFactory.getDBSample(termFactory.getDBIntegerConstant(1), termFactory.getTypeFactory().getDBTypeFactory().getDBLargeIntegerType())))
                                                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:12: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalExpression;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitutionImpl(Optional<ImmutableExpression> optionalExpression,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:48: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:52: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:56: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:60: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:64: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:147: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = determinants.stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:149: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:155: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#05 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm>
    capture#06 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:213: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  required: @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> get(@Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>> this, @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:220: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = uniqueConstraint.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:222: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:225: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.empty();
                                 ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:228: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#07 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm>
    capture#08 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:239: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:245: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> determinants = functionalDependency.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:247: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:249: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> dependents = functionalDependency.getDependents().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:251: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:258: warning: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#09 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm>
    capture#010 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:264: warning: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#011 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm>
    capture#012 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:311: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream().map((e)->e.getKey() + ":" + e.getValue()).collect not allowed in side-effect-free method
                .collect(Collectors.joining(",")));
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:310: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream().map not allowed in side-effect-free method
                .map(e -> e.getKey() + ":" + e.getValue())
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:309: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream not allowed in side-effect-free method
                argumentMap.entrySet().stream()
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:311: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                .collect(Collectors.joining(",")));
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:20: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:33: warning: [contracts.postcondition.override] Subclass postcondition is weaker for 'this.inputType' in checkValueValidityForDecomposition.
    protected boolean checkValueValidityForDecomposition(String value) {
                      ^
    In superclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultSimpleDBCastFunctionSymbol: @MaybePresent
    In subclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultCastIntegerToStringFunctionSymbol: no information
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:40: warning: [contracts.postcondition.override] Subclass postcondition is weaker for 'this.inputType' in evaluateStrictEqWithNonNullConstant.
    protected IncrementalEvaluation evaluateStrictEqWithNonNullConstant(ImmutableList<? extends ImmutableTerm> terms,
                                    ^
    In superclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultSimpleDBCastFunctionSymbol: @MaybePresent
    In subclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultCastIntegerToStringFunctionSymbol: no information
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:113: warning: [method.invocation] call to get() not allowed on the given receiver.
                        otherExpressionBuilder.add(evaluation.getNewExpression().get());
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:151: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("expressions must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:255: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:333: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type to compare with was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream().map(FunctionalDependency::toString).collect not allowed in side-effect-free method
                .collect(ImmutableCollectors.toList())));
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:75: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream().map not allowed in side-effect-free method
                .map(FunctionalDependency::toString)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:74: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream not allowed in side-effect-free method
        return String.format("[%s]", String.join("; ", dependencies.stream()
                                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting ImmutableCollectors.toList not allowed in side-effect-free method
                .collect(ImmutableCollectors.toList())));
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:153: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.stream().reduce not allowed in deterministic side-effect-free method
                .reduce(0, (sum, n) -> sum ^ n.hashCode(), Integer::sum);
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:152: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.stream not allowed in deterministic side-effect-free method
        return dependencies.stream()
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:206: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream().map(Variable::toString).collect not allowed in side-effect-free method
                                    .collect(Collectors.toList())),
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:205: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream().map not allowed in side-effect-free method
                                    .map(Variable::toString)
                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:204: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream not allowed in side-effect-free method
                            String.join(", ", determinants.stream()
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:206: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                                    .collect(Collectors.toList())),
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:209: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream().map(Variable::toString).collect not allowed in side-effect-free method
                                    .collect(Collectors.toList()))
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:208: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream().map not allowed in side-effect-free method
                                    .map(Variable::toString)
                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:207: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream not allowed in side-effect-free method
                            String.join(", ", dependents.stream()
                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:209: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                                    .collect(Collectors.toList()))
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:42: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
	private final DBConstant doubleNaN;
	                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:214: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	public Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream) {
	                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:40: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<Variable> indexVariable;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:47: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                            @Assisted Optional<Variable> indexVariable,
                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:82: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<TermType> inferOutputType(Optional<TermType> flattenedVarType) {
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:131: warning: [purity.not.sideeffectfree.call] call to side-effecting indexVariable.map not allowed in side-effect-free method
                indexVariable.map(v -> ", " + v + "/indexIn(" + flattenedVariable + ")").orElse("") +
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:147: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:150: warning: [purity.methodref] Incompatible purity declaration
                IQTree::applyDescendingSubstitution);
                ^
  Method in @MaybePresent IQTree
    @MaybePresent IQTree applyDescendingSubstitution(@MaybePresent IQTree this, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p0, @MaybePresent Optional<@MaybePresent ImmutableExpression> p1, @MaybePresent VariableGenerator p2)
    is not a valid method reference for method in @MaybePresent PropagateToChild
    @MaybePresent IQTree apply(@MaybePresent PropagateToChild this, @MaybePresent IQTree p0, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p1, @MaybePresent Optional<@MaybePresent ImmutableExpression> p2, @MaybePresent VariableGenerator p3)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                               Optional<ImmutableExpression> constraint, IQTree child,
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                (c, s, constraint, vGenerator) -> c.applyDescendingSubstitutionWithoutOptimizing(s, vGenerator));
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:236: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(constraint -> Stream.concat(constraint.stream(), Stream.of(indexVariable.get()))
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:406: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                     Optional<ImmutableExpression> optionalConstraint, VariableGenerator variableGenerator);
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java:124: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinLikeNodeImpl(Optional<ImmutableExpression> optionalJoinCondition,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java:107: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:29: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("BooleanDBIfElseNullFunctionSymbol was " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:69: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Was an expected an immutable expression " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:388: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:391: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:433: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A projected variable was expected as argument"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:485: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  required: @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> get(@Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>> this, @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:627: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream().map((tuple)->tuple.stream().map(String::valueOf).collect(Collectors.joining(",", " (", ")"))).collect not allowed in side-effect-free method
                .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream().map not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:626: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream().map(String::valueOf).collect not allowed in side-effect-free method
                .collect(Collectors.joining(","," (",")")))
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:625: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream().map not allowed in side-effect-free method
                .map(String::valueOf)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:626: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                .collect(Collectors.joining(","," (",")")))
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java:13: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<String> optionalSuffix;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable boundVariable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java:44: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<String> getSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting relation.getID().getSQLRendering not allowed in side-effect-free method
        return "ALTER TABLE " + relation.getID().getSQLRendering() +
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:156: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map((c)->c.getAttribute().getID().toString()).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:155: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map not allowed in side-effect-free method
                        .map(c -> c.getAttribute().getID().toString())
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:154: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream not allowed in side-effect-free method
                components.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:156: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting referencedRelation.getID().getSQLRendering not allowed in side-effect-free method
                ") REFERENCES " + referencedRelation.getID().getSQLRendering() +
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:161: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map((c)->c.getReferencedAttribute().getID().toString()).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:160: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map not allowed in side-effect-free method
                        .map(c -> c.getReferencedAttribute().getID().toString())
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:159: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream not allowed in side-effect-free method
                components.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:161: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
            return toString().equals(other.toString());
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method other.toString not allowed in deterministic method
            return toString().equals(other.toString());
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:87: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:97: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(predicate.toString());
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:98: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append("(");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:101: warning: [purity.not.sideeffectfree.call] call to side-effecting arguments.stream().map not allowed in side-effect-free method
                    .map(VariableOrGroundTerm::toString);
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:100: warning: [purity.not.sideeffectfree.call] call to side-effecting arguments.stream not allowed in side-effect-free method
            Stream<String> argumentStrings = arguments.stream()
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentStrings.collect not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(")");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:105: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = sb.toString();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:96: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
            StringBuilder sb = new StringBuilder();
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:50: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
            return optionalMergedTypeConstant.orElseThrow(() ->
                                                         ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:75: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:48: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private LeftJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalJoinCondition,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:112: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return LEFT_JOIN_NODE_STR + getOptionalFilterString();
                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:243: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:363: warning: [method.invocation] call to get() not allowed on the given receiver.
                        optionalFilterCondition.get(), nullableGroups, rightVariables))
                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:428: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private IQTree propagateDownCondition(Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:43: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:102: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(UnsatisfiableConditionException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:130: warning: [method.invocation] call to get() not allowed on the given receiver.
                groundFunctionalSubstitution.get().apply(partiallySimplifiedExpression.get()),
                                                                                          ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:57: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:64: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:38: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Substitution<NonVariableTerm>> possibleVariableDefinitions;
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:44: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:47: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private FunctionalDependencies functionalDependencies;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:50: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final TermType termType;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable variable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:56: warning: [purity.not.deterministic.call] call to non-deterministic method getTermType not allowed in deterministic method
                && getTermType().equals(((TermTypeInference) o).getTermType());
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:56: warning: [purity.not.deterministic.call] call to non-deterministic method ((TermTypeInference)o).getTermType not allowed in deterministic method
                && getTermType().equals(((TermTypeInference) o).getTermType());
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:61: warning: [purity.not.deterministic.call] call to non-deterministic method getTermType not allowed in deterministic method
        return getTermType().hashCode();
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> topSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> subSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected InnerJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalFilterCondition,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:118: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:136: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return JOIN_NODE_STR + getOptionalFilterString();
                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:149: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
461 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-173348-w74vst6l/iteration4' '-classpath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-api/0.5.0/commons-rdf-api-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-simple/0.5.0/commons-rdf-simple-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.1-jre/guava-32.0.1-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.8.0/checker-qual-3.8.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.5.1/error_prone_annotations-2.5.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/guice/5.0.1/guice-5.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/extensions/guice-assistedinject/5.0.1/guice-assistedinject-5.0.1.jar:/homes/gws/jmsy/.m2/repository/io/github/solf/nullanno/3.0.0/nullanno-3.0.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/io/mikael/urlbuilder/2.0.9/urlbuilder-2.0.9.jar:/homes/gws/jmsy/.m2/repository/org/locationtech/proj4j/proj4j/1.1.1/proj4j-1.1.1.jar:/homes/gws/jmsy/.m2/repository/commons-codec/commons-codec/1.14/commons-codec-1.14.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.2/jackson-core-2.13.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.4.2/jackson-databind-2.13.4.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.2/jackson-annotations-2.13.2.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model/4.2.4/rdf4j-model-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-api/4.2.4/rdf4j-model-api-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-annotation/4.2.4/rdf4j-common-annotation-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-vocabulary/4.2.4/rdf4j-model-vocabulary-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-exception/4.2.4/rdf4j-common-exception-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-text/4.2.4/rdf4j-common-text-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-io/4.2.4/rdf4j-common-io-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-util/4.2.4/rdf4j-common-util-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-iterator/4.2.4/rdf4j-common-iterator-4.2.4.jar:/homes/gws/jmsy/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes' '-sourcepath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java:/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations' '-g' '--release' '11' '--release' '11' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBNonStrictEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCaseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBHashFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotYetTypedEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/CompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/LinearInclusionDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSampleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/VariableOrGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBStdevFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/EmptyQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NowSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFDatatypeStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/UnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidQueryNodeException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/NaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AttributeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RegexSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConstructionSubstitutionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/WKTLiteralValue.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonPostProcessedSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBoundaryFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRISafenessDeclarationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/QueryRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolSerializer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NonStrictEqSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UnsupportedRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeInference.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BoundSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQTreeTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/ExpressionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/TemplateParser.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalInequalityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsLiteralSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/ObjectStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DatabaseInfoSupplier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StartsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsStringEmptyFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/LeafIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractSubStrSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrBeforeOrAfterFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphism.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidOntopConfigurationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/UOM.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractNamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/IQVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderComparatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedBinaryMathOperationTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/VariableNullability.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReduciblePositiveAritySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/VariableImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/AbstractPredicateExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/LowerCaseDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRIStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/TrueNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeAncestry.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DivideSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/NonDeterministicDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FlattenNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNumberNormAsBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/CompositeIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FlattenNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTimeTzNormalizationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalAndSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/DefPushDownRequestImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ExtractLexicalTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/TriplePredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DBParameters.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDateInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofDoubleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/SimpleRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenElseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/QueryTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/DistinctNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnsatisfiableConditionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MetadataExtractionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/AbstractExpressionTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/TemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GreaterThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnSimpleBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/DefinitionPushDownRequest.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EqFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DateTruncSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OFN.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidIntermediateQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfTouchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfWithinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ZeroAryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/TriplePredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/NumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFTermTypeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/ArgumentSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeSubstitutionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBGroupConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ConstructionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/Template.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/JsonDBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypeFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/QuotedIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/IRITermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/TypeConstantDictionary.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MultitypedInputUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLangTagLikeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractBinaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/FunctionalTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoveredByFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Attribute.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/FalseOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryNumericLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/PartiallyTypedSimpleCastTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BooleanDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Nullifiers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/EmptyNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Constant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhOverlapFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/SQLStandardQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/QueryRenamerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSimilarToFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/BinaryNonCommutativeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/StandardNotationDBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImplUsingRelate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRIStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DateDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtendedProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIfDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQSyntacticContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractSimpleMultitypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MockupDBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/LanguageTag.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/PredicateConstants.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioNonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/VarianceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/NotRequiredVariableRemover.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SameTermSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfIntersectsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/RDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioArrayAccessDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractIsASPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/DistinctNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBVarianceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RDFAtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConstructionSubstitutionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EBVSPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IriSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/EmptyNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelSettings.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDefaultInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BlankNodeTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExplicitVariableProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/SliceNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBSumFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEO.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrUUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictNumericEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/AggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnMultitypedInputBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSymDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DistinctVariableOnlyDataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryStringSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/NoNullValuesEnforcerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/QueryTransformerFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimpleTypedDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFLiteralConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IndexInFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFLiteralConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/ConversionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/PartiallyTypedSimpleCastTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UUIDDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBnodeSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/ObjectTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalNonStrictEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/IDGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha384SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/StringUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullToleratingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/Predicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/CoreUtilsFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/QuadPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableExpression.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrlenSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryModifierNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QualifiedAttributeID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/Ontop.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBufferFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractUnaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha256SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEOF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/LangSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OntopInternal.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNodeVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/OfflineMetadataProviderBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/SingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryBooleanSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofIntersectionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsARDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/InjectiveSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ImmutableMetadata.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/OrderByNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalLangMatchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfOverlapsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/MetaRDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RelationIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofConvexHullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRISafenessDeclarationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/DBConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/AGG.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBTypeConversionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GroupConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrBeforeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDatetimeInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypePropagationSubstitutionHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/ChildTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ForcingFloatingDBAvgFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/Substitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangMatchesSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/QuadPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQContainmentCheckUnderLIDs.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBCountFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/FunctionalDependencyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha512SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLexicalNonStrictEqOrInequalityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/AggregationNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/DBConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/AggregationNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/RDFAtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ValuesNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDefaultEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/BNodeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/LinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RandSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBArrayObjectAccessFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryBooleanOperatorSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IRIConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SQLServerDBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDF2DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XSD.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundTermTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFTermTypeConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/LegacyVariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateMFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8DcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/R2RMLIRISafeEncoder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDistanceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/IntensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/AbstractTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DelegatingMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalOrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrAfterSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NumericBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Serializers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/GenericDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NativeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/BasicSingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/BnodeStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIRIFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBRegexMatchAsLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/CoreSingletons.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NullConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrAfterFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha1SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/TrueNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonVariableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ConcreteNumericRDFDatatypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/AttributeNotFoundException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Lens.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/ConcreteIQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNumericInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MinorOntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/InnerJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/NoNullValueEnforcer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/WrappedDBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIntegerFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TrueOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Variable.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EndsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/NotYetTypedEqualityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhMeetFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/InequalityLabel.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/VariableNonRequirement.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/CompositeQueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/OntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDateEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/BasicLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMaxFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/BNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictNEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/FunctionalDependency.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/BnodeTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IfSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/VariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ConcreteNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ForeignKeyConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofWKTFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictStringEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AreCompatibleRDFStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/UniqueConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISODenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/InjectiveSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryCastDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/FunctionalTermSimplification.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoversFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XPathFunction.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsBlankSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/OrderByNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/LeftJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/QueryNodeRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrEndsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8PoFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AggregationSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Md5SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/IntensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/StringDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReplaceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/BooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/ProjectionDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIsNullOrNotFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/NamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBAvgFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedEqualityTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RelationPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MetaRDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/IRITemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ObjectConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsIRISPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonConstantTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr3SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBTypeConversionFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DenodoDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractHashSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr2SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/DistinctNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelConfiguration.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/TermNullabilityEvaluator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CoalesceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermTypeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/EqualsTrueDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FilterNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryModifierNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DistinctVariableOnlyDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/ExpressionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LessThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEnvelopeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/CachingMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BnodeStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/HomogeneousIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISONormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AvgSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SimpleUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryNonCommutativeOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofUnionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/LexicalSpace.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/CoreSingletonsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CountSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StdevSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrBeforeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/SPARQL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDatetimeEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNonDeterministicNullaryFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryComparisonSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/FullLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/NotRequiredVariableRemoverImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/UnaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RawQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IncrementalEvaluation.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/node/HomogeneousQueryNodeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/PredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullRejectingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StringBooleanBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractArgDependentTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TemporaryDBTypeConversionToStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/RelationExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ContainsSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/ImmutableTermsSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DatatypeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/IllegalTreeUpdateException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/NativeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/VariableGeneratorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IRIConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhInsideFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStrBeforeOrAfterSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OWL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfCrossesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStringInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/RelationNotFoundInMetadataException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTree2NativeNodeGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/FunctionalDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagWithPlaceholderFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDFS.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/TermNullabilityEvaluatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/LazyRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/TrueOrNullFunctionSymbol.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java:60: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream);
	                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java:15: warning: [optional.collection] Don't use Optional to wrap a collection type.
    Optional<ImmutableList<DBConstant>> decompose(DBConstant stringConstant);
                                        ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:92: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(term + " was expected to be " +
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:111: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The evaluation was expected " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:150: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(0) + " was expected to be " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:162: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(2*i) + " was expected to be " +
                                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:219: warning: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:364: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("Was expected to find this function symbol at the indicated position"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java:32: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator);
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java:37: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        i -> Optional.<T>ofNullable(argumentMap1.get(i)).orElseGet(() -> argumentMap2.get(i))));
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    JoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java:50: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild, VariableGenerator variableGenerator);
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java:16: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java:13: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    CommutativeJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<TermType> inferOutputType(Optional<TermType> extractSingleTermType);
                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:28: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map(Attribute::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:27: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map not allowed in side-effect-free method
                        .map(Attribute::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:26: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream not allowed in side-effect-free method
                getAttributes().stream()
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:28: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java:18: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String dbVersion;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Supplier<Injector> injectorSupplier;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Injector injector;
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:139: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Boolean> testMode = Optional.empty();
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:141: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Properties> inputProperties = Optional.empty();
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:42: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode createInnerJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:46: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode createLeftJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:52: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                  Optional<Variable> indexVariable, DBTermType dbTermType);
                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java:115: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnsupportedOperationException("No @IDFactoryType annotation found"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter((o)->(o instanceof TermType)).map((o)->(TermType)o).filter not allowed in deterministic side-effect-free method
                .filter(o -> o.toString().equals(toString()))
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:74: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter((o)->(o instanceof TermType)).map not allowed in deterministic side-effect-free method
                .map(o -> (TermType) o)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:73: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter not allowed in deterministic side-effect-free method
                .filter(o -> (o instanceof TermType))
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:72: warning: [purity.not.deterministic.call] call to non-deterministic method Optional.ofNullable not allowed in deterministic method
        return Optional.ofNullable(other)
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.call] call to non-deterministic method o.toString not allowed in deterministic method
                .filter(o -> o.toString().equals(toString()))
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final IRI functionIRI;
                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:21: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:52: warning: [contracts.precondition] precondition of new State(initialFilterNode, initialChild).normalizeChild is not satisfied.
                .normalizeChild(variableGenerator);
                               ^
  found   : "new State(initialFilterNode, initia...".condition is @MaybePresent
  required: "new State(initialFilterNode, initia...".condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:56: warning: [contracts.precondition] precondition of state.liftBindingsAndDistinct().mergeWithChild is not satisfied.
                    .mergeWithChild();
                                   ^
  found   : state.liftBindingsAndDistinct().condition is @MaybePresent
  required: state.liftBindingsAndDistinct().condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:55: warning: [contracts.precondition] precondition of state.liftBindingsAndDistinct is not satisfied.
            State stateBeforeSimplification = state.liftBindingsAndDistinct()
                                                                           ^
  found   : state.condition is @MaybePresent
  required: state.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:59: warning: [contracts.precondition] precondition of stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).normalizeChild is not satisfied.
                    .normalizeChild(variableGenerator);
                                   ^
  found   : stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).condition is @MaybePresent
  required: stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:58: warning: [contracts.precondition] precondition of stateBeforeSimplification.simplifyAndPropagateDownConstraint is not satisfied.
            State newState = stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator)
                                                                                         ^
  found   : stateBeforeSimplification.condition is @MaybePresent
  required: stateBeforeSimplification.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:63: warning: [contracts.precondition] precondition of newState.createNormalizedTree is not satisfied.
                return newState.createNormalizedTree(variableGenerator, treeCache);
                                                    ^
  found   : newState.condition is @MaybePresent
  required: newState.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:83: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> condition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:96: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                        Optional<ImmutableExpression> condition, IQTree child) {
                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:183: warning: [contracts.precondition] precondition of liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).liftBindingsAndDistinct is not satisfied.
                        .liftBindingsAndDistinct();
                                                ^
  found   : this.liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).condition is @MaybePresent
  required: this.liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:188: warning: [contracts.precondition] precondition of liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).liftBindingsAndDistinct is not satisfied.
                        .liftBindingsAndDistinct();
                                                ^
  found   : this.liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).condition is @MaybePresent
  required: this.liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:226: warning: [method.invocation] call to get() not allowed on the given receiver.
                            .map(c -> termFactory.getConjunction(condition.get(), c))
                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:68: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<OrderByNode> orderByNode;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State(ImmutableList<UnaryOperatorNode> ancestors, Optional<OrderByNode> orderByNode, IQTree child,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:87: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentOrderByAndChild(UnaryOperatorNode newParent, Optional<OrderByNode> newOrderByNode, IQTree newChild) {
                                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:19: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:90: warning: [optional.collection] Don't use Optional to wrap a collection type.
                ? Optional.of(ImmutableList.of(termFactory.getDBConstant(cst.getValue(), inputType)))
                ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java:26: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTopPropagatedNumericTypeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:84: warning: [purity.not.sideeffectfree.call] call to side-effecting ImmutableSet.of not allowed in side-effect-free method
            return ImmutableSet.of(
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:85: warning: [purity.not.sideeffectfree.call] call to side-effecting AbstractMap.SimpleImmutableEntry<> not allowed in side-effect-free method
                    new AbstractMap.SimpleImmutableEntry<>(false, forFalse),
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:86: warning: [purity.not.sideeffectfree.call] call to side-effecting AbstractMap.SimpleImmutableEntry<> not allowed in side-effect-free method
                    new AbstractMap.SimpleImmutableEntry<>(true, forTrue)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java:132: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<ArgumentMapUnifier<T>> optional;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private Optional<Substitution<T>> optionalSubstitution;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:62: warning: [method.invocation] call to get() not allowed on the given receiver.
        T term2 = operations.applyToTerm(optionalSubstitution.get(), t2);
                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:90: warning: [method.invocation] call to get() not allowed on the given receiver.
                optionalSubstitution = Optional.of(operations.compose(s, optionalSubstitution.get()));
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on(", ").withKeyValueSeparator("/").join not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on(", ").withKeyValueSeparator not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:89: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Unexpected empty disjunction"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:99: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The first argument of a IF_ELSE_NULL must be an expression"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<ImmutableExpression> leftJoinExpression,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:60: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:68: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL distinct aggregate function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:102: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:128: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:135: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            ImmutableMap<ConcreteNumericRDFDatatype, Variable> numericSubTermVarMap, Optional<Variable> optionalIncompatibleCountVariable,
                                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:136: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleSubVariable, TermFactory termFactory) {
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)))
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:155: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java:173: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    static Optional<IRI> tryExtractSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:169: warning: [method.invocation] call to get() not allowed on the given receiver.
                                                    ? extractConstantWKTLiteralValue(termFactory, subterm).get()
                                                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:33: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit name: " + name));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:40: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit iri: " + iri));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:80: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:107: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The order by was expected to be kept"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java:59: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("A simplified expression was expected"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append("=").append(r).append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append("=").append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:32: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
        bf.append("\n====== constraints ==========\n");
                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:34: warning: [purity.not.sideeffectfree.call] call to side-effecting r.getUniqueConstraints not allowed in side-effect-free method
            for (UniqueConstraint uc : r.getUniqueConstraints())
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:35: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(uc).append not allowed in side-effect-free method
                bf.append(uc).append(";\n");
                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:35: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
                bf.append(uc).append(";\n");
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:36: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:37: warning: [purity.not.sideeffectfree.call] call to side-effecting r.getForeignKeys not allowed in side-effect-free method
            for (ForeignKeyConstraint fk : r.getForeignKeys())
                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:38: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(fk).append not allowed in side-effect-free method
                bf.append(fk).append(";\n");
                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:38: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
                bf.append(fk).append(";\n");
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:39: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:27: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
        StringBuilder bf = new StringBuilder();
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java:115: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
        private final ImmutableExpression expression;
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:99: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(functionSymbol.toString());
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:100: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append("(");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream().map(ImmutableTerm::toString).collect not allowed in side-effect-free method
                    .collect(Collectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream().map not allowed in side-effect-free method
                    .map(ImmutableTerm::toString)
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:102: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream not allowed in side-effect-free method
            List<String> argumentStrings = terms.stream()
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                    .collect(Collectors.toList());
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:106: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(String.join(",", argumentStrings));
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:107: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(")");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:108: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = sb.toString();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:98: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
            StringBuilder sb = new StringBuilder();
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:120: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
            return toString().equals(other.toString());
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:120: warning: [purity.not.deterministic.call] call to non-deterministic method other.toString not allowed in deterministic method
            return toString().equals(other.toString());
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:127: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java:133: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("Arity > 1 was expected"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:49: warning: [purity.not.deterministic.not.sideeffectfree.assign.field] field assignment not allowed in deterministic side-effect-free method
            next = shift();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:49: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting shift not allowed in deterministic side-effect-free method
            next = shift();
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:50: warning: [purity.not.deterministic.not.sideeffectfree.assign.field] field assignment not allowed in deterministic side-effect-free method
            movedToNext = true;
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:25: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map(Attribute::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:24: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map not allowed in side-effect-free method
                        .map(Attribute::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:23: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream not allowed in side-effect-free method
                getAttributes().stream()
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:25: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:108: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> ljCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:114: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                     Optional<ImmutableExpression> ljCondition,
                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:126: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       IQTree initialRightChild, Optional<ImmutableExpression> ljCondition,
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:131: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private LJNormalizationState updateConditionAndRightChild(Optional<ImmutableExpression> newLJCondition,
                                                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:141: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                UnaryOperatorNode newParent, Optional<ImmutableExpression> newLJCondition, IQTree newRightChild) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:146: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:158: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:208: warning: [purity.methodref] Incompatible purity declaration
                        childVariableNullability, this::applyLeftChildBindingLift)
                                                  ^
  Method in @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState
    @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState applyLeftChildBindingLift(@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
    is not a valid method reference for method in @MaybePresent BindingLiftConverter<@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState>
    @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState convert(@MaybePresent BindingLiftConverter<@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState> this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:322: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> ljCondition, Substitution<ImmutableTerm> naiveAscendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:470: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        provenanceVariable.orElseThrow(() -> new MinorOntopInternalBugException("An entry was expected")),
                                                      ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:657: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<Variable> rightProvenanceVariable, ImmutableSet<Variable> leftVariables) {
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:667: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                              Optional<Variable> defaultRightProvenanceVariable) {
                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:678: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("A default provenance variable was needed"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                         Optional<ImmutableExpression> initialJoiningCondition,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                  Optional<ImmutableExpression> newCondition,
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                      Optional<ImmutableExpression> joiningCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ConstructionNode childConstructionNode;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:153: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A lifted construction node was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:69: warning: [method.invocation] call to get() not allowed on the given receiver.
        return getOptionalFilterCondition().get();
                                               ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:213: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return FILTER_NODE_STR + getOptionalFilterString();
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:228: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalFilterCondition;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinOrFilterNodeImpl(Optional<ImmutableExpression> optionalFilterCondition,
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java:22: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nonRequiredVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:124: warning: [purity.methodref] Incompatible purity declaration
                variableMapper, termMapper, ImmutableMap.Builder::put, this::createSubstitution);
                                            ^
  Method in @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>
    @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> put(@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> this, @MaybePresent Variable p0, T extends @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>, @MaybePresent Variable, T extends @MaybePresent ImmutableTerm>
    void put(@MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>, @MaybePresent Variable, T extends @MaybePresent ImmutableTerm> this, @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> p0, @MaybePresent Variable p1, T extends @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:146: warning: [purity.methodref] Incompatible purity declaration
                v -> v, variableGenerator::generateNewVariableFromVar, ImmutableMap.Builder::put, m -> createSubstitution(m).injective());
                                                                       ^
  Method in @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>
    @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> put(@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> this, @MaybePresent Variable p0, @MaybePresent Variable p1)
    is not a valid method reference for method in @MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>, @MaybePresent Variable, @MaybePresent Variable>
    void put(@MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>, @MaybePresent Variable, @MaybePresent Variable> this, @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> p0, @MaybePresent Variable p1, @MaybePresent Variable p2)
  found   : []
  required: [SIDE_EFFECT_FREE]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:273: warning: [method.invocation] call to get() not allowed on the given receiver.
                        return attemptUnifying(term1, term2).get();
                                                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:142: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:170: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:184: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:67: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:69: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:76: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:179: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent Boolean>
  required: @MaybePresent Optional<@MaybePresent Boolean>
  Consequence: method in @MaybePresent Optional<@MaybePresent Boolean>
    @MaybePresent Boolean get(@Present Optional<@MaybePresent Boolean> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean>
    @MaybePresent Boolean apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean> this, @MaybePresent Optional<@MaybePresent Boolean> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:63: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:65: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:72: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:151: warning: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .map(oe -> oe
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:53: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(variableGenerator::generateNewVariable))
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:59: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public static IQTree toIQTree(ImmutableList<? extends IQTree> extensionalNodes, Optional<ImmutableExpression> joiningConditions,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:122: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return getExtensionalDataNodes(tree.getChildren().get(0), coreSingletons);
                                          ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:125: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of((ExtensionalDataNode)tree));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:128: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of());
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:131: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of(convertIntoExtensionalDataNode((ValuesNode) node, coreSingletons)));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:135: warning: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:141: warning: [optional.collection] Don't use Optional to wrap a collection type.
        return Optional.empty();
                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
            return ((FilterNode)tree.getRootNode()).getOptionalFilterCondition().get().flattenAND()
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java:67: warning: [method.invocation] call to get() not allowed on the given receiver.
                    dbFunctionSymbolFct.apply(dbTypeFactory.getDBStringType()).get(), subLexicalTerms.get(0));
                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:134: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("groups must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:266: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("An expression was expected"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:372: warning: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> ucsPartitionedByDisjointness.get(true).stream().noneMatch(set -> set.size() == 1 && set.stream().findFirst().get().equals(v)))
                                                                                                                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:405: warning: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> fdsPartitionedByDisjointness.get(true).stream().noneMatch(entry -> entry.getKey().size() == 1 && entry.getKey().stream().findFirst().get().equals(v)))
                                                                                                                                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:510: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:663: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .flatMap(t -> t);
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:767: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new QueryNodeSubstitutionException("The descending substitution " + mergedSubstitution
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:130: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expecting " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:222: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:228: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("cannot be empty because there is at least one variable in the templates (taken together)"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:413: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern injectivePattern; // lazy initalization
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:474: warning: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java:87: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern pattern;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:51: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                          Optional<ImmutableExpression> constraint,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:133: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(ConstructionNodeImpl.EmptyTreeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:288: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        v -> getDeterminedBy(Optional.ofNullable(substitution.get(v)).orElse(v), variableNullability)
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:592: warning: [optional.field] Don't use Optional as the type of a field.
        public final Optional<ImmutableExpression> filter;
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:597: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                          Optional<ImmutableExpression> newF) {
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java:21: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ImmutableExpression simplifiedExpression;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableGenerator variableGenerator;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java:105: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java:54: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:164: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get))
                             ^
  found   : @Present Optional<@MaybePresent DefinitionPushDownRequest>
  required: @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
  Consequence: method in @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest get(@Present Optional<@MaybePresent DefinitionPushDownRequest> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest> this, @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:202: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Substitution<ImmutableFunctionalTerm> computeSubstitution(Optional<Variable> optionalNumAvgVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalNumSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:204: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleCountVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:213: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, createAggregate(xsdDecimal, optionalNumSubVariable.get(), termFactory)));
                                                                                                       ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:219: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)));
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:236: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableFunctionalTerm computeLiftableTerm(Optional<Variable> optionalNumAvgVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:238: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:253: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeLexicalTerm(Optional<Variable> optionalFloatingAggVariable,
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                             Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:275: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeTypeTerm(Optional<Variable> optionalNumAvgVariable,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:277: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                          Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private]
    private IQ iq;
               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:11: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<DBTermType> itemType;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:18: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ArrayDBTermType(String arrayStr, TermTypeAncestry ancestry, Optional<DBTermType> itemType, ArrayTypeFromSignature parsingFunction) {
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:65: warning: [method.invocation] call to get() not allowed on the given receiver.
        return ImmutableList.of(this.itemType.get());
                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java:25: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(t -> t.negate(termFactory))).get();
                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:120: warning: [method.invocation] call to get() not allowed on the given receiver.
                                .get(),
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:125: warning: [method.invocation] call to get() not allowed on the given receiver.
                                .get()))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java:95: warning: [method.invocation] call to get() not allowed on the given receiver.
                        e -> e.getValue().get()));
                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2056: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(() -> getDBCastFunctionSymbol(inputType, dbStringType)));
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2073: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(() -> getDBCastFunctionSymbol(dbStringType, targetDBType));
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:48: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The first term of an IF_ELSE_NULL " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:68: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Inconsistent evaluation"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The first term in ifElseNullTerms was expected " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:177: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expected an immutable expression as first term"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:200: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("was expected an ImmutableExpression as first sub-term"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:235: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("Wrong index"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> definedVariable) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:64: warning: [argument] incompatible argument for parameter definedVariable of ProjectionDecomposerImpl.decomposeDefinition.
                        .map(t -> decomposeDefinition(t, variableGenerator, Optional.empty()))
                                                                                          ^
  found   : @MaybePresent Optional<@MaybePresent Variable>
  required: @Present Optional<@MaybePresent Variable>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:121: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<Substitution<ImmutableTerm>> substitution;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:83: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:94: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("otherTerms must be non-empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:100: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                         Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java:74: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> knownVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:40: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:116: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = printSubtree(this, "");
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:116: warning: [purity.not.sideeffectfree.call] call to side-effecting printSubtree not allowed in side-effect-free method
            string = printSubtree(this, "");
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:142: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:188: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<ImmutableExpression> normalizeConstraint(Optional<ImmutableExpression> constraint,
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:206: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                 Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator);
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QualifiedAttributeID.java:78: warning: [purity.not.sideeffectfree.call] call to side-effecting getSQLRendering not allowed in side-effect-free method
		return getSQLRendering();
		                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:39: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Long limit;
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:228: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("There should be one child"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:235: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one child expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:337: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RelationIDImpl.java:60: warning: [purity.not.sideeffectfree.call] call to side-effecting getSQLRendering not allowed in side-effect-free method
        return getSQLRendering();
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/DBConstantImpl.java:68: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((DBConstant)other).getValue not allowed in deterministic side-effect-free method
                    ((DBConstant) other).getValue().equals(this.value));
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IRIConstantImpl.java:68: warning: [purity.not.sideeffectfree.call] call to side-effecting iri.getIRIString not allowed in side-effect-free method
		return "<" + iri.getIRIString() + ">";
		                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java:61: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting otherType.getLanguageTag().filter not allowed in deterministic side-effect-free method
                    .filter(langTag::equals)
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java:60: warning: [purity.not.deterministic.call] call to non-deterministic method otherType.getLanguageTag not allowed in deterministic method
            return otherType.getLanguageTag()
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java:35: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  required: @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  Consequence: method in @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> get(@Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>> this, @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:349: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBHoursBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBHoursBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:351: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBMinutesBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBMinutesBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:353: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBSecondsBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBSecondsBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:355: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBMillisBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBMillisBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nullableVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:36: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableMap<Variable, Integer> variableMap;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:189: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map(Attribute::getID).map(QuotedID::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:188: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map(Attribute::getID).map not allowed in side-effect-free method
                        .map(QuotedID::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:187: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map not allowed in side-effect-free method
                        .map(Attribute::getID)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:186: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream not allowed in side-effect-free method
                attributes.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:189: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java:28: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTermTypeOriginException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:71: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new UnknownClassException(String.format(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnknownClassException(String.format(
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:17: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::everything;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> everything(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : [SIDE_EFFECT_FREE]
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:19: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidInteger;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidInteger(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:21: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidDecimal;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @MaybePresent Optional<@MaybePresent Boolean> isValidDecimal(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:23: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidDouble;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidDouble(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:25: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidUUID;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidUUID(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:30: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::unknown;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @MaybePresent Optional<@MaybePresent Boolean> unknown(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : [SIDE_EFFECT_FREE]
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:109: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> joiningCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:115: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                      Optional<ImmutableExpression> joiningCondition, VariableGenerator variableGenerator,
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:128: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        public State(ImmutableList<IQTree> children, Optional<ImmutableExpression> joiningCondition,
                                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateConditionAndChildren(Optional<ImmutableExpression> newCondition,
                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:148: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentConditionAndChildren(UnaryOperatorNode newParent, Optional<ImmutableExpression> newCondition,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:245: warning: [purity.methodref] Incompatible purity declaration
                        newChildrenVariableNullability, this::convertIntoState);
                                                        ^
  Method in @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State
    @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State convertIntoState(@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
    is not a valid method reference for method in @MaybePresent BindingLiftConverter<@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State>
    @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State convert(@MaybePresent BindingLiftConverter<@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State> this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> notNormalizedCondition, Substitution<ImmutableTerm> ascendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:452: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get);
                         ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:505: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<ImmutableExpression> condition;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:141: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final FilterNode sampleFilter;
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:143: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final ConstructionNode childConstructionNode;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:298: warning: [method.invocation] call to get() not allowed on the given receiver.
                    s -> newAggregationSubstitution.compose(substitutionFactory.getSubstitution(sampleVariable.get(), termFactory.getDBSample(termFactory.getDBIntegerConstant(1), termFactory.getTypeFactory().getDBTypeFactory().getDBLargeIntegerType())))
                                                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:12: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalExpression;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitutionImpl(Optional<ImmutableExpression> optionalExpression,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:48: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:52: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:56: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:60: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:64: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:147: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = determinants.stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:149: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:155: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#05 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm>
    capture#06 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:213: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  required: @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> get(@Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>> this, @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:220: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = uniqueConstraint.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:222: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:225: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.empty();
                                 ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:228: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#07 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm>
    capture#08 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:239: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:245: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> determinants = functionalDependency.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:247: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:249: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> dependents = functionalDependency.getDependents().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:251: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:258: warning: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#09 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm>
    capture#010 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:264: warning: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#011 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm>
    capture#012 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:311: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream().map((e)->e.getKey() + ":" + e.getValue()).collect not allowed in side-effect-free method
                .collect(Collectors.joining(",")));
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:310: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream().map not allowed in side-effect-free method
                .map(e -> e.getKey() + ":" + e.getValue())
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:309: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream not allowed in side-effect-free method
                argumentMap.entrySet().stream()
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:311: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                .collect(Collectors.joining(",")));
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:20: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:33: warning: [contracts.postcondition.override] Subclass postcondition is weaker for 'this.inputType' in checkValueValidityForDecomposition.
    protected boolean checkValueValidityForDecomposition(String value) {
                      ^
    In superclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultSimpleDBCastFunctionSymbol: @MaybePresent
    In subclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultCastIntegerToStringFunctionSymbol: no information
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:40: warning: [contracts.postcondition.override] Subclass postcondition is weaker for 'this.inputType' in evaluateStrictEqWithNonNullConstant.
    protected IncrementalEvaluation evaluateStrictEqWithNonNullConstant(ImmutableList<? extends ImmutableTerm> terms,
                                    ^
    In superclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultSimpleDBCastFunctionSymbol: @MaybePresent
    In subclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultCastIntegerToStringFunctionSymbol: no information
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:113: warning: [method.invocation] call to get() not allowed on the given receiver.
                        otherExpressionBuilder.add(evaluation.getNewExpression().get());
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:151: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("expressions must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:255: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:333: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type to compare with was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream().map(FunctionalDependency::toString).collect not allowed in side-effect-free method
                .collect(ImmutableCollectors.toList())));
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:75: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream().map not allowed in side-effect-free method
                .map(FunctionalDependency::toString)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:74: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream not allowed in side-effect-free method
        return String.format("[%s]", String.join("; ", dependencies.stream()
                                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting ImmutableCollectors.toList not allowed in side-effect-free method
                .collect(ImmutableCollectors.toList())));
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:153: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.stream().reduce not allowed in deterministic side-effect-free method
                .reduce(0, (sum, n) -> sum ^ n.hashCode(), Integer::sum);
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:152: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.stream not allowed in deterministic side-effect-free method
        return dependencies.stream()
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:206: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream().map(Variable::toString).collect not allowed in side-effect-free method
                                    .collect(Collectors.toList())),
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:205: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream().map not allowed in side-effect-free method
                                    .map(Variable::toString)
                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:204: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream not allowed in side-effect-free method
                            String.join(", ", determinants.stream()
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:206: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                                    .collect(Collectors.toList())),
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:209: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream().map(Variable::toString).collect not allowed in side-effect-free method
                                    .collect(Collectors.toList()))
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:208: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream().map not allowed in side-effect-free method
                                    .map(Variable::toString)
                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:207: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream not allowed in side-effect-free method
                            String.join(", ", dependents.stream()
                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:209: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                                    .collect(Collectors.toList()))
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:42: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
	private final DBConstant doubleNaN;
	                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:214: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	public Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream) {
	                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:40: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<Variable> indexVariable;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:47: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                            @Assisted Optional<Variable> indexVariable,
                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:82: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<TermType> inferOutputType(Optional<TermType> flattenedVarType) {
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:131: warning: [purity.not.sideeffectfree.call] call to side-effecting indexVariable.map not allowed in side-effect-free method
                indexVariable.map(v -> ", " + v + "/indexIn(" + flattenedVariable + ")").orElse("") +
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:147: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:150: warning: [purity.methodref] Incompatible purity declaration
                IQTree::applyDescendingSubstitution);
                ^
  Method in @MaybePresent IQTree
    @MaybePresent IQTree applyDescendingSubstitution(@MaybePresent IQTree this, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p0, @MaybePresent Optional<@MaybePresent ImmutableExpression> p1, @MaybePresent VariableGenerator p2)
    is not a valid method reference for method in @MaybePresent PropagateToChild
    @MaybePresent IQTree apply(@MaybePresent PropagateToChild this, @MaybePresent IQTree p0, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p1, @MaybePresent Optional<@MaybePresent ImmutableExpression> p2, @MaybePresent VariableGenerator p3)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                               Optional<ImmutableExpression> constraint, IQTree child,
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                (c, s, constraint, vGenerator) -> c.applyDescendingSubstitutionWithoutOptimizing(s, vGenerator));
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:236: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(constraint -> Stream.concat(constraint.stream(), Stream.of(indexVariable.get()))
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:406: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                     Optional<ImmutableExpression> optionalConstraint, VariableGenerator variableGenerator);
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java:124: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinLikeNodeImpl(Optional<ImmutableExpression> optionalJoinCondition,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java:107: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:29: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("BooleanDBIfElseNullFunctionSymbol was " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:69: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Was an expected an immutable expression " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:388: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:391: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:433: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A projected variable was expected as argument"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:485: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  required: @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> get(@Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>> this, @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:627: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream().map((tuple)->tuple.stream().map(String::valueOf).collect(Collectors.joining(",", " (", ")"))).collect not allowed in side-effect-free method
                .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream().map not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:626: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream().map(String::valueOf).collect not allowed in side-effect-free method
                .collect(Collectors.joining(","," (",")")))
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:625: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream().map not allowed in side-effect-free method
                .map(String::valueOf)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:626: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                .collect(Collectors.joining(","," (",")")))
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java:13: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<String> optionalSuffix;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable boundVariable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java:44: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<String> getSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting relation.getID().getSQLRendering not allowed in side-effect-free method
        return "ALTER TABLE " + relation.getID().getSQLRendering() +
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:156: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map((c)->c.getAttribute().getID().toString()).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:155: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map not allowed in side-effect-free method
                        .map(c -> c.getAttribute().getID().toString())
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:154: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream not allowed in side-effect-free method
                components.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:156: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting referencedRelation.getID().getSQLRendering not allowed in side-effect-free method
                ") REFERENCES " + referencedRelation.getID().getSQLRendering() +
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:161: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map((c)->c.getReferencedAttribute().getID().toString()).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:160: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map not allowed in side-effect-free method
                        .map(c -> c.getReferencedAttribute().getID().toString())
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:159: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream not allowed in side-effect-free method
                components.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:161: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
            return toString().equals(other.toString());
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method other.toString not allowed in deterministic method
            return toString().equals(other.toString());
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:87: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:97: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(predicate.toString());
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:98: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append("(");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:101: warning: [purity.not.sideeffectfree.call] call to side-effecting arguments.stream().map not allowed in side-effect-free method
                    .map(VariableOrGroundTerm::toString);
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:100: warning: [purity.not.sideeffectfree.call] call to side-effecting arguments.stream not allowed in side-effect-free method
            Stream<String> argumentStrings = arguments.stream()
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentStrings.collect not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(")");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:105: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = sb.toString();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:96: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
            StringBuilder sb = new StringBuilder();
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:50: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
            return optionalMergedTypeConstant.orElseThrow(() ->
                                                         ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:75: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:48: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private LeftJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalJoinCondition,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:112: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return LEFT_JOIN_NODE_STR + getOptionalFilterString();
                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:243: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:363: warning: [method.invocation] call to get() not allowed on the given receiver.
                        optionalFilterCondition.get(), nullableGroups, rightVariables))
                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:428: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private IQTree propagateDownCondition(Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:43: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:102: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(UnsatisfiableConditionException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:130: warning: [method.invocation] call to get() not allowed on the given receiver.
                groundFunctionalSubstitution.get().apply(partiallySimplifiedExpression.get()),
                                                                                          ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:57: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:64: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:38: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Substitution<NonVariableTerm>> possibleVariableDefinitions;
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:44: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:47: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private FunctionalDependencies functionalDependencies;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:50: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final TermType termType;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable variable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:56: warning: [purity.not.deterministic.call] call to non-deterministic method getTermType not allowed in deterministic method
                && getTermType().equals(((TermTypeInference) o).getTermType());
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:56: warning: [purity.not.deterministic.call] call to non-deterministic method ((TermTypeInference)o).getTermType not allowed in deterministic method
                && getTermType().equals(((TermTypeInference) o).getTermType());
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:61: warning: [purity.not.deterministic.call] call to non-deterministic method getTermType not allowed in deterministic method
        return getTermType().hashCode();
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> topSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> subSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected InnerJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalFilterCondition,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:118: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:136: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return JOIN_NODE_STR + getOptionalFilterString();
                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:149: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
461 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-173348-w74vst6l/iteration5' '-classpath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-api/0.5.0/commons-rdf-api-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-simple/0.5.0/commons-rdf-simple-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.1-jre/guava-32.0.1-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.8.0/checker-qual-3.8.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.5.1/error_prone_annotations-2.5.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/guice/5.0.1/guice-5.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/extensions/guice-assistedinject/5.0.1/guice-assistedinject-5.0.1.jar:/homes/gws/jmsy/.m2/repository/io/github/solf/nullanno/3.0.0/nullanno-3.0.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/io/mikael/urlbuilder/2.0.9/urlbuilder-2.0.9.jar:/homes/gws/jmsy/.m2/repository/org/locationtech/proj4j/proj4j/1.1.1/proj4j-1.1.1.jar:/homes/gws/jmsy/.m2/repository/commons-codec/commons-codec/1.14/commons-codec-1.14.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.2/jackson-core-2.13.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.4.2/jackson-databind-2.13.4.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.2/jackson-annotations-2.13.2.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model/4.2.4/rdf4j-model-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-api/4.2.4/rdf4j-model-api-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-annotation/4.2.4/rdf4j-common-annotation-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-vocabulary/4.2.4/rdf4j-model-vocabulary-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-exception/4.2.4/rdf4j-common-exception-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-text/4.2.4/rdf4j-common-text-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-io/4.2.4/rdf4j-common-io-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-util/4.2.4/rdf4j-common-util-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-iterator/4.2.4/rdf4j-common-iterator-4.2.4.jar:/homes/gws/jmsy/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes' '-sourcepath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java:/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations' '-g' '--release' '11' '--release' '11' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBNonStrictEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCaseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBHashFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotYetTypedEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/CompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/LinearInclusionDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSampleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/VariableOrGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBStdevFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/EmptyQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NowSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFDatatypeStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/UnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidQueryNodeException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/NaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AttributeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RegexSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConstructionSubstitutionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/WKTLiteralValue.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonPostProcessedSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBoundaryFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRISafenessDeclarationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/QueryRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolSerializer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NonStrictEqSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UnsupportedRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeInference.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BoundSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQTreeTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/ExpressionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/TemplateParser.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalInequalityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsLiteralSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/ObjectStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DatabaseInfoSupplier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StartsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsStringEmptyFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/LeafIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractSubStrSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrBeforeOrAfterFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphism.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidOntopConfigurationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/UOM.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractNamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/IQVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderComparatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedBinaryMathOperationTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/VariableNullability.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReduciblePositiveAritySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/VariableImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/AbstractPredicateExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/LowerCaseDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRIStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/TrueNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeAncestry.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DivideSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/NonDeterministicDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FlattenNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNumberNormAsBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/CompositeIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FlattenNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTimeTzNormalizationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalAndSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/DefPushDownRequestImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ExtractLexicalTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/TriplePredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DBParameters.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDateInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofDoubleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/SimpleRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenElseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/QueryTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/DistinctNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnsatisfiableConditionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MetadataExtractionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/AbstractExpressionTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/TemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GreaterThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnSimpleBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/DefinitionPushDownRequest.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EqFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DateTruncSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OFN.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidIntermediateQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfTouchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfWithinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ZeroAryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/TriplePredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/NumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFTermTypeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/ArgumentSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeSubstitutionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBGroupConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ConstructionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/Template.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/JsonDBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypeFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/QuotedIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/IRITermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/TypeConstantDictionary.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MultitypedInputUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLangTagLikeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractBinaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/FunctionalTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoveredByFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Attribute.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/FalseOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryNumericLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/PartiallyTypedSimpleCastTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BooleanDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Nullifiers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/EmptyNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Constant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhOverlapFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/SQLStandardQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/QueryRenamerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSimilarToFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/BinaryNonCommutativeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/StandardNotationDBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImplUsingRelate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRIStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DateDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtendedProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIfDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQSyntacticContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractSimpleMultitypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MockupDBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/LanguageTag.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/PredicateConstants.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioNonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/VarianceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/NotRequiredVariableRemover.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SameTermSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfIntersectsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/RDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioArrayAccessDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractIsASPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/DistinctNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBVarianceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RDFAtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConstructionSubstitutionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EBVSPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IriSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/EmptyNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelSettings.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDefaultInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BlankNodeTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExplicitVariableProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/SliceNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBSumFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEO.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrUUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictNumericEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/AggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnMultitypedInputBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSymDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DistinctVariableOnlyDataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryStringSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/NoNullValuesEnforcerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/QueryTransformerFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimpleTypedDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFLiteralConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IndexInFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFLiteralConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/ConversionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/PartiallyTypedSimpleCastTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UUIDDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBnodeSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/ObjectTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalNonStrictEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/IDGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha384SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/StringUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullToleratingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/Predicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/CoreUtilsFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/QuadPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableExpression.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrlenSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryModifierNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QualifiedAttributeID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/Ontop.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBufferFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractUnaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha256SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEOF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/LangSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OntopInternal.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNodeVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/OfflineMetadataProviderBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/SingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryBooleanSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofIntersectionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsARDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/InjectiveSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ImmutableMetadata.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/OrderByNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalLangMatchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfOverlapsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/MetaRDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RelationIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofConvexHullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRISafenessDeclarationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/DBConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/AGG.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBTypeConversionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GroupConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrBeforeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDatetimeInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypePropagationSubstitutionHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/ChildTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ForcingFloatingDBAvgFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/Substitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangMatchesSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/QuadPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQContainmentCheckUnderLIDs.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBCountFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/FunctionalDependencyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha512SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLexicalNonStrictEqOrInequalityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/AggregationNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/DBConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/AggregationNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/RDFAtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ValuesNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDefaultEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/BNodeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/LinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RandSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBArrayObjectAccessFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryBooleanOperatorSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IRIConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SQLServerDBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDF2DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XSD.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundTermTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFTermTypeConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/LegacyVariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateMFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8DcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/R2RMLIRISafeEncoder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDistanceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/IntensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/AbstractTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DelegatingMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalOrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrAfterSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NumericBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Serializers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/GenericDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NativeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/BasicSingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/BnodeStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIRIFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBRegexMatchAsLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/CoreSingletons.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NullConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrAfterFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha1SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/TrueNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonVariableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ConcreteNumericRDFDatatypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/AttributeNotFoundException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Lens.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/ConcreteIQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNumericInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MinorOntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/InnerJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/NoNullValueEnforcer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/WrappedDBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIntegerFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TrueOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Variable.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EndsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/NotYetTypedEqualityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhMeetFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/InequalityLabel.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/VariableNonRequirement.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/CompositeQueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/OntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDateEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/BasicLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMaxFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/BNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictNEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/FunctionalDependency.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/BnodeTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IfSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/VariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ConcreteNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ForeignKeyConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofWKTFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictStringEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AreCompatibleRDFStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/UniqueConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISODenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/InjectiveSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryCastDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/FunctionalTermSimplification.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoversFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XPathFunction.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsBlankSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/OrderByNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/LeftJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/QueryNodeRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrEndsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8PoFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AggregationSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Md5SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/IntensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/StringDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReplaceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/BooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/ProjectionDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIsNullOrNotFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/NamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBAvgFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedEqualityTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RelationPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MetaRDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/IRITemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ObjectConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsIRISPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonConstantTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr3SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBTypeConversionFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DenodoDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractHashSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr2SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/DistinctNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelConfiguration.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/TermNullabilityEvaluator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CoalesceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermTypeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/EqualsTrueDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FilterNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryModifierNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DistinctVariableOnlyDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/ExpressionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LessThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEnvelopeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/CachingMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BnodeStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/HomogeneousIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISONormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AvgSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SimpleUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryNonCommutativeOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofUnionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/LexicalSpace.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/CoreSingletonsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CountSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StdevSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrBeforeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/SPARQL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDatetimeEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNonDeterministicNullaryFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryComparisonSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/FullLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/NotRequiredVariableRemoverImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/UnaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RawQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IncrementalEvaluation.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/node/HomogeneousQueryNodeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/PredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullRejectingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StringBooleanBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractArgDependentTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TemporaryDBTypeConversionToStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/RelationExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ContainsSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/ImmutableTermsSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DatatypeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/IllegalTreeUpdateException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/NativeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/VariableGeneratorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IRIConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhInsideFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStrBeforeOrAfterSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OWL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfCrossesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStringInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/RelationNotFoundInMetadataException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTree2NativeNodeGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/FunctionalDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagWithPlaceholderFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDFS.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/TermNullabilityEvaluatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/LazyRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/TrueOrNullFunctionSymbol.java' '-Ainfer=ajava' '-Awarns'

/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java:60: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream);
	                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java:15: warning: [optional.collection] Don't use Optional to wrap a collection type.
    Optional<ImmutableList<DBConstant>> decompose(DBConstant stringConstant);
                                        ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:92: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(term + " was expected to be " +
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:111: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The evaluation was expected " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:150: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(0) + " was expected to be " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:162: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(2*i) + " was expected to be " +
                                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:219: warning: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:364: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("Was expected to find this function symbol at the indicated position"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java:32: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator);
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java:37: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        i -> Optional.<T>ofNullable(argumentMap1.get(i)).orElseGet(() -> argumentMap2.get(i))));
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    JoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java:50: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild, VariableGenerator variableGenerator);
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java:16: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java:13: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    CommutativeJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<TermType> inferOutputType(Optional<TermType> extractSingleTermType);
                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:28: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map(Attribute::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:27: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map not allowed in side-effect-free method
                        .map(Attribute::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:26: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream not allowed in side-effect-free method
                getAttributes().stream()
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java:28: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java:18: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String dbVersion;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Supplier<Injector> injectorSupplier;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Injector injector;
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:139: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Boolean> testMode = Optional.empty();
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:141: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Properties> inputProperties = Optional.empty();
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:42: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode createInnerJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:46: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode createLeftJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:52: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                  Optional<Variable> indexVariable, DBTermType dbTermType);
                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java:115: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnsupportedOperationException("No @IDFactoryType annotation found"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter((o)->(o instanceof TermType)).map((o)->(TermType)o).filter not allowed in deterministic side-effect-free method
                .filter(o -> o.toString().equals(toString()))
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:74: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter((o)->(o instanceof TermType)).map not allowed in deterministic side-effect-free method
                .map(o -> (TermType) o)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:73: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting Optional.ofNullable(other).filter not allowed in deterministic side-effect-free method
                .filter(o -> (o instanceof TermType))
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:72: warning: [purity.not.deterministic.call] call to non-deterministic method Optional.ofNullable not allowed in deterministic method
        return Optional.ofNullable(other)
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java:75: warning: [purity.not.deterministic.call] call to non-deterministic method o.toString not allowed in deterministic method
                .filter(o -> o.toString().equals(toString()))
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final IRI functionIRI;
                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:21: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:52: warning: [contracts.precondition] precondition of new State(initialFilterNode, initialChild).normalizeChild is not satisfied.
                .normalizeChild(variableGenerator);
                               ^
  found   : "new State(initialFilterNode, initia...".condition is @MaybePresent
  required: "new State(initialFilterNode, initia...".condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:56: warning: [contracts.precondition] precondition of state.liftBindingsAndDistinct().mergeWithChild is not satisfied.
                    .mergeWithChild();
                                   ^
  found   : state.liftBindingsAndDistinct().condition is @MaybePresent
  required: state.liftBindingsAndDistinct().condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:55: warning: [contracts.precondition] precondition of state.liftBindingsAndDistinct is not satisfied.
            State stateBeforeSimplification = state.liftBindingsAndDistinct()
                                                                           ^
  found   : state.condition is @MaybePresent
  required: state.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:59: warning: [contracts.precondition] precondition of stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).normalizeChild is not satisfied.
                    .normalizeChild(variableGenerator);
                                   ^
  found   : stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).condition is @MaybePresent
  required: stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:58: warning: [contracts.precondition] precondition of stateBeforeSimplification.simplifyAndPropagateDownConstraint is not satisfied.
            State newState = stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator)
                                                                                         ^
  found   : stateBeforeSimplification.condition is @MaybePresent
  required: stateBeforeSimplification.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:63: warning: [contracts.precondition] precondition of newState.createNormalizedTree is not satisfied.
                return newState.createNormalizedTree(variableGenerator, treeCache);
                                                    ^
  found   : newState.condition is @MaybePresent
  required: newState.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:83: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> condition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:96: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                        Optional<ImmutableExpression> condition, IQTree child) {
                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:183: warning: [contracts.precondition] precondition of liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).liftBindingsAndDistinct is not satisfied.
                        .liftBindingsAndDistinct();
                                                ^
  found   : this.liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).condition is @MaybePresent
  required: this.liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:188: warning: [contracts.precondition] precondition of liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).liftBindingsAndDistinct is not satisfied.
                        .liftBindingsAndDistinct();
                                                ^
  found   : this.liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).condition is @MaybePresent
  required: this.liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:226: warning: [method.invocation] call to get() not allowed on the given receiver.
                            .map(c -> termFactory.getConjunction(condition.get(), c))
                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:68: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<OrderByNode> orderByNode;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State(ImmutableList<UnaryOperatorNode> ancestors, Optional<OrderByNode> orderByNode, IQTree child,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:87: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentOrderByAndChild(UnaryOperatorNode newParent, Optional<OrderByNode> newOrderByNode, IQTree newChild) {
                                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:19: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:90: warning: [optional.collection] Don't use Optional to wrap a collection type.
                ? Optional.of(ImmutableList.of(termFactory.getDBConstant(cst.getValue(), inputType)))
                ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java:26: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTopPropagatedNumericTypeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:84: warning: [purity.not.sideeffectfree.call] call to side-effecting ImmutableSet.of not allowed in side-effect-free method
            return ImmutableSet.of(
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:85: warning: [purity.not.sideeffectfree.call] call to side-effecting AbstractMap.SimpleImmutableEntry<> not allowed in side-effect-free method
                    new AbstractMap.SimpleImmutableEntry<>(false, forFalse),
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java:86: warning: [purity.not.sideeffectfree.call] call to side-effecting AbstractMap.SimpleImmutableEntry<> not allowed in side-effect-free method
                    new AbstractMap.SimpleImmutableEntry<>(true, forTrue)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java:132: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<ArgumentMapUnifier<T>> optional;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private Optional<Substitution<T>> optionalSubstitution;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:62: warning: [method.invocation] call to get() not allowed on the given receiver.
        T term2 = operations.applyToTerm(optionalSubstitution.get(), t2);
                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:90: warning: [method.invocation] call to get() not allowed on the given receiver.
                optionalSubstitution = Optional.of(operations.compose(s, optionalSubstitution.get()));
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on(", ").withKeyValueSeparator("/").join not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on(", ").withKeyValueSeparator not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java:266: warning: [purity.not.sideeffectfree.call] call to side-effecting Joiner.on not allowed in side-effect-free method
        return Joiner.on(", ").withKeyValueSeparator("/").join(map);
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:89: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Unexpected empty disjunction"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:99: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The first argument of a IF_ELSE_NULL must be an expression"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<ImmutableExpression> leftJoinExpression,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:60: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:68: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL distinct aggregate function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:102: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:128: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:135: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            ImmutableMap<ConcreteNumericRDFDatatype, Variable> numericSubTermVarMap, Optional<Variable> optionalIncompatibleCountVariable,
                                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:136: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleSubVariable, TermFactory termFactory) {
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)))
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:155: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java:173: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    static Optional<IRI> tryExtractSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:169: warning: [method.invocation] call to get() not allowed on the given receiver.
                                                    ? extractConstantWKTLiteralValue(termFactory, subterm).get()
                                                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:33: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit name: " + name));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:40: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit iri: " + iri));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:80: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:107: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The order by was expected to be kept"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java:59: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("A simplified expression was expected"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append("=").append(r).append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append("=").append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(r.getAllIDs()).append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:29: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append(r.getAllIDs()).append("=").append(r).append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:32: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
        bf.append("\n====== constraints ==========\n");
                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:34: warning: [purity.not.sideeffectfree.call] call to side-effecting r.getUniqueConstraints not allowed in side-effect-free method
            for (UniqueConstraint uc : r.getUniqueConstraints())
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:35: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(uc).append not allowed in side-effect-free method
                bf.append(uc).append(";\n");
                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:35: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
                bf.append(uc).append(";\n");
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:36: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:37: warning: [purity.not.sideeffectfree.call] call to side-effecting r.getForeignKeys not allowed in side-effect-free method
            for (ForeignKeyConstraint fk : r.getForeignKeys())
                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:38: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append(fk).append not allowed in side-effect-free method
                bf.append(fk).append(";\n");
                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:38: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
                bf.append(fk).append(";\n");
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:39: warning: [purity.not.sideeffectfree.call] call to side-effecting bf.append not allowed in side-effect-free method
            bf.append("\n");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java:27: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
        StringBuilder bf = new StringBuilder();
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java:115: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
        private final ImmutableExpression expression;
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:99: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(functionSymbol.toString());
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:100: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append("(");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream().map(ImmutableTerm::toString).collect not allowed in side-effect-free method
                    .collect(Collectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream().map not allowed in side-effect-free method
                    .map(ImmutableTerm::toString)
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:102: warning: [purity.not.sideeffectfree.call] call to side-effecting terms.stream not allowed in side-effect-free method
            List<String> argumentStrings = terms.stream()
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                    .collect(Collectors.toList());
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:106: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(String.join(",", argumentStrings));
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:107: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(")");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:108: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = sb.toString();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:98: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
            StringBuilder sb = new StringBuilder();
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:120: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
            return toString().equals(other.toString());
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:120: warning: [purity.not.deterministic.call] call to non-deterministic method other.toString not allowed in deterministic method
            return toString().equals(other.toString());
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:127: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java:133: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("Arity > 1 was expected"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:49: warning: [purity.not.deterministic.not.sideeffectfree.assign.field] field assignment not allowed in deterministic side-effect-free method
            next = shift();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:49: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting shift not allowed in deterministic side-effect-free method
            next = shift();
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java:50: warning: [purity.not.deterministic.not.sideeffectfree.assign.field] field assignment not allowed in deterministic side-effect-free method
            movedToNext = true;
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:25: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map(Attribute::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:24: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream().map not allowed in side-effect-free method
                        .map(Attribute::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:23: warning: [purity.not.sideeffectfree.call] call to side-effecting getAttributes().stream not allowed in side-effect-free method
                getAttributes().stream()
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java:25: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(",\n   ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:108: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> ljCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:114: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                     Optional<ImmutableExpression> ljCondition,
                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:126: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       IQTree initialRightChild, Optional<ImmutableExpression> ljCondition,
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:131: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private LJNormalizationState updateConditionAndRightChild(Optional<ImmutableExpression> newLJCondition,
                                                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:141: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                UnaryOperatorNode newParent, Optional<ImmutableExpression> newLJCondition, IQTree newRightChild) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:146: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:158: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:208: warning: [purity.methodref] Incompatible purity declaration
                        childVariableNullability, this::applyLeftChildBindingLift)
                                                  ^
  Method in @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState
    @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState applyLeftChildBindingLift(@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
    is not a valid method reference for method in @MaybePresent BindingLiftConverter<@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState>
    @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState convert(@MaybePresent BindingLiftConverter<@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState> this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:322: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> ljCondition, Substitution<ImmutableTerm> naiveAscendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:470: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        provenanceVariable.orElseThrow(() -> new MinorOntopInternalBugException("An entry was expected")),
                                                      ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:657: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<Variable> rightProvenanceVariable, ImmutableSet<Variable> leftVariables) {
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:667: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                              Optional<Variable> defaultRightProvenanceVariable) {
                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:678: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("A default provenance variable was needed"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                         Optional<ImmutableExpression> initialJoiningCondition,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                  Optional<ImmutableExpression> newCondition,
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                      Optional<ImmutableExpression> joiningCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ConstructionNode childConstructionNode;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:153: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A lifted construction node was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:69: warning: [method.invocation] call to get() not allowed on the given receiver.
        return getOptionalFilterCondition().get();
                                               ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:213: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return FILTER_NODE_STR + getOptionalFilterString();
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:228: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalFilterCondition;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinOrFilterNodeImpl(Optional<ImmutableExpression> optionalFilterCondition,
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java:22: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nonRequiredVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:124: warning: [purity.methodref] Incompatible purity declaration
                variableMapper, termMapper, ImmutableMap.Builder::put, this::createSubstitution);
                                            ^
  Method in @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>
    @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> put(@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> this, @MaybePresent Variable p0, T extends @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>, @MaybePresent Variable, T extends @MaybePresent ImmutableTerm>
    void put(@MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>, @MaybePresent Variable, T extends @MaybePresent ImmutableTerm> this, @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> p0, @MaybePresent Variable p1, T extends @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:146: warning: [purity.methodref] Incompatible purity declaration
                v -> v, variableGenerator::generateNewVariableFromVar, ImmutableMap.Builder::put, m -> createSubstitution(m).injective());
                                                                       ^
  Method in @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>
    @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> put(@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> this, @MaybePresent Variable p0, @MaybePresent Variable p1)
    is not a valid method reference for method in @MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>, @MaybePresent Variable, @MaybePresent Variable>
    void put(@MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>, @MaybePresent Variable, @MaybePresent Variable> this, @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> p0, @MaybePresent Variable p1, @MaybePresent Variable p2)
  found   : []
  required: [SIDE_EFFECT_FREE]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:273: warning: [method.invocation] call to get() not allowed on the given receiver.
                        return attemptUnifying(term1, term2).get();
                                                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:142: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:170: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:184: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:67: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:69: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:76: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:179: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent Boolean>
  required: @MaybePresent Optional<@MaybePresent Boolean>
  Consequence: method in @MaybePresent Optional<@MaybePresent Boolean>
    @MaybePresent Boolean get(@Present Optional<@MaybePresent Boolean> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean>
    @MaybePresent Boolean apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean> this, @MaybePresent Optional<@MaybePresent Boolean> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:63: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:65: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:72: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:151: warning: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .map(oe -> oe
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:53: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(variableGenerator::generateNewVariable))
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:59: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public static IQTree toIQTree(ImmutableList<? extends IQTree> extensionalNodes, Optional<ImmutableExpression> joiningConditions,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:122: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return getExtensionalDataNodes(tree.getChildren().get(0), coreSingletons);
                                          ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:125: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of((ExtensionalDataNode)tree));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:128: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of());
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:131: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of(convertIntoExtensionalDataNode((ValuesNode) node, coreSingletons)));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:135: warning: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: warning: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:141: warning: [optional.collection] Don't use Optional to wrap a collection type.
        return Optional.empty();
                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:147: warning: [method.invocation] call to get() not allowed on the given receiver.
            return ((FilterNode)tree.getRootNode()).getOptionalFilterCondition().get().flattenAND()
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java:67: warning: [method.invocation] call to get() not allowed on the given receiver.
                    dbFunctionSymbolFct.apply(dbTypeFactory.getDBStringType()).get(), subLexicalTerms.get(0));
                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:134: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("groups must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:266: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("An expression was expected"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:372: warning: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> ucsPartitionedByDisjointness.get(true).stream().noneMatch(set -> set.size() == 1 && set.stream().findFirst().get().equals(v)))
                                                                                                                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:405: warning: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> fdsPartitionedByDisjointness.get(true).stream().noneMatch(entry -> entry.getKey().size() == 1 && entry.getKey().stream().findFirst().get().equals(v)))
                                                                                                                                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:510: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:663: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .flatMap(t -> t);
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:767: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new QueryNodeSubstitutionException("The descending substitution " + mergedSubstitution
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:130: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expecting " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:222: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:228: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("cannot be empty because there is at least one variable in the templates (taken together)"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:413: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern injectivePattern; // lazy initalization
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:474: warning: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java:87: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern pattern;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:51: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                          Optional<ImmutableExpression> constraint,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:133: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(ConstructionNodeImpl.EmptyTreeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:288: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        v -> getDeterminedBy(Optional.ofNullable(substitution.get(v)).orElse(v), variableNullability)
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:592: warning: [optional.field] Don't use Optional as the type of a field.
        public final Optional<ImmutableExpression> filter;
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:597: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                          Optional<ImmutableExpression> newF) {
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java:21: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ImmutableExpression simplifiedExpression;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableGenerator variableGenerator;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java:105: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java:54: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:164: warning: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get))
                             ^
  found   : @Present Optional<@MaybePresent DefinitionPushDownRequest>
  required: @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
  Consequence: method in @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest get(@Present Optional<@MaybePresent DefinitionPushDownRequest> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest> this, @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:202: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Substitution<ImmutableFunctionalTerm> computeSubstitution(Optional<Variable> optionalNumAvgVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalNumSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:204: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleCountVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:213: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, createAggregate(xsdDecimal, optionalNumSubVariable.get(), termFactory)));
                                                                                                       ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:219: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)));
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:236: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableFunctionalTerm computeLiftableTerm(Optional<Variable> optionalNumAvgVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:238: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:253: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeLexicalTerm(Optional<Variable> optionalFloatingAggVariable,
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                             Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:275: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeTypeTerm(Optional<Variable> optionalNumAvgVariable,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:277: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                          Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private]
    private IQ iq;
               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:11: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<DBTermType> itemType;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:18: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ArrayDBTermType(String arrayStr, TermTypeAncestry ancestry, Optional<DBTermType> itemType, ArrayTypeFromSignature parsingFunction) {
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:65: warning: [method.invocation] call to get() not allowed on the given receiver.
        return ImmutableList.of(this.itemType.get());
                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java:25: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(t -> t.negate(termFactory))).get();
                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:120: warning: [method.invocation] call to get() not allowed on the given receiver.
                                .get(),
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:125: warning: [method.invocation] call to get() not allowed on the given receiver.
                                .get()))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java:95: warning: [method.invocation] call to get() not allowed on the given receiver.
                        e -> e.getValue().get()));
                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2056: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(() -> getDBCastFunctionSymbol(inputType, dbStringType)));
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2073: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(() -> getDBCastFunctionSymbol(dbStringType, targetDBType));
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:48: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The first term of an IF_ELSE_NULL " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:68: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Inconsistent evaluation"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The first term in ifElseNullTerms was expected " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:177: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expected an immutable expression as first term"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:200: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("was expected an ImmutableExpression as first sub-term"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:235: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("Wrong index"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> definedVariable) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:64: warning: [argument] incompatible argument for parameter definedVariable of ProjectionDecomposerImpl.decomposeDefinition.
                        .map(t -> decomposeDefinition(t, variableGenerator, Optional.empty()))
                                                                                          ^
  found   : @MaybePresent Optional<@MaybePresent Variable>
  required: @Present Optional<@MaybePresent Variable>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:121: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<Substitution<ImmutableTerm>> substitution;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:83: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:94: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("otherTerms must be non-empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:100: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                         Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java:74: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> knownVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:40: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:116: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = printSubtree(this, "");
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:116: warning: [purity.not.sideeffectfree.call] call to side-effecting printSubtree not allowed in side-effect-free method
            string = printSubtree(this, "");
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:142: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:188: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<ImmutableExpression> normalizeConstraint(Optional<ImmutableExpression> constraint,
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:206: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                 Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator);
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QualifiedAttributeID.java:78: warning: [purity.not.sideeffectfree.call] call to side-effecting getSQLRendering not allowed in side-effect-free method
		return getSQLRendering();
		                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:39: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Long limit;
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:228: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("There should be one child"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:235: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one child expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:337: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RelationIDImpl.java:60: warning: [purity.not.sideeffectfree.call] call to side-effecting getSQLRendering not allowed in side-effect-free method
        return getSQLRendering();
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/DBConstantImpl.java:68: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting ((DBConstant)other).getValue not allowed in deterministic side-effect-free method
                    ((DBConstant) other).getValue().equals(this.value));
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IRIConstantImpl.java:68: warning: [purity.not.sideeffectfree.call] call to side-effecting iri.getIRIString not allowed in side-effect-free method
		return "<" + iri.getIRIString() + ">";
		                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java:61: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting otherType.getLanguageTag().filter not allowed in deterministic side-effect-free method
                    .filter(langTag::equals)
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java:60: warning: [purity.not.deterministic.call] call to non-deterministic method otherType.getLanguageTag not allowed in deterministic method
            return otherType.getLanguageTag()
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java:35: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  required: @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  Consequence: method in @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> get(@Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>> this, @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:349: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBHoursBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBHoursBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:351: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBMinutesBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBMinutesBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:353: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBSecondsBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBSecondsBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:355: warning: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBMillisBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBMillisBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nullableVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:36: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableMap<Variable, Integer> variableMap;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:189: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map(Attribute::getID).map(QuotedID::toString).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:188: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map(Attribute::getID).map not allowed in side-effect-free method
                        .map(QuotedID::toString)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:187: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream().map not allowed in side-effect-free method
                        .map(Attribute::getID)
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:186: warning: [purity.not.sideeffectfree.call] call to side-effecting attributes.stream not allowed in side-effect-free method
                attributes.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java:189: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java:28: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTermTypeOriginException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:71: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new UnknownClassException(String.format(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:164: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnknownClassException(String.format(
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:17: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::everything;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> everything(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : [SIDE_EFFECT_FREE]
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:19: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidInteger;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidInteger(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:21: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidDecimal;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @MaybePresent Optional<@MaybePresent Boolean> isValidDecimal(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:23: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidDouble;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidDouble(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:25: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidUUID;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidUUID(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:30: warning: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::unknown;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @MaybePresent Optional<@MaybePresent Boolean> unknown(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : [SIDE_EFFECT_FREE]
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:109: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> joiningCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:115: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                      Optional<ImmutableExpression> joiningCondition, VariableGenerator variableGenerator,
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:128: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        public State(ImmutableList<IQTree> children, Optional<ImmutableExpression> joiningCondition,
                                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateConditionAndChildren(Optional<ImmutableExpression> newCondition,
                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:148: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentConditionAndChildren(UnaryOperatorNode newParent, Optional<ImmutableExpression> newCondition,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:245: warning: [purity.methodref] Incompatible purity declaration
                        newChildrenVariableNullability, this::convertIntoState);
                                                        ^
  Method in @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State
    @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State convertIntoState(@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
    is not a valid method reference for method in @MaybePresent BindingLiftConverter<@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State>
    @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State convert(@MaybePresent BindingLiftConverter<@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State> this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> notNormalizedCondition, Substitution<ImmutableTerm> ascendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:452: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get);
                         ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:505: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<ImmutableExpression> condition;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:141: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final FilterNode sampleFilter;
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:143: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final ConstructionNode childConstructionNode;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:298: warning: [method.invocation] call to get() not allowed on the given receiver.
                    s -> newAggregationSubstitution.compose(substitutionFactory.getSubstitution(sampleVariable.get(), termFactory.getDBSample(termFactory.getDBIntegerConstant(1), termFactory.getTypeFactory().getDBTypeFactory().getDBLargeIntegerType())))
                                                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:12: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalExpression;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitutionImpl(Optional<ImmutableExpression> optionalExpression,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:48: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:52: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:56: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:60: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:64: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:147: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = determinants.stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:149: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:155: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#05 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm>
    capture#06 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:213: warning: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  required: @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> get(@Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>> this, @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:220: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = uniqueConstraint.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:222: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:225: warning: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.empty();
                                 ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: warning: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:228: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#07 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm>
    capture#08 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:239: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:245: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> determinants = functionalDependency.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:247: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:249: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> dependents = functionalDependency.getDependents().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:251: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:258: warning: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#09 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm>
    capture#010 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:264: warning: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#011 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm>
    capture#012 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:311: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream().map((e)->e.getKey() + ":" + e.getValue()).collect not allowed in side-effect-free method
                .collect(Collectors.joining(",")));
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:310: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream().map not allowed in side-effect-free method
                .map(e -> e.getKey() + ":" + e.getValue())
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:309: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentMap.entrySet().stream not allowed in side-effect-free method
                argumentMap.entrySet().stream()
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:311: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                .collect(Collectors.joining(",")));
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:20: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:33: warning: [contracts.postcondition.override] Subclass postcondition is weaker for 'this.inputType' in checkValueValidityForDecomposition.
    protected boolean checkValueValidityForDecomposition(String value) {
                      ^
    In superclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultSimpleDBCastFunctionSymbol: @MaybePresent
    In subclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultCastIntegerToStringFunctionSymbol: no information
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:40: warning: [contracts.postcondition.override] Subclass postcondition is weaker for 'this.inputType' in evaluateStrictEqWithNonNullConstant.
    protected IncrementalEvaluation evaluateStrictEqWithNonNullConstant(ImmutableList<? extends ImmutableTerm> terms,
                                    ^
    In superclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultSimpleDBCastFunctionSymbol: @MaybePresent
    In subclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultCastIntegerToStringFunctionSymbol: no information
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:113: warning: [method.invocation] call to get() not allowed on the given receiver.
                        otherExpressionBuilder.add(evaluation.getNewExpression().get());
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:151: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("expressions must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:255: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:333: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type to compare with was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream().map(FunctionalDependency::toString).collect not allowed in side-effect-free method
                .collect(ImmutableCollectors.toList())));
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:75: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream().map not allowed in side-effect-free method
                .map(FunctionalDependency::toString)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:74: warning: [purity.not.sideeffectfree.call] call to side-effecting dependencies.stream not allowed in side-effect-free method
        return String.format("[%s]", String.join("; ", dependencies.stream()
                                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:76: warning: [purity.not.sideeffectfree.call] call to side-effecting ImmutableCollectors.toList not allowed in side-effect-free method
                .collect(ImmutableCollectors.toList())));
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:153: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.stream().reduce not allowed in deterministic side-effect-free method
                .reduce(0, (sum, n) -> sum ^ n.hashCode(), Integer::sum);
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:152: warning: [purity.not.deterministic.not.sideeffectfree.call] call to non-deterministic side-effecting dependencies.stream not allowed in deterministic side-effect-free method
        return dependencies.stream()
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:206: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream().map(Variable::toString).collect not allowed in side-effect-free method
                                    .collect(Collectors.toList())),
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:205: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream().map not allowed in side-effect-free method
                                    .map(Variable::toString)
                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:204: warning: [purity.not.sideeffectfree.call] call to side-effecting determinants.stream not allowed in side-effect-free method
                            String.join(", ", determinants.stream()
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:206: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                                    .collect(Collectors.toList())),
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:209: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream().map(Variable::toString).collect not allowed in side-effect-free method
                                    .collect(Collectors.toList()))
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:208: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream().map not allowed in side-effect-free method
                                    .map(Variable::toString)
                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:207: warning: [purity.not.sideeffectfree.call] call to side-effecting dependents.stream not allowed in side-effect-free method
                            String.join(", ", dependents.stream()
                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java:209: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.toList not allowed in side-effect-free method
                                    .collect(Collectors.toList()))
                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:42: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
	private final DBConstant doubleNaN;
	                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:214: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	public Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream) {
	                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:40: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<Variable> indexVariable;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:47: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                            @Assisted Optional<Variable> indexVariable,
                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:82: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<TermType> inferOutputType(Optional<TermType> flattenedVarType) {
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:131: warning: [purity.not.sideeffectfree.call] call to side-effecting indexVariable.map not allowed in side-effect-free method
                indexVariable.map(v -> ", " + v + "/indexIn(" + flattenedVariable + ")").orElse("") +
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:147: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:150: warning: [purity.methodref] Incompatible purity declaration
                IQTree::applyDescendingSubstitution);
                ^
  Method in @MaybePresent IQTree
    @MaybePresent IQTree applyDescendingSubstitution(@MaybePresent IQTree this, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p0, @MaybePresent Optional<@MaybePresent ImmutableExpression> p1, @MaybePresent VariableGenerator p2)
    is not a valid method reference for method in @MaybePresent PropagateToChild
    @MaybePresent IQTree apply(@MaybePresent PropagateToChild this, @MaybePresent IQTree p0, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p1, @MaybePresent Optional<@MaybePresent ImmutableExpression> p2, @MaybePresent VariableGenerator p3)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                               Optional<ImmutableExpression> constraint, IQTree child,
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                (c, s, constraint, vGenerator) -> c.applyDescendingSubstitutionWithoutOptimizing(s, vGenerator));
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:236: warning: [method.invocation] call to get() not allowed on the given receiver.
                .map(constraint -> Stream.concat(constraint.stream(), Stream.of(indexVariable.get()))
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:406: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                     Optional<ImmutableExpression> optionalConstraint, VariableGenerator variableGenerator);
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java:124: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinLikeNodeImpl(Optional<ImmutableExpression> optionalJoinCondition,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java:107: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:29: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("BooleanDBIfElseNullFunctionSymbol was " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:69: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Was an expected an immutable expression " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:388: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:391: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:433: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A projected variable was expected as argument"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:485: warning: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  required: @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> get(@Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>> this, @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:627: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream().map((tuple)->tuple.stream().map(String::valueOf).collect(Collectors.joining(",", " (", ")"))).collect not allowed in side-effect-free method
                .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream().map not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting values.stream not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:626: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream().map(String::valueOf).collect not allowed in side-effect-free method
                .collect(Collectors.joining(","," (",")")))
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:625: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream().map not allowed in side-effect-free method
                .map(String::valueOf)
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:624: warning: [purity.not.sideeffectfree.call] call to side-effecting tuple.stream not allowed in side-effect-free method
        String valuesString = values.stream().map(tuple -> tuple.stream()
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:626: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                .collect(Collectors.joining(","," (",")")))
                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java:13: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<String> optionalSuffix;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable boundVariable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java:44: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<String> getSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:152: warning: [purity.not.sideeffectfree.call] call to side-effecting relation.getID().getSQLRendering not allowed in side-effect-free method
        return "ALTER TABLE " + relation.getID().getSQLRendering() +
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:156: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map((c)->c.getAttribute().getID().toString()).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:155: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map not allowed in side-effect-free method
                        .map(c -> c.getAttribute().getID().toString())
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:154: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream not allowed in side-effect-free method
                components.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:156: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:157: warning: [purity.not.sideeffectfree.call] call to side-effecting referencedRelation.getID().getSQLRendering not allowed in side-effect-free method
                ") REFERENCES " + referencedRelation.getID().getSQLRendering() +
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:161: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map((c)->c.getReferencedAttribute().getID().toString()).collect not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:160: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream().map not allowed in side-effect-free method
                        .map(c -> c.getReferencedAttribute().getID().toString())
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:159: warning: [purity.not.sideeffectfree.call] call to side-effecting components.stream not allowed in side-effect-free method
                components.stream()
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java:161: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
                        .collect(Collectors.joining(", ")) +
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
            return toString().equals(other.toString());
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:78: warning: [purity.not.deterministic.call] call to non-deterministic method other.toString not allowed in deterministic method
            return toString().equals(other.toString());
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:87: warning: [purity.not.deterministic.call] call to non-deterministic method toString not allowed in deterministic method
        return toString().hashCode();
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:97: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(predicate.toString());
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:98: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append("(");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:101: warning: [purity.not.sideeffectfree.call] call to side-effecting arguments.stream().map not allowed in side-effect-free method
                    .map(VariableOrGroundTerm::toString);
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:100: warning: [purity.not.sideeffectfree.call] call to side-effecting arguments.stream not allowed in side-effect-free method
            Stream<String> argumentStrings = arguments.stream()
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting argumentStrings.collect not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:103: warning: [purity.not.sideeffectfree.call] call to side-effecting Collectors.joining not allowed in side-effect-free method
            sb.append(argumentStrings.collect(Collectors.joining(", ")));
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:104: warning: [purity.not.sideeffectfree.call] call to side-effecting sb.append not allowed in side-effect-free method
            sb.append(")");
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:105: warning: [purity.not.sideeffectfree.assign.field] field assignment not allowed in side-effect-free method
            string = sb.toString();
            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:96: warning: [purity.not.sideeffectfree.call] call to side-effecting StringBuilder not allowed in side-effect-free method
            StringBuilder sb = new StringBuilder();
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:50: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
            return optionalMergedTypeConstant.orElseThrow(() ->
                                                         ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:75: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:48: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private LeftJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalJoinCondition,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:112: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return LEFT_JOIN_NODE_STR + getOptionalFilterString();
                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:243: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:363: warning: [method.invocation] call to get() not allowed on the given receiver.
                        optionalFilterCondition.get(), nullableGroups, rightVariables))
                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:428: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private IQTree propagateDownCondition(Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:43: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:102: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(UnsatisfiableConditionException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:130: warning: [method.invocation] call to get() not allowed on the given receiver.
                groundFunctionalSubstitution.get().apply(partiallySimplifiedExpression.get()),
                                                                                          ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:57: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:64: warning: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:38: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Substitution<NonVariableTerm>> possibleVariableDefinitions;
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:44: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:47: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private FunctionalDependencies functionalDependencies;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:50: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final TermType termType;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable variable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:56: warning: [purity.not.deterministic.call] call to non-deterministic method getTermType not allowed in deterministic method
                && getTermType().equals(((TermTypeInference) o).getTermType());
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:56: warning: [purity.not.deterministic.call] call to non-deterministic method ((TermTypeInference)o).getTermType not allowed in deterministic method
                && getTermType().equals(((TermTypeInference) o).getTermType());
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:61: warning: [purity.not.deterministic.call] call to non-deterministic method getTermType not allowed in deterministic method
        return getTermType().hashCode();
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> topSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> subSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected InnerJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalFilterCondition,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:118: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:136: warning: [purity.not.sideeffectfree.call] call to side-effecting getOptionalFilterString not allowed in side-effect-free method
        return JOIN_NODE_STR + getOptionalFilterString();
                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:149: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
461 warnings
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-Aajava=/tmp/wpi-ajava-20230926-173348-w74vst6l/iteration5' '-classpath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-api/0.5.0/commons-rdf-api-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-simple/0.5.0/commons-rdf-simple-0.5.0.jar:/homes/gws/jmsy/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.1-jre/guava-32.0.1-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.8.0/checker-qual-3.8.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.5.1/error_prone_annotations-2.5.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/guice/5.0.1/guice-5.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/extensions/guice-assistedinject/5.0.1/guice-assistedinject-5.0.1.jar:/homes/gws/jmsy/.m2/repository/io/github/solf/nullanno/3.0.0/nullanno-3.0.0.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/io/mikael/urlbuilder/2.0.9/urlbuilder-2.0.9.jar:/homes/gws/jmsy/.m2/repository/org/locationtech/proj4j/proj4j/1.1.1/proj4j-1.1.1.jar:/homes/gws/jmsy/.m2/repository/commons-codec/commons-codec/1.14/commons-codec-1.14.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.2/jackson-core-2.13.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.4.2/jackson-databind-2.13.4.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.2/jackson-annotations-2.13.2.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model/4.2.4/rdf4j-model-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-api/4.2.4/rdf4j-model-api-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-annotation/4.2.4/rdf4j-common-annotation-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-vocabulary/4.2.4/rdf4j-model-vocabulary-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-exception/4.2.4/rdf4j-common-exception-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-text/4.2.4/rdf4j-common-text-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-io/4.2.4/rdf4j-common-io-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-util/4.2.4/rdf4j-common-util-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-iterator/4.2.4/rdf4j-common-iterator-4.2.4.jar:/homes/gws/jmsy/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes' '-sourcepath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java:/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/generated-sources/annotations' '-g' '--release' '11' '--release' '11' '-encoding' 'UTF-8' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBNonStrictEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCaseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBHashFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotYetTypedEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/CompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseViewDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/LinearInclusionDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSampleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/VariableOrGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBStdevFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/EmptyQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NowSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFDatatypeStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/UnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidQueryNodeException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/NaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AttributeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RegexSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConstructionSubstitutionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/WKTLiteralValue.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonPostProcessedSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBoundaryFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRISafenessDeclarationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/QueryRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolSerializer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/ImmutableCollectors.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NonStrictEqSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UnsupportedRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeInference.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BoundSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQTreeTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/ExpressionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/TemplateParser.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalInequalityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsLiteralSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/ObjectStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DatabaseInfoSupplier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StartsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsStringEmptyFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/LeafIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractSubStrSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrBeforeOrAfterFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphism.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidOntopConfigurationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/UOM.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractNamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/IQVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderComparatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeHierarchyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedBinaryMathOperationTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/VariableNullability.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReduciblePositiveAritySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/VariableImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/AbstractPredicateExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryLatelyTypedFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/LowerCaseDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/IRIStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/TrueNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeAncestry.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DivideSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/NonDeterministicDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FlattenNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNumberNormAsBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/CompositeIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanDenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableHomomorphismIterator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FlattenNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTimeTzNormalizationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalAndSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/DefPushDownRequestImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ExtractLexicalTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/TriplePredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonNullConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/DBParameters.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseTableDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDateInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofDoubleFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/SimpleRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenElseFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/QueryTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/DistinctNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnsatisfiableConditionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MetadataExtractionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/AbstractExpressionTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/TemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GreaterThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnSimpleBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/DefinitionPushDownRequest.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8EqFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DateTruncSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OFN.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/InvalidIntermediateQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfTouchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfWithinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ZeroAryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/TriplePredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/DBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/NumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFTermTypeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/ArgumentSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeSubstitutionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBGroupConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ConstructionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/Template.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/JsonDBTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypeFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/QuotedIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/IRITermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/TypeConstantDictionary.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MultitypedInputUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLangTagLikeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractBinaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/FunctionalTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoveredByFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Attribute.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/FalseOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BinaryNumericLexicalFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/PartiallyTypedSimpleCastTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BooleanDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Nullifiers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/EmptyNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Constant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhOverlapFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/SQLStandardQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/QueryRenamerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupSimpleDBCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBSimilarToFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/BooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/BinaryNonCommutativeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/StandardNotationDBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImplUsingRelate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRIStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DateDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8NtppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtendedProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIfDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultTypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBBooleanCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQSyntacticContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractSimpleMultitypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MockupDBTypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/LanguageTag.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/PredicateConstants.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioNonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/VarianceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/NotRequiredVariableRemover.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SameTermSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfIntersectsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/RDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DremioArrayAccessDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractIsASPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/DistinctNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBVarianceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RDFAtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConstructionSubstitutionNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EBVSPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IriSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/EmptyNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermTypeHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelSettings.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDefaultInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/BlankNodeTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExplicitVariableProjectionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/SliceNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBSumFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEO.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrUUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictNumericEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/AggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ofn/OfnMultitypedInputBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSymDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DistinctVariableOnlyDataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryStringSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/MetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/NoNullValuesEnforcerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/QueryTransformerFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonGroundFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimpleTypedDBFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/RDFLiteralConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IndexInFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFLiteralConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/ConversionException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/PartiallyTypedSimpleCastTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/UUIDDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBnodeSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/ObjectTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalNonStrictEqualityFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/IDGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/InvalidQueryException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha384SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/StringUtils.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullToleratingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/Predicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/CoreUtilsFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/QuadPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableExpression.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrlenSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryModifierNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QualifiedAttributeID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/Ontop.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofBufferFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractUnaryGeofWKTFunctionSymbolDirectImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha256SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/GEOF.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/LangSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OntopInternal.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/AbstractObjectRDFType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNodeVisitor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/OfflineMetadataProviderBuilder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/SingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractUnaryBooleanSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofIntersectionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8TppiFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsARDFTermTypeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/InjectiveSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ImmutableMetadata.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/OrderByNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalLangMatchesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfOverlapsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/MetaRDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RelationIDImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultNonRecursiveIQTreeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofConvexHullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/IRISafenessDeclarationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhDisjointFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/DBConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/AGG.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBTypeConversionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NonSimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/GroupConcatSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhEqualsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrBeforeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBDatetimeInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypePropagationSubstitutionHierarchy.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/ChildTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsTrueFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ForcingFloatingDBAvgFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/Substitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMinFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangMatchesSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/QuadPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/ImmutableCQContainmentCheckUnderLIDs.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBCountFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/DataAtom.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/FunctionalDependencyImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha512SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractLexicalNonStrictEqOrInequalityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/AggregationNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIfThenFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/DBConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SimplifiableTypedNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/AggregationNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/RDFAtomPredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ValuesNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/QueryNodeTransformationException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDefaultEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/BNodeConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/LinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedID.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RandSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIfElseNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBArrayObjectAccessFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryBooleanOperatorSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQ.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IRIConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LangDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SQLServerDBIriStringResolverFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDF2DBBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBBooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XSD.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundTermTools.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/RDFTermTypeConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBAndFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/LegacyVariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRelateMFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8DcFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultUntypedDBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/R2RMLIRISafeEncoder.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UUIDSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDistanceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/IntensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/AbstractTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DelegatingMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataProvider.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LogicalOrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/RDFTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/UniqueConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrAfterSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBBooleanCastFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NumericBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/Serializers.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/GenericDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NativeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/BasicSingleTermTypeExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/BnodeStringTemplateFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/TypeFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBOrFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIRIFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBRegexMatchAsLikeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/CoreSingletons.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NullConstantImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBStrAfterFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Sha1SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/TrueNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonVariableTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ConcreteNumericRDFDatatypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitBooleanNormFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/AttributeNotFoundException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/NotSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/Lens.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/ConcreteIQTreeCache.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNumericInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/GroundFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/MinorOntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/InnerJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/NoNullValueEnforcer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/WrappedDBBooleanCaseFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofIntegerFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnionNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TrueOrNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/Variable.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneDigitDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/EndsWithSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/NotYetTypedEqualityFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhMeetFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/InequalityLabel.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/VariableNonRequirement.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/CompositeQueryNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBIsNullOrNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/OntopInternalBugException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDateEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/BasicLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractOrNullFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBMaxFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofDifferenceFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/BNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictNEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/FunctionalDependency.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/BnodeTemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IfSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/VariableGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/ConcreteNumericRDFDatatype.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractEncodeURIorIRIFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/ForeignKeyConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofWKTFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictStringEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/FunctionalDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AreCompatibleRDFStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/AbstractRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/UniqueConstraint.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISODenormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/InjectiveSubstitution.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/SPARQLAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/UnaryCastDBFunctionSymbolWithSerializerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/FunctionalTermSimplification.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBFunctionSymbolFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhCoversFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/XPathFunction.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsBlankSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/OrderByNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/LeftJoinNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/QueryNodeRenamer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/AbstractGeofBooleanFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrEndsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelModule.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofRcc8PoFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AggregationSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/Md5SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/IntensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/StringDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ReplaceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhContainsFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/BooleanFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/ProjectionDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/MockupDBIsNullOrNotFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/NamedRelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullIgnoringDBAvgFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/NotYetTypedEqualityTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/RelationPredicate.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/MetaRDFTermTypeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/IRITemplateFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/DatetimeDBTermType.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ObjectConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/IsIRISPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/DefaultIdentityIQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/NonConstantTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr3SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBTypeConversionFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DenodoDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractHashSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBCoalesceFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SubStr2SPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/DistinctNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/OntopModelConfiguration.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/TermNullabilityEvaluator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CoalesceSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultBooleanNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/RDFTermTypeFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/EqualsTrueDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/FilterNormalizer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ForeignKeyConstraintImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/QueryModifierNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DistinctVariableOnlyDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/ExpressionNormalizerImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/AtomFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrStartsWithFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LessThanSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNotFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryBnodeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEnvelopeFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/CachingMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BnodeStringTemplateFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/HomogeneousIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractTimestampISONormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/ImmutableCQContainmentCheck.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AvgSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SimpleUnarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryNonCommutativeOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/SubstitutionBasicOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofUnionFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/LexicalSpace.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTreeExtendedTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/RelationDefinition.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/CoreSingletonsImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CountSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StdevSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StrBeforeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermSimplificationImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/SPARQL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBNonStrictDatetimeEqOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultNonDeterministicNullaryFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LcaseSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/DBMathBinaryOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractBinaryComparisonSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/FullLinearInclusionDependenciesImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/NotRequiredVariableRemoverImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/UnaryIQTree.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/RawQuotedIDFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IncrementalEvaluation.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/node/HomogeneousQueryNodeTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/PredicateImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/NullRejectingDBConcatFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/ImmutableMetadataLookup.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/StringBooleanBinarySPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractArgDependentTypedDBFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/TemporaryDBTypeConversionToStringFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractAggregationFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/OneLetterDBIsTrueFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/QueryNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/visit/impl/RelationExtractor.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/ContainsSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/ImmutableTermsSubstitutionOperations.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/DatatypeSPARQLFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AtomFactoryImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/exception/IllegalTreeUpdateException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/NativeNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/utils/impl/VariableGeneratorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/IRIConstant.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/ImmutableFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofEhInsideFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/AbstractNonFunctionalTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStrBeforeOrAfterSPARQLFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStrictEqFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/OWL.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/NonGroundExpressionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/DataAtomImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofSfCrossesFunctionSymbolImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBStringInequalityOperator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/exception/RelationNotFoundInMetadataException.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/IQTree2NativeNodeGenerator.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/GroundTerm.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/FunctionalDependencies.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultHexBinaryNormFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinOrFilterNode.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LangTagWithPlaceholderFunctionSymbol.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/vocabulary/RDFS.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/evaluator/impl/TermNullabilityEvaluatorImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/transform/impl/LazyRecursiveIQTreeVisitingTransformer.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/TrueOrNullFunctionSymbol.java'

/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/TermFactory.java:60: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream);
	                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/StringConstantDecomposer.java:15: error: [optional.collection] Don't use Optional to wrap a collection type.
    Optional<ImmutableList<DBConstant>> decompose(DBConstant stringConstant);
                                        ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:92: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(term + " was expected to be " +
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:111: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The evaluation was expected " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:150: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(0) + " was expected to be " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:162: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                                .orElseThrow(() -> new MinorOntopInternalBugException(terms.get(2*i) + " was expected to be " +
                                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:219: error: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIfThenFunctionSymbol.java:364: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("Was expected to find this function symbol at the indicated position"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/IQTree.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/UnaryOperatorNode.java:32: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator);
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/ExtensionalDataNode.java:37: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        i -> Optional.<T>ofNullable(argumentMap1.get(i)).orElseGet(() -> argumentMap2.get(i))));
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/LeftJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/JoinLikeNode.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    JoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/BinaryOrderedOperatorNode.java:50: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild, VariableGenerator variableGenerator);
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/NaryOperatorNode.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinNode.java:19: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/InnerJoinLikeNode.java:16: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinLikeNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/CommutativeJoinNode.java:13: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    CommutativeJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition);
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/FlattenNode.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<TermType> inferOutputType(Optional<TermType> extractSingleTermType);
                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/DatabaseInfoSupplierImpl.java:18: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String dbVersion;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Supplier<Injector> injectorSupplier;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Injector injector;
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:139: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Boolean> testMode = Optional.empty();
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelConfigurationImpl.java:141: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<Properties> inputProperties = Optional.empty();
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:42: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    InnerJoinNode createInnerJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:46: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    LeftJoinNode createLeftJoinNode(Optional<ImmutableExpression> joiningCondition);
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/IntermediateQueryFactory.java:52: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                  Optional<Variable> indexVariable, DBTermType dbTermType);
                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/QuotedIDFactory.java:115: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnsupportedOperationException("No @IDFactoryType annotation found"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLFunctionSymbolImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final IRI functionIRI;
                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:21: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/ConditionSimplifier.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:52: error: [contracts.precondition] precondition of new State(initialFilterNode, initialChild).normalizeChild is not satisfied.
                .normalizeChild(variableGenerator);
                               ^
  found   : "new State(initialFilterNode, initia...".condition is @MaybePresent
  required: "new State(initialFilterNode, initia...".condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:56: error: [contracts.precondition] precondition of state.liftBindingsAndDistinct().mergeWithChild is not satisfied.
                    .mergeWithChild();
                                   ^
  found   : state.liftBindingsAndDistinct().condition is @MaybePresent
  required: state.liftBindingsAndDistinct().condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:55: error: [contracts.precondition] precondition of state.liftBindingsAndDistinct is not satisfied.
            State stateBeforeSimplification = state.liftBindingsAndDistinct()
                                                                           ^
  found   : state.condition is @MaybePresent
  required: state.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:59: error: [contracts.precondition] precondition of stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).normalizeChild is not satisfied.
                    .normalizeChild(variableGenerator);
                                   ^
  found   : stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).condition is @MaybePresent
  required: stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:58: error: [contracts.precondition] precondition of stateBeforeSimplification.simplifyAndPropagateDownConstraint is not satisfied.
            State newState = stateBeforeSimplification.simplifyAndPropagateDownConstraint(variableGenerator)
                                                                                         ^
  found   : stateBeforeSimplification.condition is @MaybePresent
  required: stateBeforeSimplification.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:63: error: [contracts.precondition] precondition of newState.createNormalizedTree is not satisfied.
                return newState.createNormalizedTree(variableGenerator, treeCache);
                                                    ^
  found   : newState.condition is @MaybePresent
  required: newState.condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:83: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> condition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:96: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                        Optional<ImmutableExpression> condition, IQTree child) {
                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:183: error: [contracts.precondition] precondition of liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).liftBindingsAndDistinct is not satisfied.
                        .liftBindingsAndDistinct();
                                                ^
  found   : this.liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).condition is @MaybePresent
  required: this.liftBindings((ConstructionNode)childRoot, (UnaryIQTree)child).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:188: error: [contracts.precondition] precondition of liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).liftBindingsAndDistinct is not satisfied.
                        .liftBindingsAndDistinct();
                                                ^
  found   : this.liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).condition is @MaybePresent
  required: this.liftDistinct((DistinctNode)childRoot, (UnaryIQTree)child).condition is @Present
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/FilterNormalizerImpl.java:226: error: [method.invocation] call to get() not allowed on the given receiver.
                            .map(c -> termFactory.getConjunction(condition.get(), c))
                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:68: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<OrderByNode> orderByNode;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State(ImmutableList<UnaryOperatorNode> ancestors, Optional<OrderByNode> orderByNode, IQTree child,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/OrderByNormalizerImpl.java:87: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentOrderByAndChild(UnaryOperatorNode newParent, Optional<OrderByNode> newOrderByNode, IQTree newChild) {
                                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:19: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultSimpleDBCastFunctionSymbol.java:90: error: [optional.collection] Don't use Optional to wrap a collection type.
                ? Optional.of(ImmutableList.of(termFactory.getDBConstant(cst.getValue(), inputType)))
                ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TypePropagationSubstitutionHierarchyImpl.java:26: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTopPropagatedNumericTypeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractSubstitutionOperations.java:132: warning: [optional.field] Don't use Optional as the type of a field.
        private Optional<ArgumentMapUnifier<T>> optional;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private Optional<Substitution<T>> optionalSubstitution;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:62: error: [method.invocation] call to get() not allowed on the given receiver.
        T term2 = operations.applyToTerm(optionalSubstitution.get(), t2);
                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/AbstractUnifierBuilder.java:90: error: [method.invocation] call to get() not allowed on the given receiver.
                optionalSubstitution = Optional.of(operations.compose(s, optionalSubstitution.get()));
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:89: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Unexpected empty disjunction"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/LexicalEBVFunctionSymbolImpl.java:99: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("The first argument of a IF_ELSE_NULL must be an expression"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/RightProvenanceNormalizer.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<ImmutableExpression> leftJoinExpression,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:60: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/FunctionSymbolFactory.java:68: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The SPARQL distinct aggregate function " + officialName
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:102: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:128: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:135: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            ImmutableMap<ConcreteNumericRDFDatatype, Variable> numericSubTermVarMap, Optional<Variable> optionalIncompatibleCountVariable,
                                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:136: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalIncompatibleSubVariable, TermFactory termFactory) {
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:147: error: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)))
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SumLikeSPARQLAggregationFunctionSymbolImpl.java:155: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/UnaryNumericSPARQLAggregationFunctionSymbolImpl.java:173: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:71: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    static Optional<IRI> tryExtractSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeoUtils.java:169: error: [method.invocation] call to get() not allowed on the given receiver.
                                                    ? extractConstantWKTLiteralValue(termFactory, subterm).get()
                                                                                                              ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:33: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit name: " + name));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/DistanceUnit.java:40: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("unknown unit iri: " + iri));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:80: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/OrderByNodeImpl.java:107: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The order by was expected to be kept"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBIsNullOrNotFunctionSymbol.java:59: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("A simplified expression was expected"));
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableExpressionImpl.java:115: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
        private final ImmutableExpression expression;
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/ImmutableFunctionalTermImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DBIntIndexFunctionSymbolImpl.java:133: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("Arity > 1 was expected"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:108: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> ljCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:114: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                     Optional<ImmutableExpression> ljCondition,
                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:126: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                       IQTree initialRightChild, Optional<ImmutableExpression> ljCondition,
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:131: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private LJNormalizationState updateConditionAndRightChild(Optional<ImmutableExpression> newLJCondition,
                                                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:141: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                UnaryOperatorNode newParent, Optional<ImmutableExpression> newLJCondition, IQTree newRightChild) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:146: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:158: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                   Optional<ImmutableExpression> newLJCondition,
                                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:208: error: [purity.methodref] Incompatible purity declaration
                        childVariableNullability, this::applyLeftChildBindingLift)
                                                  ^
  Method in @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState
    @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState applyLeftChildBindingLift(@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
    is not a valid method reference for method in @MaybePresent BindingLiftConverter<@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState>
    @MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState convert(@MaybePresent BindingLiftConverter<@MaybePresent LeftJoinNormalizerImpl.@MaybePresent LJNormalizationState> this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:322: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> ljCondition, Substitution<ImmutableTerm> naiveAscendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:470: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        provenanceVariable.orElseThrow(() -> new MinorOntopInternalBugException("An entry was expected")),
                                                      ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:657: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<Variable> rightProvenanceVariable, ImmutableSet<Variable> leftVariables) {
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:667: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                              Optional<Variable> defaultRightProvenanceVariable) {
                                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/LeftJoinNormalizerImpl.java:678: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("A default provenance variable was needed"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                         Optional<ImmutableExpression> initialJoiningCondition,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/JoinLikeChildBindingLifter.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                  Optional<ImmutableExpression> newCondition,
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterVariableNullabilityTools.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                      Optional<ImmutableExpression> joiningCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ConstructionNode childConstructionNode;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InjectiveBindingLiftState.java:153: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A lifted construction node was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:69: error: [method.invocation] call to get() not allowed on the given receiver.
        return getOptionalFilterCondition().get();
                                               ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FilterNodeImpl.java:228: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:24: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalFilterCondition;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinOrFilterNodeImpl.java:31: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinOrFilterNodeImpl(Optional<ImmutableExpression> optionalFilterCondition,
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NonStringNonNumberNonBooleanNonDatetimeDBTermType.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/request/impl/VariableNonRequirementImpl.java:22: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nonRequiredVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:124: error: [purity.methodref] Incompatible purity declaration
                variableMapper, termMapper, ImmutableMap.Builder::put, this::createSubstitution);
                                            ^
  Method in @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>
    @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> put(@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> this, @MaybePresent Variable p0, T extends @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>, @MaybePresent Variable, T extends @MaybePresent ImmutableTerm>
    void put(@MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm>, @MaybePresent Variable, T extends @MaybePresent ImmutableTerm> this, @MaybePresent Builder<@MaybePresent Variable, T extends @MaybePresent ImmutableTerm> p0, @MaybePresent Variable p1, T extends @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:146: error: [purity.methodref] Incompatible purity declaration
                v -> v, variableGenerator::generateNewVariableFromVar, ImmutableMap.Builder::put, m -> createSubstitution(m).injective());
                                                                       ^
  Method in @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>
    @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> put(@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> this, @MaybePresent Variable p0, @MaybePresent Variable p1)
    is not a valid method reference for method in @MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>, @MaybePresent Variable, @MaybePresent Variable>
    void put(@MaybePresent TriConsumer<@MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable>, @MaybePresent Variable, @MaybePresent Variable> this, @MaybePresent Builder<@MaybePresent Variable, @MaybePresent Variable> p0, @MaybePresent Variable p1, @MaybePresent Variable p2)
  found   : []
  required: [SIDE_EFFECT_FREE]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/substitution/impl/SubstitutionFactoryImpl.java:273: error: [method.invocation] call to get() not allowed on the given receiver.
                        return attemptUnifying(term1, term2).get();
                                                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:49: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(CARDINALITY_MODE + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:66: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " key is missing"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:142: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:164: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:170: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopModelSettingsImpl.java:184: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new InvalidOntopConfigurationException(key + " is required but missing " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:67: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:69: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:72: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:76: error: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedEqualityTransformerImpl.java:179: error: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent Boolean>
  required: @MaybePresent Optional<@MaybePresent Boolean>
  Consequence: method in @MaybePresent Optional<@MaybePresent Boolean>
    @MaybePresent Boolean get(@Present Optional<@MaybePresent Boolean> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean>
    @MaybePresent Boolean apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Boolean>, @MaybePresent Boolean> this, @MaybePresent Optional<@MaybePresent Boolean> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:63: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
            ImmutableList<Optional<TermType>> extractedTypes = newTerms.stream()
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:65: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                    .collect(ImmutableCollectors.toList());
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                    .allMatch(type -> type
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/type/impl/NotYetTypedBinaryMathOperationTransformerImpl.java:72: error: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get)
                             ^
  found   : @Present Optional<@MaybePresent TermType>
  required: @MaybePresent Optional<@MaybePresent TermType>
  Consequence: method in @MaybePresent Optional<@MaybePresent TermType>
    @MaybePresent TermType get(@Present Optional<@MaybePresent TermType> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType>
    @MaybePresent TermType apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent TermType>, @MaybePresent TermType> this, @MaybePresent Optional<@MaybePresent TermType> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:151: error: [method.invocation] call to get() not allowed on the given receiver.
            TypeConstantDictionary dictionary = dictionaries.stream().findAny().get();
                                                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBCoalesceFunctionSymbol.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .map(oe -> oe
                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:53: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(variableGenerator::generateNewVariable))
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:59: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public static IQTree toIQTree(ImmutableList<? extends IQTree> extensionalNodes, Optional<ImmutableExpression> joiningConditions,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: error: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: error: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:122: error: [optional.collection] Don't use Optional to wrap a collection type.
            return getExtensionalDataNodes(tree.getChildren().get(0), coreSingletons);
                                          ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: error: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:125: error: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of((ExtensionalDataNode)tree));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: error: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:128: error: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of());
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: error: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:131: error: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.of(ImmutableList.of(convertIntoExtensionalDataNode((ValuesNode) node, coreSingletons)));
                              ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: error: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:135: error: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: error: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:118: error: [optional.collection] Don't use Optional to wrap a collection type.
    public static Optional<ImmutableList<ExtensionalDataNode>> getExtensionalDataNodes(IQTree tree,
                                                               ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:141: error: [optional.collection] Don't use Optional to wrap a collection type.
        return Optional.empty();
                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/IQ2CQ.java:147: error: [method.invocation] call to get() not allowed on the given receiver.
            return ((FilterNode)tree.getRootNode()).getOptionalFilterCondition().get().flattenAND()
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/SPARQLCastFunctionSymbolImpl.java:67: error: [method.invocation] call to get() not allowed on the given receiver.
                    dbFunctionSymbolFct.apply(dbTypeFactory.getDBStringType()).get(), subLexicalTerms.get(0));
                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:134: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("groups must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:266: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("An expression was expected"))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:372: error: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> ucsPartitionedByDisjointness.get(true).stream().noneMatch(set -> set.size() == 1 && set.stream().findFirst().get().equals(v)))
                                                                                                                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:405: error: [method.invocation] call to get() not allowed on the given receiver.
                .filter(v -> fdsPartitionedByDisjointness.get(true).stream().noneMatch(entry -> entry.getKey().size() == 1 && entry.getKey().stream().findFirst().get().equals(v)))
                                                                                                                                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:510: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:663: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .flatMap(t -> t);
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:660: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                .reduce((od1, od2) -> od1
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/UnionNodeImpl.java:767: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new QueryNodeSubstitutionException("The descending substitution " + mergedSubstitution
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/SafeSeparatorFragment.java:87: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern pattern;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:130: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expecting " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:222: error: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:228: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("cannot be empty because there is at least one variable in the templates (taken together)"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:413: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Pattern injectivePattern; // lazy initalization
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/ObjectStringTemplateFunctionSymbolImpl.java:474: error: [optional.collection] Don't use Optional to wrap a collection type.
                return Optional.empty();
                                     ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/AggregationNodeImpl.java:68: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:37: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:51: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                          Optional<ImmutableExpression> constraint,
                                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtendedProjectionNodeImpl.java:133: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(ConstructionNodeImpl.EmptyTreeException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:288: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        v -> getDeterminedBy(Optional.ofNullable(substitution.get(v)).orElse(v), variableNullability)
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:592: warning: [optional.field] Don't use Optional as the type of a field.
        public final Optional<ImmutableExpression> filter;
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ConstructionNodeImpl.java:597: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                          Optional<ImmutableExpression> newF) {
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/IncrementalEvaluationImpl.java:21: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final ImmutableExpression simplifiedExpression;
                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/IQImpl.java:29: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableGenerator variableGenerator;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DistinctNodeImpl.java:54: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:145: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<Variable> optionalNumSubVariable, Optional<Variable> optionalIncompatibleSubVariable,
                                                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:164: error: [methodref.receiver] Incompatible receiver type
                        .map(Optional::get))
                             ^
  found   : @Present Optional<@MaybePresent DefinitionPushDownRequest>
  required: @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
  Consequence: method in @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest get(@Present Optional<@MaybePresent DefinitionPushDownRequest> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest>
    @MaybePresent DefinitionPushDownRequest apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DefinitionPushDownRequest>, @MaybePresent DefinitionPushDownRequest> this, @MaybePresent Optional<@MaybePresent DefinitionPushDownRequest> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:202: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Substitution<ImmutableFunctionalTerm> computeSubstitution(Optional<Variable> optionalNumAvgVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalNumSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:204: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleCountVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:205: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                      Optional<Variable> optionalIncompatibleSubVariable,
                                                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:213: error: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, createAggregate(xsdDecimal, optionalNumSubVariable.get(), termFactory)));
                                                                                                       ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:219: error: [method.invocation] call to get() not allowed on the given receiver.
                .map(v -> Maps.immutableEntry(v, termFactory.getDBCount(optionalIncompatibleSubVariable.get(), false)));
                                                                                                           ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:236: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableFunctionalTerm computeLiftableTerm(Optional<Variable> optionalNumAvgVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:238: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> optionalIncompatibleCountVariable,
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:253: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeLexicalTerm(Optional<Variable> optionalFloatingAggVariable,
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                             Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:275: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private ImmutableTerm computeTypeTerm(Optional<Variable> optionalNumAvgVariable,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractStatisticalSPARQLAggregationFunctionSymbolImpl.java:277: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                          Optional<Map.Entry<ImmutableExpression, ? extends ImmutableTerm>> incompatibleWhenPair,
                                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/dbschema/impl/LensImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private]
    private IQ iq;
               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:11: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<DBTermType> itemType;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:18: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ArrayDBTermType(String arrayStr, TermTypeAncestry ancestry, Optional<DBTermType> itemType, ArrayTypeFromSignature parsingFunction) {
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/ArrayDBTermType.java:65: error: [method.invocation] call to get() not allowed on the given receiver.
        return ImmutableList.of(this.itemType.get());
                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/template/impl/LiteralTemplateFactory.java:27: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<RDFDatatype> extractDatatype(Optional<String> lang, Optional<IRI> iri) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/TypeConstantDictionaryImpl.java:51: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new NoIntConstantForTermTypeConstantException(constant));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/FalseOrNullFunctionSymbolImpl.java:25: error: [method.invocation] call to get() not allowed on the given receiver.
                .map(t -> t.negate(termFactory))).get();
                                                     ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:120: error: [method.invocation] call to get() not allowed on the given receiver.
                                .get(),
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBAndFunctionSymbol.java:125: error: [method.invocation] call to get() not allowed on the given receiver.
                                .get()))
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBBooleanConnectorFunctionSymbol.java:95: error: [method.invocation] call to get() not allowed on the given receiver.
                        e -> e.getValue().get()));
                                             ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeafIQTreeImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2056: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                        .orElseGet(() -> getDBCastFunctionSymbol(inputType, dbStringType)));
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBFunctionSymbolFactory.java:2073: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(() -> getDBCastFunctionSymbol(dbStringType, targetDBType));
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:48: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("The first term of an IF_ELSE_NULL " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:68: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Inconsistent evaluation"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:164: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("The first term in ifElseNullTerms was expected " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:177: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("Was expected an immutable expression as first term"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:200: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("was expected an ImmutableExpression as first sub-term"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultDBIfElseNullFunctionSymbol.java:235: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new IllegalArgumentException("Wrong index"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:58: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<Variable> definedVariable) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:64: error: [argument] incompatible argument for parameter definedVariable of ProjectionDecomposerImpl.decomposeDefinition.
                        .map(t -> decomposeDefinition(t, variableGenerator, Optional.empty()))
                                                                                          ^
  found   : @MaybePresent Optional<@MaybePresent Variable>
  required: @Present Optional<@MaybePresent Variable>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecomposerImpl.java:121: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<Substitution<ImmutableTerm>> substitution;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonPropagatedOrSubstitutedNumericTypeFunctionSymbolImpl.java:62: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:83: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                    Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:94: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("otherTerms must be non-empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:100: error: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableList<@MaybePresent RDFTermTypeConstant>, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/AbstractCommonDenominatorFunctionSymbol.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                         Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/UnaryIQTreeImpl.java:74: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                        Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                                                                      ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> knownVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:40: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:188: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<ImmutableExpression> normalizeConstraint(Optional<ImmutableExpression> constraint,
                                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/AbstractCompositeIQTree.java:206: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                 Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator);
                                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/NumberDBTermType.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final RDFDatatype rdfDatatype;
                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:39: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Long limit;
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:228: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException("There should be one child"));
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:235: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one child expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/SliceNodeImpl.java:337: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child, VariableGenerator variableGenerator) {
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/constraints/impl/DBLinearInclusionDependenciesImpl.java:35: error: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  required: @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
  Consequence: method in @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> get(@Present Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>>
    @MaybePresent DataAtom<@MaybePresent RelationPredicate> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>>, @MaybePresent DataAtom<@MaybePresent RelationPredicate>> this, @MaybePresent Optional<@MaybePresent DataAtom<@MaybePresent RelationPredicate>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:349: error: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBHoursBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBHoursBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:351: error: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBMinutesBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBMinutesBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:353: error: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBSecondsBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBSecondsBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/FunctionSymbolFactoryImpl.java:355: error: [purity.methodref] Incompatible purity declaration
                        false, TermFactory::getDBMillisBetweenFromDateTime),
                               ^
  Method in @MaybePresent TermFactory
    @MaybePresent ImmutableFunctionalTerm getDBMillisBetweenFromDateTime(@MaybePresent TermFactory this, @MaybePresent ImmutableTerm p0, @MaybePresent ImmutableTerm p1)
    is not a valid method reference for method in @MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm>
    @MaybePresent ImmutableFunctionalTerm apply(@MaybePresent TriFunction<@MaybePresent TermFactory, @MaybePresent ImmutableTerm, @MaybePresent ImmutableTerm, @MaybePresent ImmutableFunctionalTerm> this, @MaybePresent TermFactory p0, @MaybePresent ImmutableTerm p1, @MaybePresent ImmutableTerm p2)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:34: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> nullableVariables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/VariableNullabilityImpl.java:36: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableMap<Variable, Integer> variableMap;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/DataNodeImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeAncestryImpl.java:28: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(DifferentTermTypeOriginException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:71: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new UnknownClassException(String.format(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/injection/impl/OntopAbstractModule.java:164: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new UnknownClassException(String.format(
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:17: error: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::everything;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> everything(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : [SIDE_EFFECT_FREE]
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:19: error: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidInteger;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidInteger(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:21: error: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidDecimal;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @MaybePresent Optional<@MaybePresent Boolean> isValidDecimal(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:23: error: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidDouble;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidDouble(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:25: error: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::isValidUUID;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @Present Optional<@MaybePresent Boolean> isValidUUID(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/lexical/DefaultLexicalSpaces.java:30: error: [purity.methodref] Incompatible purity declaration
                return DefaultLexicalSpaces::unknown;
                       ^
  Method in @MaybePresent DefaultLexicalSpaces
    @MaybePresent Optional<@MaybePresent Boolean> unknown(@MaybePresent String p0)
    is not a valid method reference for method in @MaybePresent LexicalSpace
    @MaybePresent Optional<@MaybePresent Boolean> includes(@MaybePresent LexicalSpace this, @MaybePresent String p0)
  found   : [SIDE_EFFECT_FREE]
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:109: warning: [optional.field] Don't use Optional as the type of a field.
        private final Optional<ImmutableExpression> joiningCondition;
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:115: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                      Optional<ImmutableExpression> joiningCondition, VariableGenerator variableGenerator,
                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:128: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        public State(ImmutableList<IQTree> children, Optional<ImmutableExpression> joiningCondition,
                                                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateConditionAndChildren(Optional<ImmutableExpression> newCondition,
                                                                               ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:148: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
        private State updateParentConditionAndChildren(UnaryOperatorNode newParent, Optional<ImmutableExpression> newCondition,
                                                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:245: error: [purity.methodref] Incompatible purity declaration
                        newChildrenVariableNullability, this::convertIntoState);
                                                        ^
  Method in @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State
    @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State convertIntoState(@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
    is not a valid method reference for method in @MaybePresent BindingLiftConverter<@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State>
    @MaybePresent InnerJoinNormalizerImpl.@MaybePresent State convert(@MaybePresent BindingLiftConverter<@MaybePresent InnerJoinNormalizerImpl.@MaybePresent State> this, @MaybePresent ImmutableList<@MaybePresent IQTree> p0, @MaybePresent IQTree p1, @MaybePresent int p2, @MaybePresent Optional<@MaybePresent ImmutableExpression> p3, @MaybePresent Substitution<@MaybePresent ImmutableTerm> p4, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p5)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:254: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                Optional<ImmutableExpression> notNormalizedCondition, Substitution<ImmutableTerm> ascendingSubstitution,
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:452: error: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get);
                         ^
  found   : @Present Optional<@MaybePresent ImmutableExpression>
  required: @MaybePresent Optional<@MaybePresent ImmutableExpression>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression get(@Present Optional<@MaybePresent ImmutableExpression> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression>
    @MaybePresent ImmutableExpression apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableExpression>, @MaybePresent ImmutableExpression> this, @MaybePresent Optional<@MaybePresent ImmutableExpression> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/InnerJoinNormalizerImpl.java:505: warning: [optional.field] Don't use Optional as the type of a field.
        final Optional<ImmutableExpression> condition;
                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:141: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final FilterNode sampleFilter;
                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:143: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
        private final ConstructionNode childConstructionNode;
                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/AggregationNormalizerImpl.java:298: error: [method.invocation] call to get() not allowed on the given receiver.
                    s -> newAggregationSubstitution.compose(substitutionFactory.getSubstitution(sampleVariable.get(), termFactory.getDBSample(termFactory.getDBIntegerConstant(1), termFactory.getTypeFactory().getDBTypeFactory().getDBLargeIntegerType())))
                                                                                                                  ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:12: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<ImmutableExpression> optionalExpression;
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ExpressionAndSubstitutionImpl.java:15: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitutionImpl(Optional<ImmutableExpression> optionalExpression,
                                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:48: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:52: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:56: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:60: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:64: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:147: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = determinants.stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:149: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:155: error: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#05 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#05 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm>
    capture#06 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#06 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:213: error: [methodref.receiver] Incompatible receiver type
                    .map(Optional::get)
                         ^
  found   : @Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  required: @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> get(@Present Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>>
    @MaybePresent ImmutableSet<@MaybePresent Variable> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>>, @MaybePresent ImmutableSet<@MaybePresent Variable>> this, @MaybePresent Optional<@MaybePresent ImmutableSet<@MaybePresent Variable>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: error: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:220: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> arguments = uniqueConstraint.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:222: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: error: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:225: error: [optional.collection] Don't use Optional to wrap a collection type.
            return Optional.empty();
                                 ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:219: error: [optional.collection] Don't use Optional to wrap a collection type.
    private Optional<ImmutableSet<Variable>> convertUniqueConstraint(UniqueConstraint uniqueConstraint) {
                                             ^
  Use an empty collection to represent the absence of values.
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:228: error: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#07 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#07 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm>
    capture#08 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#08 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:239: error: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>
    @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>>, @MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableSet<@MaybePresent Variable>, @MaybePresent ImmutableSet<@MaybePresent Variable>>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:245: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> determinants = functionalDependency.getDeterminants().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:247: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:249: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
        ImmutableList<Optional<? extends VariableOrGroundTerm>> dependents = functionalDependency.getDependents().stream()
                                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:251: warning: [optional.as.element.type] Don't use Optional as the element type in a collection.
                .collect(ImmutableCollectors.toList());
                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:258: error: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#09 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#09 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm>
    capture#010 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#010 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ExtensionalDataNodeImpl.java:264: error: [methodref.receiver] Incompatible receiver type
                            .map(Optional::get)
                                 ^
  found   : @Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm>
  required: @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
  Consequence: method in @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>
    capture#011 extends @MaybePresent VariableOrGroundTerm get(@Present Optional<capture#011 extends @MaybePresent VariableOrGroundTerm> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm>
    capture#012 extends @MaybePresent VariableOrGroundTerm apply(@MaybePresent Function<@MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm>, capture#012 extends @MaybePresent VariableOrGroundTerm> this, @MaybePresent Optional<? extends @MaybePresent VariableOrGroundTerm> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:20: warning: [type.anno.before.modifier] write type annotation @Nonnull() immediately before type, after modifiers [private, final]
    private final DBTermType inputType;
                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:33: error: [contracts.postcondition.override] Subclass postcondition is weaker for 'this.inputType' in checkValueValidityForDecomposition.
    protected boolean checkValueValidityForDecomposition(String value) {
                      ^
    In superclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultSimpleDBCastFunctionSymbol: @MaybePresent
    In subclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultCastIntegerToStringFunctionSymbol: no information
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/DefaultCastIntegerToStringFunctionSymbol.java:40: error: [contracts.postcondition.override] Subclass postcondition is weaker for 'this.inputType' in evaluateStrictEqWithNonNullConstant.
    protected IncrementalEvaluation evaluateStrictEqWithNonNullConstant(ImmutableList<? extends ImmutableTerm> terms,
                                    ^
    In superclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultSimpleDBCastFunctionSymbol: @MaybePresent
    In subclass it.unibz.inf.ontop.model.term.functionsymbol.db.impl.DefaultCastIntegerToStringFunctionSymbol: no information
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:113: error: [method.invocation] call to get() not allowed on the given receiver.
                        otherExpressionBuilder.add(evaluation.getNewExpression().get());
                                                                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/AbstractDBStrictEqNeqFunctionSymbol.java:151: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new IllegalArgumentException("expressions must not be empty"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:255: error: [methodref.receiver] Incompatible receiver type
                .map(Optional::get);
                     ^
  found   : @Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  required: @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> get(@Present Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>
    @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>>, @MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> this, @MaybePresent Optional<@MaybePresent Entry<@MaybePresent ImmutableExpression, @MaybePresent RDFTermTypeConstant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/MinOrMaxOrSampleSPARQLFunctionSymbolImpl.java:333: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("At least one type to compare with was expected"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:42: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
	private final DBConstant doubleNaN;
	                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/TermFactoryImpl.java:214: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
	public Optional<ImmutableExpression> getConjunction(Optional<ImmutableExpression> optionalExpression, Stream<ImmutableExpression> expressionStream) {
	                                                                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:40: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<Variable> indexVariable;
                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:47: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                            @Assisted Optional<Variable> indexVariable,
                                                         ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:82: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<TermType> inferOutputType(Optional<TermType> flattenedVarType) {
                                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:147: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, IQTree child,
                                                                            ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:150: error: [purity.methodref] Incompatible purity declaration
                IQTree::applyDescendingSubstitution);
                ^
  Method in @MaybePresent IQTree
    @MaybePresent IQTree applyDescendingSubstitution(@MaybePresent IQTree this, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p0, @MaybePresent Optional<@MaybePresent ImmutableExpression> p1, @MaybePresent VariableGenerator p2)
    is not a valid method reference for method in @MaybePresent PropagateToChild
    @MaybePresent IQTree apply(@MaybePresent PropagateToChild this, @MaybePresent IQTree p0, @MaybePresent Substitution<? extends @MaybePresent VariableOrGroundTerm> p1, @MaybePresent Optional<@MaybePresent ImmutableExpression> p2, @MaybePresent VariableGenerator p3)
  found   : []
  required: [SIDE_EFFECT_FREE, DETERMINISTIC]
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:154: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                               Optional<ImmutableExpression> constraint, IQTree child,
                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:203: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                (c, s, constraint, vGenerator) -> c.applyDescendingSubstitutionWithoutOptimizing(s, vGenerator));
                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:236: error: [method.invocation] call to get() not allowed on the given receiver.
                .map(constraint -> Stream.concat(constraint.stream(), Stream.of(indexVariable.get()))
                                                                                                 ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/FlattenNodeImpl.java:406: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                     Optional<ImmutableExpression> optionalConstraint, VariableGenerator variableGenerator);
                                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/BinaryNonCommutativeIQTreeImpl.java:124: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/JoinLikeNodeImpl.java:26: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected JoinLikeNodeImpl(Optional<ImmutableExpression> optionalJoinCondition,
                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/NaryIQTreeImpl.java:107: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, VariableGenerator variableGenerator) {
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:29: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("BooleanDBIfElseNullFunctionSymbol was " +
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/db/impl/BooleanDBIfElseNullFunctionSymbolImpl.java:69: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                        .orElseThrow(() -> new MinorOntopInternalBugException("Was an expected an immutable expression " +
                                    ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:388: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:391: warning: [introduce.eliminate] It is bad style to create an Optional just to chain methods to get a value.
                .orElseGet(ImmutableList::of);
                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:433: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(() -> new MinorOntopInternalBugException("A projected variable was expected as argument"));
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/ValuesNodeImpl.java:485: error: [methodref.receiver] Incompatible receiver type
                .map(Optional::get)
                     ^
  found   : @Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  required: @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
  Consequence: method in @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> get(@Present Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> this)
  is not a valid method reference for method in @MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>>
    @MaybePresent ImmutableList<@MaybePresent Constant> apply(@MaybePresent Function<@MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>>, @MaybePresent ImmutableList<@MaybePresent Constant>> this, @MaybePresent Optional<@MaybePresent ImmutableList<@MaybePresent Constant>> p0)
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/LanguageTagImpl.java:13: warning: [optional.field] Don't use Optional as the type of a field.
    private final Optional<String> optionalSuffix;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/impl/FunctionalTermNullabilityImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable boundVariable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/geof/GeofGetSRIDFunctionSymbolImpl.java:44: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private Optional<String> getSRIDFromDbConstant(Optional<ImmutableTerm> immutableTerm) {
                                                                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/atom/impl/AbstractDataAtomImpl.java:23: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private String string;
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:50: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
            return optionalMergedTypeConstant.orElseThrow(() ->
                                                         ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/CommonDenominatorFunctionSymbolImpl.java:75: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                                                Optional<RDFTermTypeConstant> optionalMergedTypeConstant,
                                                                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:48: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private LeftJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalJoinCondition,
                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:92: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public LeftJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:243: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
            Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                          ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:363: error: [method.invocation] call to get() not allowed on the given receiver.
                        optionalFilterCondition.get(), nullableGroups, rightVariables))
                                                   ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/LeftJoinNodeImpl.java:428: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    private IQTree propagateDownCondition(Optional<ImmutableExpression> constraint, IQTree leftChild, IQTree rightChild,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:43: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public ExpressionAndSubstitution simplifyCondition(Optional<ImmutableExpression> nonOptimizedExpression,
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:102: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                .orElseThrow(UnsatisfiableConditionException::new);
                            ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:130: error: [method.invocation] call to get() not allowed on the given receiver.
                groundFunctionalSubstitution.get().apply(partiallySimplifiedExpression.get()),
                                                                                          ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/normalization/impl/ConditionSimplifierImpl.java:142: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public Optional<ImmutableExpression> computeDownConstraint(Optional<ImmutableExpression> optionalConstraint,
                                                                                             ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:57: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/term/functionsymbol/impl/RDFTermFunctionSymbolImpl.java:64: error: [method.invocation] call to <X>orElseThrow(java.util.function.Supplier<? extends X>) not allowed on the given receiver.
                    .orElseThrow(() -> new MinorOntopInternalBugException(
                                ^
  found   : @MaybePresent Optional</*RAW*/>
  required: @Present Optional</*RAW*/>
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:32: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNullability variableNullability;
                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:35: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Variable> variables;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:38: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private VariableNonRequirement variableNonRequirement;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:41: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<Substitution<NonVariableTerm>> possibleVariableDefinitions;
                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:44: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private ImmutableSet<ImmutableSet<Variable>> uniqueConstraints;
                                                 ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:47: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private FunctionalDependencies functionalDependencies;
                                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:50: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private]
    private Boolean isDistinct;
                    ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:102: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Variable> getVariables() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:108: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public VariableNonRequirement getVariableNonRequirement() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:119: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<Substitution<NonVariableTerm>> getPossibleVariableDefinitions() {
                                                       ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:125: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public ImmutableSet<ImmutableSet<Variable>> getUniqueConstraints() {
                                                ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:131: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public FunctionalDependencies getFunctionalDependencies() {
                                  ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.decl.anno] write type annotations [@Nullable()] immediately before type, after declaration annotation @Override()
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/impl/ConcreteIQTreeCacheImpl.java:137: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [public]
    public Boolean isDistinct() {
                   ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:14: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final TermType termType;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/model/type/impl/TermTypeInferenceImpl.java:17: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Variable variable;
                           ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:13: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> topSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/tools/impl/ProjectionDecompositionImpl.java:15: warning: [type.anno.before.modifier] write type annotation @Nullable() immediately before type, after modifiers [private, final]
    private final Substitution<ImmutableTerm> subSubstitution;
                                              ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:45: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    protected InnerJoinNodeImpl(@Assisted Optional<ImmutableExpression> optionalFilterCondition,
                                                                        ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:118: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
    public InnerJoinNode changeOptionalFilterCondition(Optional<ImmutableExpression> newOptionalFilterCondition) {
                                                                                     ^
/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/src/main/java/it/unibz/inf/ontop/iq/node/impl/InnerJoinNodeImpl.java:149: warning: [optional.parameter] Don't use Optional as the type of a formal parameter.
                                              Optional<ImmutableExpression> constraint, ImmutableList<IQTree> children,
                                                                            ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
143 errors
199 warnings
Running for wpi: 'echo' '"-----------------------------------------------------------"'

"-----------------------------------------------------------"
Running for wpi: '/homes/gws/jmsy/checker-framework/checker/bin/javac' '-Xmaxerrs' '10000' '-Xmaxwarns' '10000' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED' '-classpath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/obda/target/classes:/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/model/target/classes:/homes/gws/jmsy/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/homes/gws/jmsy/.m2/repository/io/github/solf/nullanno/3.0.0/nullanno-3.0.0.jar:/homes/gws/jmsy/.m2/repository/io/mikael/urlbuilder/2.0.9/urlbuilder-2.0.9.jar:/homes/gws/jmsy/.m2/repository/org/locationtech/proj4j/proj4j/1.1.1/proj4j-1.1.1.jar:/homes/gws/jmsy/.m2/repository/commons-codec/commons-codec/1.14/commons-codec-1.14.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.2/jackson-core-2.13.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.4.2/jackson-databind-2.13.4.2.jar:/homes/gws/jmsy/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.2/jackson-annotations-2.13.2.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model/4.2.4/rdf4j-model-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-api/4.2.4/rdf4j-model-api-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-annotation/4.2.4/rdf4j-common-annotation-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-model-vocabulary/4.2.4/rdf4j-model-vocabulary-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-exception/4.2.4/rdf4j-common-exception-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-text/4.2.4/rdf4j-common-text-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-io/4.2.4/rdf4j-common-io-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-util/4.2.4/rdf4j-common-util-4.2.4.jar:/homes/gws/jmsy/.m2/repository/org/eclipse/rdf4j/rdf4j-common-iterator/4.2.4/rdf4j-common-iterator-4.2.4.jar:/homes/gws/jmsy/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/homes/gws/jmsy/.m2/repository/org/apache/commons/commons-rdf-api/0.5.0/commons-rdf-api-0.5.0.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/guava/32.0.1-jre/guava-32.0.1-jre.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/homes/gws/jmsy/.m2/repository/org/checkerframework/checker-qual/3.8.0/checker-qual-3.8.0.jar:/homes/gws/jmsy/.m2/repository/com/google/errorprone/error_prone_annotations/2.5.1/error_prone_annotations-2.5.1.jar:/homes/gws/jmsy/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar:/homes/gws/jmsy/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/extensions/guice-assistedinject/5.0.1/guice-assistedinject-5.0.1.jar:/homes/gws/jmsy/.m2/repository/com/google/inject/guice/5.0.1/guice-5.0.1.jar:/homes/gws/jmsy/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/homes/gws/jmsy/.m2/repository/org/javabits/jgrapht/jgrapht-core/0.9.3/jgrapht-core-0.9.3.jar:' '-processor' 'optional' '-d' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/obda/target/classes' '-sourcepath' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/obda/src/main/java:/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/obda/target/generated-sources/annotations:' '-s' '/scratch/jmsy/outdir/ontop-53163dc4ee84356f30efe75a0b38af930b06295e/ontop/core/obda/target/generated-sources/annotations' '-g' '--release' '11' '--release' '11' '-encoding' 'UTF-8' '-Ainfer=ajava' '-Awarns'

error: no source files or class names
